{
  "version": 3,
  "sources": ["../../frame-ticker/dist/FrameTicker.js", "../../lodash-es/isObject.js", "../../lodash-es/_freeGlobal.js", "../../lodash-es/_root.js", "../../lodash-es/now.js", "../../lodash-es/_trimmedEndIndex.js", "../../lodash-es/_baseTrim.js", "../../lodash-es/_Symbol.js", "../../lodash-es/_getRawTag.js", "../../lodash-es/_objectToString.js", "../../lodash-es/_baseGetTag.js", "../../lodash-es/isObjectLike.js", "../../lodash-es/isSymbol.js", "../../lodash-es/toNumber.js", "../../lodash-es/debounce.js", "../../kapsule/dist/kapsule.mjs", "../../@tweenjs/tween.js/dist/tween.esm.js", "../../three-geojson-geometry/node_modules/earcut/src/earcut.js", "../../d3-array/src/ascending.js", "../../d3-array/src/descending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/number.js", "../../d3-array/src/bisect.js", "../../d3-array/src/blur.js", "../../d3-array/src/extent.js", "../../d3-array/src/fsum.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/mean.js", "../../d3-array/src/merge.js", "../../d3-array/src/range.js", "../../d3-array/src/shuffle.js", "../../d3-geo/src/math.js", "../../d3-geo/src/noop.js", "../../d3-geo/src/stream.js", "../../d3-geo/src/area.js", "../../d3-geo/src/cartesian.js", "../../d3-geo/src/bounds.js", "../../d3-geo/src/centroid.js", "../../d3-geo/src/compose.js", "../../d3-geo/src/rotation.js", "../../d3-geo/src/circle.js", "../../d3-geo/src/clip/buffer.js", "../../d3-geo/src/pointEqual.js", "../../d3-geo/src/clip/rejoin.js", "../../d3-geo/src/polygonContains.js", "../../d3-geo/src/clip/index.js", "../../d3-geo/src/clip/antimeridian.js", "../../d3-geo/src/clip/circle.js", "../../d3-geo/src/clip/line.js", "../../d3-geo/src/clip/rectangle.js", "../../d3-geo/src/length.js", "../../d3-geo/src/distance.js", "../../d3-geo/src/contains.js", "../../d3-geo/src/graticule.js", "../../d3-geo/src/interpolate.js", "../../d3-geo/src/identity.js", "../../d3-geo/src/path/area.js", "../../d3-geo/src/path/bounds.js", "../../d3-geo/src/path/context.js", "../../d3-geo/src/path/measure.js", "../../d3-geo/src/transform.js", "../../d3-geo/src/projection/fit.js", "../../d3-geo/src/projection/resample.js", "../../d3-geo/src/projection/index.js", "../../d3-geo/src/projection/azimuthal.js", "../../d3-geo/src/projection/azimuthalEqualArea.js", "../../d3-geo/src/projection/azimuthalEquidistant.js", "../../d3-geo/src/projection/mercator.js", "../../d3-geo/src/projection/equirectangular.js", "../../d3-geo/src/projection/equalEarth.js", "../../d3-geo/src/projection/gnomonic.js", "../../d3-geo/src/projection/naturalEarth1.js", "../../d3-geo/src/projection/orthographic.js", "../../d3-geo/src/projection/stereographic.js", "../../d3-geo/src/projection/transverseMercator.js", "../../three-geojson-geometry/dist/three-geojson-geometry.mjs", "../../three/examples/jsm/utils/BufferGeometryUtils.js", "../../accessor-fn/dist/accessor-fn.mjs", "../../tinycolor2/esm/tinycolor.js", "../../index-array-by/dist/index-array-by.mjs", "../../data-joint/dist/data-joint.mjs", "../../three-globe/dist/three-globe.mjs", "../../d3-scale/src/init.js", "../../d3-scale/src/ordinal.js", "../../d3-color/src/define.js", "../../d3-color/src/color.js", "../../d3-color/src/math.js", "../../d3-color/src/lab.js", "../../d3-color/src/cubehelix.js", "../../d3-interpolate/src/basis.js", "../../d3-interpolate/src/basisClosed.js", "../../d3-interpolate/src/constant.js", "../../d3-interpolate/src/color.js", "../../d3-interpolate/src/rgb.js", "../../d3-interpolate/src/numberArray.js", "../../d3-interpolate/src/array.js", "../../d3-interpolate/src/date.js", "../../d3-interpolate/src/number.js", "../../d3-interpolate/src/object.js", "../../d3-interpolate/src/string.js", "../../d3-interpolate/src/value.js", "../../d3-interpolate/src/round.js", "../../d3-interpolate/src/transform/decompose.js", "../../d3-interpolate/src/transform/parse.js", "../../d3-interpolate/src/transform/index.js", "../../d3-interpolate/src/zoom.js", "../../d3-interpolate/src/hsl.js", "../../d3-interpolate/src/hcl.js", "../../d3-interpolate/src/cubehelix.js", "../../d3-scale/src/constant.js", "../../d3-scale/src/number.js", "../../d3-scale/src/continuous.js", "../../d3-format/src/formatDecimal.js", "../../d3-format/src/exponent.js", "../../d3-format/src/formatGroup.js", "../../d3-format/src/formatNumerals.js", "../../d3-format/src/formatSpecifier.js", "../../d3-format/src/formatTrim.js", "../../d3-format/src/formatPrefixAuto.js", "../../d3-format/src/formatRounded.js", "../../d3-format/src/formatTypes.js", "../../d3-format/src/identity.js", "../../d3-format/src/locale.js", "../../d3-format/src/defaultLocale.js", "../../d3-format/src/precisionFixed.js", "../../d3-format/src/precisionPrefix.js", "../../d3-format/src/precisionRound.js", "../../d3-scale/src/tickFormat.js", "../../d3-scale/src/linear.js", "../../d3-time/src/interval.js", "../../d3-time/src/millisecond.js", "../../d3-time/src/duration.js", "../../d3-time/src/second.js", "../../d3-time/src/minute.js", "../../d3-time/src/hour.js", "../../d3-time/src/day.js", "../../d3-time/src/week.js", "../../d3-time/src/month.js", "../../d3-time/src/year.js", "../../d3-time/src/ticks.js", "../../d3-time-format/src/locale.js", "../../d3-time-format/src/defaultLocale.js", "../../d3-time-format/src/isoFormat.js", "../../d3-time-format/src/isoParse.js", "../../three-conic-polygon-geometry/node_modules/earcut/src/earcut.js", "../../robust-predicates/esm/util.js", "../../robust-predicates/esm/orient2d.js", "../../robust-predicates/esm/orient3d.js", "../../robust-predicates/esm/incircle.js", "../../robust-predicates/esm/insphere.js", "../../delaunator/index.js", "../../point-in-polygon-hao/dist/esm/index.js", "../../@turf/helpers/index.ts", "../../@turf/invariant/index.ts", "../../@turf/boolean-point-in-polygon/index.ts", "../../d3-delaunay/src/path.js", "../../d3-delaunay/src/polygon.js", "../../d3-delaunay/src/voronoi.js", "../../d3-delaunay/src/delaunay.js", "../../d3-geo-voronoi/src/math.js", "../../d3-geo-voronoi/src/cartesian.js", "../../d3-geo-voronoi/src/delaunay.js", "../../d3-geo-voronoi/src/voronoi.js", "../../three-conic-polygon-geometry/dist/three-conic-polygon-geometry.mjs", "../../h3-js/dist/libh3-browser.js", "../../h3-js/lib/bindings.js", "../../h3-js/lib/errors.js", "../../h3-js/lib/h3core.js", "../../three-fatline/dist/three-fatline.module.js", "../../three/examples/jsm/geometries/TextGeometry.js", "../../three/examples/jsm/loaders/FontLoader.js", "../../three/examples/jsm/renderers/CSS2DRenderer.js"],
  "sourcesContent": ["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"FrameTicker\",[],t):\"object\"==typeof exports?exports.FrameTicker=t():e.FrameTicker=t()}(this,function(){return function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p=\"\",t(0)}([function(e,t,i){\"use strict\";var n=i(1),r=function(){function e(e,t,i){void 0===e&&(e=NaN),void 0===t&&(t=NaN),void 0===i&&(i=!1),this._minFPS=t,this._maxFPS=e,this._timeScale=1,this._currentTick=0,this._currentTime=0,this._tickDeltaTime=0,this._isRunning=!1,this._maxInterval=isNaN(this._minFPS)?NaN:1e3/this._minFPS,this._minInterval=isNaN(this._maxFPS)?NaN:1e3/this._maxFPS,this._onResume=new n.default,this._onPause=new n.default,this._onTick=new n.default,this._onTickOncePerFrame=new n.default,i||this.resume()}return e.prototype.updateOnce=function(e){e(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._lastTimeUpdated=this.getTimer(),this._onResume.dispatch(),this.animateOnce())},e.prototype.pause=function(){this._isRunning&&(this._isRunning=!1,this._onPause.dispatch(),window.cancelAnimationFrame(this._animationFrameHandle))},e.prototype.dispose=function(){this.pause(),this._onResume.removeAll(),this._onPause.removeAll(),this._onTick.removeAll()},Object.defineProperty(e.prototype,\"currentTick\",{get:function(){return this._currentTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"currentTimeSeconds\",{get:function(){return this._currentTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"tickDeltaTimeSeconds\",{get:function(){return this._tickDeltaTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"timeScale\",{get:function(){return this._timeScale},set:function(e){this._timeScale!==e&&(this._timeScale=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"onResume\",{get:function(){return this._onResume},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"onPause\",{get:function(){return this._onPause},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"onTick\",{get:function(){return this._onTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"onTickOncePerFrame\",{get:function(){return this._onTickOncePerFrame},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"isRunning\",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),e.prototype.animateOnce=function(){var e=this;this._animationFrameHandle=window.requestAnimationFrame(function(){return e.onFrame()})},e.prototype.onFrame=function(){if(this._now=this.getTimer(),this._frameDeltaTime=this._now-this._lastTimeUpdated,isNaN(this._minInterval)||this._frameDeltaTime>=this._minInterval)if(isNaN(this._maxInterval))this.update(this._frameDeltaTime*this._timeScale,!0),this._lastTimeUpdated=this._now;else for(this._interval=Math.min(this._frameDeltaTime,this._maxInterval);this._now>=this._lastTimeUpdated+this._interval;)this.update(this._interval*this._timeScale,this._now<=this._lastTimeUpdated+2*this._maxInterval),this._lastTimeUpdated+=this._interval;this._isRunning&&this.animateOnce()},e.prototype.update=function(e,t){void 0===t&&(t=!0),this._currentTick++,this._currentTime+=e,this._tickDeltaTime=e,this._onTick.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick),t&&this._onTickOncePerFrame.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.getTimer=function(){return Date.now()},e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=r},function(e,t,i){!function(t,i){e.exports=i()}(this,function(){return function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p=\"\",t(0)}([function(e,t){\"use strict\";var i=function(){function e(){this.functions=[]}return e.prototype.add=function(e){return this.functions.indexOf(e)===-1&&(this.functions.push(e),!0)},e.prototype.remove=function(e){var t=this.functions.indexOf(e);return t>-1&&(this.functions.splice(t,1),!0)},e.prototype.removeAll=function(){return this.functions.length>0&&(this.functions.length=0,!0)},e.prototype.dispatch=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var i=this.functions.concat();i.forEach(function(t){t.apply(void 0,e)})},Object.defineProperty(e.prototype,\"numItems\",{get:function(){return this.functions.length},enumerable:!0,configurable:!0}),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=i}])})}])});", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n", "import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n", "import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n", "import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n", "import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n", "import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n", "import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n", "import debounce from 'lodash-es/debounce.js';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _createClass(e, r, t) {\n  return Object.defineProperty(e, \"prototype\", {\n    writable: false\n  }), e;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = true,\n      o = false;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ; else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = true, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar Prop = /*#__PURE__*/_createClass(function Prop(name, _ref) {\n  var _ref$default = _ref[\"default\"],\n    defaultVal = _ref$default === void 0 ? null : _ref$default,\n    _ref$triggerUpdate = _ref.triggerUpdate,\n    triggerUpdate = _ref$triggerUpdate === void 0 ? true : _ref$triggerUpdate,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function (newVal, state) {} : _ref$onChange;\n  _classCallCheck(this, Prop);\n  this.name = name;\n  this.defaultVal = defaultVal;\n  this.triggerUpdate = triggerUpdate;\n  this.onChange = onChange;\n});\nfunction index (_ref2) {\n  var _ref2$stateInit = _ref2.stateInit,\n    stateInit = _ref2$stateInit === void 0 ? function () {\n      return {};\n    } : _ref2$stateInit,\n    _ref2$props = _ref2.props,\n    rawProps = _ref2$props === void 0 ? {} : _ref2$props,\n    _ref2$methods = _ref2.methods,\n    methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n    _ref2$aliases = _ref2.aliases,\n    aliases = _ref2$aliases === void 0 ? {} : _ref2$aliases,\n    _ref2$init = _ref2.init,\n    initFn = _ref2$init === void 0 ? function () {} : _ref2$init,\n    _ref2$update = _ref2.update,\n    updateFn = _ref2$update === void 0 ? function () {} : _ref2$update;\n  // Parse props into Prop instances\n  var props = Object.keys(rawProps).map(function (propName) {\n    return new Prop(propName, rawProps[propName]);\n  });\n  return function KapsuleComp() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var classMode = !!(this instanceof KapsuleComp ? this.constructor : void 0);\n    var nodeElement = classMode ? args.shift() : undefined;\n    var _args$ = args[0],\n      options = _args$ === void 0 ? {} : _args$;\n\n    // Holds component state\n    var state = Object.assign({}, stateInit instanceof Function ? stateInit(options) : stateInit,\n    // Support plain objects for backwards compatibility\n    {\n      initialised: false\n    });\n\n    // keeps track of which props triggered an update\n    var changedProps = {};\n\n    // Component constructor\n    function comp(nodeElement) {\n      initStatic(nodeElement, options);\n      digest();\n      return comp;\n    }\n    var initStatic = function initStatic(nodeElement, options) {\n      initFn.call(comp, nodeElement, state, options);\n      state.initialised = true;\n    };\n    var digest = debounce(function () {\n      if (!state.initialised) {\n        return;\n      }\n      updateFn.call(comp, state, changedProps);\n      changedProps = {};\n    }, 1);\n\n    // Getter/setter methods\n    props.forEach(function (prop) {\n      comp[prop.name] = getSetProp(prop);\n      function getSetProp(_ref3) {\n        var prop = _ref3.name,\n          _ref3$triggerUpdate = _ref3.triggerUpdate,\n          redigest = _ref3$triggerUpdate === void 0 ? false : _ref3$triggerUpdate,\n          _ref3$onChange = _ref3.onChange,\n          onChange = _ref3$onChange === void 0 ? function (newVal, state) {} : _ref3$onChange,\n          _ref3$defaultVal = _ref3.defaultVal,\n          defaultVal = _ref3$defaultVal === void 0 ? null : _ref3$defaultVal;\n        return function (_) {\n          var curVal = state[prop];\n          if (!arguments.length) {\n            return curVal;\n          } // Getter mode\n\n          var val = _ === undefined ? defaultVal : _; // pick default if value passed is undefined\n          state[prop] = val;\n          onChange.call(comp, val, state, curVal);\n\n          // track changed props\n          !changedProps.hasOwnProperty(prop) && (changedProps[prop] = curVal);\n          if (redigest) {\n            digest();\n          }\n          return comp;\n        };\n      }\n    });\n\n    // Other methods\n    Object.keys(methods).forEach(function (methodName) {\n      comp[methodName] = function () {\n        var _methods$methodName;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return (_methods$methodName = methods[methodName]).call.apply(_methods$methodName, [comp, state].concat(args));\n      };\n    });\n\n    // Link aliases\n    Object.entries(aliases).forEach(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n        alias = _ref5[0],\n        target = _ref5[1];\n      return comp[alias] = comp[target];\n    });\n\n    // Reset all component props to their default value\n    comp.resetProps = function () {\n      props.forEach(function (prop) {\n        comp[prop.name](prop.defaultVal);\n      });\n      return comp;\n    };\n\n    //\n\n    comp.resetProps(); // Apply all prop defaults\n    state._rerender = digest; // Expose digest method\n\n    classMode && nodeElement && comp(nodeElement);\n    return comp;\n  };\n}\n\nexport { index as default };\n", "/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = {\n    Linear: {\n        None: function (amount) {\n            return amount;\n        },\n    },\n    Quadratic: {\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    },\n    Cubic: {\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    },\n    Quartic: {\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    },\n    Quintic: {\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    },\n    Sinusoidal: {\n        In: function (amount) {\n            return 1 - Math.cos((amount * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\n        },\n    },\n    Exponential: {\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    },\n    Circular: {\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    },\n    Elastic: {\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    },\n    Back: {\n        In: function (amount) {\n            var s = 1.70158;\n            return amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    },\n    Bounce: {\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    },\n};\n\nvar now;\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n// eslint-disable-next-line\n// @ts-ignore\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n    now = function () {\n        // eslint-disable-next-line\n        // @ts-ignore\n        var time = process.hrtime();\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n    // This must be bound, because directly assigning this function\n    // leads to an invocation exception in Chrome.\n    now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n    now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n    now = function () {\n        return new Date().getTime();\n    };\n}\nvar now$1 = now;\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) {\n            return _this._tweens[tweenId];\n        });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function (tween) {\n        this._tweens[tween.getId()] = tween;\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\n    };\n    Group.prototype.remove = function (tween) {\n        delete this._tweens[tween.getId()];\n        delete this._tweensAddedDuringUpdate[tween.getId()];\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now$1(); }\n        if (preserve === void 0) { preserve = false; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0) {\n            return false;\n        }\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\n                    delete this._tweens[tweenIds[i]];\n                }\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n        return true;\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(_object, _group) {\n        if (_group === void 0) { _group = mainGroup; }\n        this._object = _object;\n        this._group = _group;\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._goToEnd = false;\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.to = function (properties, duration) {\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\n        // tween's to on each update. That way the behavior is opt-in (there's\n        // currently no opt-out).\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n        this._valuesEnd = Object.create(properties);\n        if (duration !== undefined) {\n            this._duration = duration;\n        }\n        return this;\n    };\n    Tween.prototype.duration = function (d) {\n        this._duration = d;\n        return this;\n    };\n    Tween.prototype.start = function (time) {\n        if (this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n        this._startTime += this._delayTime;\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n        return this;\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // handle an array of relative values\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [startValue].concat(endValues);\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                // eslint-disable-next-line\n                for (var prop in startValue) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property][prop] = startValue[prop];\n                }\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n            }\n            else {\n                // Save the starting value, but only once.\n                if (typeof _valuesStart[property] === 'undefined') {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(Infinity);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        this._group = group;\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        if (time === void 0) { time = now$1(); }\n        if (autoStart === void 0) { autoStart = true; }\n        if (this._isPaused)\n            return true;\n        var property;\n        var elapsed;\n        var endTime = this._startTime + this._duration;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (time > endTime)\n                return false;\n            if (autoStart)\n                this.start(time);\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        elapsed = (time - this._startTime) / this._duration;\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (elapsed === 1) {\n            if (this._repeat > 0) {\n                if (isFinite(this._repeat)) {\n                    this._repeat--;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                if (this._repeatDelayTime !== undefined) {\n                    this._startTime = time + this._repeatDelayTime;\n                }\n                else {\n                    this._startTime = time + this._delayTime;\n                }\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        else {\n            return parseFloat(end);\n        }\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    return Tween;\n}());\n\nvar VERSION = '18.6.4';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\nvar getAll = TWEEN.getAll.bind(TWEEN);\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\nvar add = TWEEN.add.bind(TWEEN);\nvar remove = TWEEN.remove.bind(TWEEN);\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now$1,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    getAll: getAll,\n    removeAll: removeAll,\n    add: add,\n    remove: remove,\n    update: update,\n};\n\nexport default exports;\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, getAll, nextId, now$1 as now, remove, removeAll, update };\n", "\nexport default function earcut(data, holeIndices, dim = 2) {\n\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    let outerNode = linkedList(data, 0, outerLen, dim, true);\n    const triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    let minX, minY, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = Infinity;\n        minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = dim; i < outerLen; i += dim) {\n            const x = data[i];\n            const y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    let last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (let i = start; i < end; i += dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    } else {\n        for (let i = end - dim; i >= start; i -= dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    let p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    let stop = ear;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        const prev = ear.prev;\n        const next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            triangles.push(prev.i, ear.i, next.i); // cut off the triangle\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    let p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles) {\n    let p = start;\n    do {\n        const a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i, p.i, b.i);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    const queue = [];\n\n    for (let i = 0, len = holeIndices.length; i < len; i++) {\n        const start = holeIndices[i] * dim;\n        const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        const list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareXYSlope);\n\n    // process holes from left to right\n    for (let i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareXYSlope(a, b) {\n    let result = a.x - b.x;\n    // when the left-most point of 2 holes meet at a vertex, sort the holes counterclockwise so that when we find\n    // the bridge to the outer shell is always the point that they meet at.\n    if (result === 0) {\n        result = a.y - b.y;\n        if (result === 0) {\n            const aSlope = (a.next.y - a.y) / (a.next.x - a.x);\n            const bSlope = (b.next.y - b.y) / (b.next.x - b.x);\n            result = aSlope - bSlope;\n        }\n    }\n    return result;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    const bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    // unless they intersect at a vertex, then choose the vertex\n    if (equals(hole, p)) return p;\n    do {\n        if (equals(hole, p.next)) return p.next;\n        else if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            const tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let numMerges;\n    let inSize = 1;\n\n    do {\n        let p = list;\n        let e;\n        list = null;\n        let tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            let q = p;\n            let pSize = 0;\n            for (let i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            let qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a point lies within a convex triangle but false if its equal to the first point of the triangle\nfunction pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, px, py) {\n    return !(ax === px && ay === py) && pointInTriangle(ax, ay, bx, by, cx, cy, px, py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = createNode(a.i, a.x, a.y),\n        b2 = createNode(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = createNode(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction createNode(i, x, y) {\n    return {\n        i, // vertex index in coordinates array\n        x, y, // vertex coordinates\n        prev: null, // previous and next vertex nodes in a polygon ring\n        next: null,\n        z: 0, // z-order curve value\n        prevZ: null, // previous and next nodes in z-order\n        nextZ: null,\n        steiner: false // indicates whether this is a steiner point\n    };\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nexport function deviation(data, holeIndices, dim, triangles) {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    let polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (let i = 0, len = holeIndices.length; i < len; i++) {\n            const start = holeIndices[i] * dim;\n            const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    let trianglesArea = 0;\n    for (let i = 0; i < triangles.length; i += 3) {\n        const a = triangles[i] * dim;\n        const b = triangles[i + 1] * dim;\n        const c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n}\n\nfunction signedArea(data, start, end, dim) {\n    let sum = 0;\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nexport function flatten(data) {\n    const vertices = [];\n    const holes = [];\n    const dimensions = data[0][0].length;\n    let holeIndex = 0;\n    let prevLen = 0;\n\n    for (const ring of data) {\n        for (const p of ring) {\n            for (let d = 0; d < dimensions; d++) vertices.push(p[d]);\n        }\n        if (prevLen) {\n            holeIndex += prevLen;\n            holes.push(holeIndex);\n        }\n        prevLen = ring.length;\n    }\n    return {vertices, holes, dimensions};\n}\n", "export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n", "import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n", "export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export function blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError(\"invalid r\");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError(\"invalid length\");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\n\nexport const blur2 = Blur2(blurf);\n\nexport const blurImage = Blur2(blurfImage);\n\nfunction Blur2(blur) {\n  return function(data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError(\"invalid rx\");\n    if (!((ry = +ry) >= 0)) throw new RangeError(\"invalid ry\");\n    let {data: values, width, height} = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError(\"invalid width\");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError(\"invalid height\");\n    if (!width || !height || (!rx && !ry)) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n    return data;\n  };\n}\n\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\n\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\n\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n}\n\n// Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], …, S[i], …, S[i + r]}, where r = ⌊radius⌋, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - ⌊radius⌋.\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n}\n\n// Like blurf, but optimized for integer radius.\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius * S[start];\n    const s = step * radius;\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n", "export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n", "// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n", "export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n", "function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n", "export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n", "import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n", "import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n", "import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n", "import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n", "export default x => x;\n", "import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n", "import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "import { BufferGeometry, Float32BufferAttribute } from 'three';\nimport { flatten } from 'earcut';\nimport { geoDistance, geoInterpolate } from 'd3-geo';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _createClass(e, r, t) {\n  return Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _createForOfIteratorHelper(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (!t) {\n    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {\n      t && (r = t);\n      var n = 0,\n        F = function () {};\n      return {\n        s: F,\n        n: function () {\n          return n >= r.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: r[n++]\n          };\n        },\n        e: function (r) {\n          throw r;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var o,\n    a = !0,\n    u = !1;\n  return {\n    s: function () {\n      t = t.call(r);\n    },\n    n: function () {\n      var r = t.next();\n      return a = r.done, r;\n    },\n    e: function (r) {\n      u = !0, o = r;\n    },\n    f: function () {\n      try {\n        a || null == t.return || t.return();\n      } finally {\n        if (u) throw o;\n      }\n    }\n  };\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar interpolateLine = function interpolateLine() {\n  var lineCoords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var maxDegDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var result = [];\n  var prevPnt = null;\n  lineCoords.forEach(function (pnt) {\n    if (prevPnt) {\n      var dist = geoDistance(pnt, prevPnt) * 180 / Math.PI;\n      if (dist > maxDegDistance) {\n        var interpol = geoInterpolate(prevPnt, pnt);\n        var tStep = 1 / Math.ceil(dist / maxDegDistance);\n        var t = tStep;\n        while (t < 1) {\n          result.push(interpol(t));\n          t += tStep;\n        }\n      }\n    }\n    result.push(prevPnt = pnt);\n  });\n  return result;\n};\n\nvar THREE = typeof window !== 'undefined' && window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry,\n  Float32BufferAttribute: Float32BufferAttribute\n};\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nvar GeoJsonGeometry = /*#__PURE__*/function (_THREE$BufferGeometry) {\n  function GeoJsonGeometry(geoJson) {\n    var _this;\n    var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var resolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n    _classCallCheck(this, GeoJsonGeometry);\n    _this = _callSuper(this, GeoJsonGeometry);\n    _this.type = 'GeoJsonGeometry';\n    _this.parameters = {\n      geoJson: geoJson,\n      radius: radius,\n      resolution: resolution\n    };\n\n    // process various geometry types\n    var groups = ({\n      Point: genPoint,\n      MultiPoint: genMultiPoint,\n      LineString: genLineString,\n      MultiLineString: genMultiLineString,\n      Polygon: genPolygon,\n      MultiPolygon: genMultiPolygon\n    }[geoJson.type] || function () {\n      return [];\n    })(geoJson.coordinates, radius);\n\n    // concat groups\n    var indices = [],\n      vertices = [];\n    var groupCnt = 0;\n    groups.forEach(function (newG) {\n      var prevIndCnt = indices.length;\n      concatGroup({\n        indices: indices,\n        vertices: vertices\n      }, newG);\n      _this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n    });\n\n    // build geometry\n    indices.length && _this.setIndex(indices);\n    vertices.length && _this[setAttributeFn]('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n    //\n\n    function genPoint(coords, r) {\n      var vertices = polar2Cartesian(coords[1], coords[0], r);\n      var indices = [];\n      return [{\n        vertices: vertices,\n        indices: indices\n      }];\n    }\n    function genMultiPoint(coords, r) {\n      var result = {\n        vertices: [],\n        indices: []\n      };\n      coords.map(function (c) {\n        return genPoint(c, r);\n      }).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          newPnt = _ref2[0];\n        concatGroup(result, newPnt);\n      });\n      return [result];\n    }\n    function genLineString(coords, r) {\n      var coords3d = interpolateLine(coords, resolution).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          lng = _ref4[0],\n          lat = _ref4[1];\n        return polar2Cartesian(lat, lng, r);\n      });\n      var _earcutFlatten = flatten([coords3d]),\n        vertices = _earcutFlatten.vertices;\n      var numPoints = Math.round(vertices.length / 3);\n      var indices = [];\n      for (var vIdx = 1; vIdx < numPoints; vIdx++) {\n        indices.push(vIdx - 1, vIdx);\n      }\n      return [{\n        vertices: vertices,\n        indices: indices\n      }];\n    }\n    function genMultiLineString(coords, r) {\n      var result = {\n        vertices: [],\n        indices: []\n      };\n      coords.map(function (c) {\n        return genLineString(c, r);\n      }).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n          newLine = _ref6[0];\n        concatGroup(result, newLine);\n      });\n      return [result];\n    }\n    function genPolygon(coords, r) {\n      var coords3d = coords.map(function (coordsSegment) {\n        return interpolateLine(coordsSegment, resolution).map(function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n            lng = _ref8[0],\n            lat = _ref8[1];\n          return polar2Cartesian(lat, lng, r);\n        });\n      });\n\n      // Each point generates 3 vertice items (x,y,z).\n      var _earcutFlatten2 = flatten(coords3d),\n        vertices = _earcutFlatten2.vertices,\n        holes = _earcutFlatten2.holes;\n      var firstHoleIdx = holes[0] || Infinity;\n      var outerVertices = vertices.slice(0, firstHoleIdx * 3);\n      var holeVertices = vertices.slice(firstHoleIdx * 3);\n      var holesIdx = new Set(holes);\n      var numPoints = Math.round(vertices.length / 3);\n      var outerIndices = [],\n        holeIndices = [];\n      for (var vIdx = 1; vIdx < numPoints; vIdx++) {\n        if (!holesIdx.has(vIdx)) {\n          if (vIdx < firstHoleIdx) {\n            outerIndices.push(vIdx - 1, vIdx);\n          } else {\n            holeIndices.push(vIdx - 1 - firstHoleIdx, vIdx - firstHoleIdx);\n          }\n        }\n      }\n      var groups = [{\n        indices: outerIndices,\n        vertices: outerVertices\n      }];\n      if (holes.length) {\n        groups.push({\n          indices: holeIndices,\n          vertices: holeVertices\n        });\n      }\n      return groups;\n    }\n    function genMultiPolygon(coords, r) {\n      var outer = {\n        vertices: [],\n        indices: []\n      };\n      var holes = {\n        vertices: [],\n        indices: []\n      };\n      coords.map(function (c) {\n        return genPolygon(c, r);\n      }).forEach(function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n          newOuter = _ref10[0],\n          newHoles = _ref10[1];\n        concatGroup(outer, newOuter);\n        newHoles && concatGroup(holes, newHoles);\n      });\n      var groups = [outer];\n      holes.vertices.length && groups.push(holes);\n      return groups;\n    }\n    return _this;\n  }\n  _inherits(GeoJsonGeometry, _THREE$BufferGeometry);\n  return _createClass(GeoJsonGeometry);\n}(THREE.BufferGeometry); //\nfunction concatGroup(main, extra) {\n  var prevVertCnt = Math.round(main.vertices.length / 3);\n  concatArr(main.vertices, extra.vertices);\n  concatArr(main.indices, extra.indices.map(function (ind) {\n    return ind + prevVertCnt;\n  }));\n}\nfunction concatArr(target, src) {\n  var _iterator = _createForOfIteratorHelper(src),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var e = _step.value;\n      target.push(e);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction polar2Cartesian(lat, lng) {\n  var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var phi = (90 - lat) * Math.PI / 180;\n  var theta = (90 - lng) * Math.PI / 180;\n  return [r * Math.sin(phi) * Math.cos(theta),\n  // x\n  r * Math.cos(phi),\n  // y\n  r * Math.sin(phi) * Math.sin(theta) // z\n  ];\n}\n\nexport { GeoJsonGeometry };\n", "import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\treturn new BufferAttribute( array, itemSize, normalized );\n\n}\n\n/**\n * @param {BufferAttribute}\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new BufferAttribute(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\ttmpMorphAttributes[ name ] = new BufferAttribute(\n\t\t\t\tnew morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize ),\n\t\t\t\tmorphAttr.itemSize,\n\t\t\t\tmorphAttr.normalized\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewarray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new BufferAttribute(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new BufferAttribute(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n// Creates a new, non-indexed geometry with smooth normals everywhere except faces that meet at\n// an angle greater than the crease angle.\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vertors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\tconst resultGeometry = geometry.toNonIndexed();\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries().' ); // @deprecated, r151\n\treturn mergeGeometries( geometries, useGroups );\n\n}\n\nfunction mergeBufferAttributes( attributes ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes().' ); // @deprecated, r151\n\treturn mergeAttributes( attributes );\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeBufferGeometries,\n\tmergeAttributes,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n", "var index = (function (p) {\n  return typeof p === 'function' ? p // fn\n  : typeof p === 'string' ? function (obj) {\n    return obj[p];\n  } // property name\n  : function (obj) {\n    return p;\n  };\n}); // constant\n\nexport { index as default };\n", "// This file is autogenerated. It's used to publish ESM to npm.\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nvar trimLeft = /^\\s+/;\nvar trimRight = /\\s+$/;\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n  var rgb = inputToRGB(color);\n  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n  this._ok = rgb.ok;\n}\ntinycolor.prototype = {\n  isDark: function isDark() {\n    return this.getBrightness() < 128;\n  },\n  isLight: function isLight() {\n    return !this.isDark();\n  },\n  isValid: function isValid() {\n    return this._ok;\n  },\n  getOriginalInput: function getOriginalInput() {\n    return this._originalInput;\n  },\n  getFormat: function getFormat() {\n    return this._format;\n  },\n  getAlpha: function getAlpha() {\n    return this._a;\n  },\n  getBrightness: function getBrightness() {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function getLuminance() {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function setAlpha(value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function toHsv() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this._a\n    };\n  },\n  toHsvString: function toHsvString() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function toHsl() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this._a\n    };\n  },\n  toHslString: function toHslString() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function toHex(allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function toHexString(allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function toHex8(allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function toHex8String(allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function toRgb() {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a\n    };\n  },\n  toRgbString: function toRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n  },\n  toPercentageRgb: function toPercentageRgb() {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a\n    };\n  },\n  toPercentageRgbString: function toPercentageRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n  },\n  toName: function toName() {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n    if (this._a < 1) {\n      return false;\n    }\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function toFilter(secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n  },\n  toString: function toString(format) {\n    var formatSet = !!format;\n    format = format || this._format;\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  },\n  clone: function clone() {\n    return tinycolor(this.toString());\n  },\n  _applyModification: function _applyModification(fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function lighten() {\n    return this._applyModification(_lighten, arguments);\n  },\n  brighten: function brighten() {\n    return this._applyModification(_brighten, arguments);\n  },\n  darken: function darken() {\n    return this._applyModification(_darken, arguments);\n  },\n  desaturate: function desaturate() {\n    return this._applyModification(_desaturate, arguments);\n  },\n  saturate: function saturate() {\n    return this._applyModification(_saturate, arguments);\n  },\n  greyscale: function greyscale() {\n    return this._applyModification(_greyscale, arguments);\n  },\n  spin: function spin() {\n    return this._applyModification(_spin, arguments);\n  },\n  _applyCombination: function _applyCombination(fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function analogous() {\n    return this._applyCombination(_analogous, arguments);\n  },\n  complement: function complement() {\n    return this._applyCombination(_complement, arguments);\n  },\n  monochromatic: function monochromatic() {\n    return this._applyCombination(_monochromatic, arguments);\n  },\n  splitcomplement: function splitcomplement() {\n    return this._applyCombination(_splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function triad() {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function tetrad() {\n    return this._applyCombination(polyad, [4]);\n  }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (_typeof(color) == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (_typeof(color) == \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n  // Return a 3 character hex if possible\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n  // Return a 4 character hex if possible\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random()\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction _desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\nfunction _lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\nfunction _brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\nfunction _darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction _spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction _complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({\n      h: (hsl.h + i * step) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }));\n  }\n  return result;\n}\nfunction _splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [tinycolor(color), tinycolor({\n    h: (h + 72) % 360,\n    s: hsl.s,\n    l: hsl.l\n  }), tinycolor({\n    h: (h + 216) % 360,\n    s: hsl.s,\n    l: hsl.l\n  })];\n}\nfunction _analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\nfunction _monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n  while (results--) {\n    ret.push(tinycolor({\n      h: h,\n      s: s,\n      v: v\n    }));\n    v = (v + modification) % 1;\n  }\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n  var p = amount / 100;\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a\n  };\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n  out = false;\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n  if (tinycolor.isReadable(baseColor, bestColor, {\n    level: level,\n    size: size\n  }) || !includeFallbackColors) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return n % max / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nvar matchers = function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if (match = matchers.rgb.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n  if (match = matchers.rgba.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsl.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n  if (match = matchers.hsla.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsv.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n  if (match = matchers.hsva.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hex8.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex6.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  if (match = matchers.hex4.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex3.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || {\n    level: \"AA\",\n    size: \"small\"\n  };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return {\n    level: level,\n    size: size\n  };\n}\n\nexport { tinycolor as default };\n", "function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ; else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r );\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (String )(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar index = (function () {\n  var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keyAccessors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var multiItem = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var flattenKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var keys = (keyAccessors instanceof Array ? keyAccessors.length ? keyAccessors : [undefined] : [keyAccessors]).map(function (key) {\n    return {\n      keyAccessor: key,\n      isProp: !(key instanceof Function)\n    };\n  });\n  var indexedResult = list.reduce(function (res, item) {\n    var iterObj = res;\n    var itemVal = item;\n    keys.forEach(function (_ref, idx) {\n      var keyAccessor = _ref.keyAccessor,\n        isProp = _ref.isProp;\n      var key;\n      if (isProp) {\n        var _itemVal = itemVal,\n          propVal = _itemVal[keyAccessor],\n          rest = _objectWithoutProperties(_itemVal, [keyAccessor].map(_toPropertyKey));\n        key = propVal;\n        itemVal = rest;\n      } else {\n        key = keyAccessor(itemVal, idx);\n      }\n      if (idx + 1 < keys.length) {\n        if (!iterObj.hasOwnProperty(key)) {\n          iterObj[key] = {};\n        }\n        iterObj = iterObj[key];\n      } else {\n        // Leaf key\n        if (multiItem) {\n          if (!iterObj.hasOwnProperty(key)) {\n            iterObj[key] = [];\n          }\n          iterObj[key].push(itemVal);\n        } else {\n          iterObj[key] = itemVal;\n        }\n      }\n    });\n    return res;\n  }, {});\n  if (multiItem instanceof Function) {\n    // Reduce leaf multiple values\n    (function reduce(node) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      if (level === keys.length) {\n        Object.keys(node).forEach(function (k) {\n          return node[k] = multiItem(node[k]);\n        });\n      } else {\n        Object.values(node).forEach(function (child) {\n          return reduce(child, level + 1);\n        });\n      }\n    })(indexedResult); // IIFE\n  }\n  var result = indexedResult;\n  if (flattenKeys) {\n    // flatten into array\n    result = [];\n    (function flatten(node) {\n      var accKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (accKeys.length === keys.length) {\n        result.push({\n          keys: accKeys,\n          vals: node\n        });\n      } else {\n        Object.entries(node).forEach(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            val = _ref3[1];\n          return flatten(val, [].concat(_toConsumableArray(accKeys), [key]));\n        });\n      }\n    })(indexedResult); //IIFE\n\n    if (keyAccessors instanceof Array && keyAccessors.length === 0 && result.length === 1) {\n      // clear keys if there's no key accessors (single result)\n      result[0].keys = [];\n    }\n  }\n  return result;\n});\n\nexport { index as default };\n", "import indexBy from 'index-array-by';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ; else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar _excluded = [\"createObj\", \"updateObj\", \"exitObj\", \"objBindAttr\", \"dataBindAttr\"];\nfunction diffArrays(prev, next, idAccessor) {\n  var result = {\n    enter: [],\n    update: [],\n    exit: []\n  };\n  if (!idAccessor) {\n    // use object references for comparison\n    var prevSet = new Set(prev);\n    var nextSet = new Set(next);\n    new Set([].concat(_toConsumableArray(prevSet), _toConsumableArray(nextSet))).forEach(function (item) {\n      var type = !prevSet.has(item) ? 'enter' : !nextSet.has(item) ? 'exit' : 'update';\n      result[type].push(type === 'update' ? [item, item] : item);\n    });\n  } else {\n    // compare by id (duplicate keys are ignored)\n    var prevById = indexBy(prev, idAccessor, false);\n    var nextById = indexBy(next, idAccessor, false);\n    var byId = Object.assign({}, prevById, nextById);\n    Object.entries(byId).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        item = _ref2[1];\n      var type = !prevById.hasOwnProperty(id) ? 'enter' : !nextById.hasOwnProperty(id) ? 'exit' : 'update';\n      result[type].push(type === 'update' ? [prevById[id], nextById[id]] : item);\n    });\n  }\n  return result;\n}\nfunction dataBindDiff(data, existingObjs, _ref3) {\n  var _ref3$objBindAttr = _ref3.objBindAttr,\n    objBindAttr = _ref3$objBindAttr === void 0 ? '__obj' : _ref3$objBindAttr,\n    _ref3$dataBindAttr = _ref3.dataBindAttr,\n    dataBindAttr = _ref3$dataBindAttr === void 0 ? '__data' : _ref3$dataBindAttr,\n    idAccessor = _ref3.idAccessor,\n    _ref3$purge = _ref3.purge,\n    purge = _ref3$purge === void 0 ? false : _ref3$purge;\n  var isObjValid = function isObjValid(obj) {\n    return obj.hasOwnProperty(dataBindAttr);\n  };\n  var removeObjs = existingObjs.filter(function (obj) {\n    return !isObjValid(obj);\n  });\n  var prevD = existingObjs.filter(isObjValid).map(function (obj) {\n    return obj[dataBindAttr];\n  });\n  var nextD = data;\n  var diff = purge ? {\n    enter: nextD,\n    exit: prevD,\n    update: []\n  } // don't diff data in purge mode\n  : diffArrays(prevD, nextD, idAccessor);\n  diff.update = diff.update.map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      prevD = _ref5[0],\n      nextD = _ref5[1];\n    if (prevD !== nextD) {\n      // transfer obj to new data point (if different)\n      nextD[objBindAttr] = prevD[objBindAttr];\n      nextD[objBindAttr][dataBindAttr] = nextD;\n    }\n    return nextD;\n  });\n  diff.exit = diff.exit.concat(removeObjs.map(function (obj) {\n    return _defineProperty({}, objBindAttr, obj);\n  }));\n  return diff;\n}\nfunction viewDigest(data, existingObjs,\n// list\nappendObj,\n// item => {...} function\nremoveObj, // item => {...} function\n_ref7) {\n  var _ref7$createObj = _ref7.createObj,\n    createObj = _ref7$createObj === void 0 ? function (d) {\n      return {};\n    } : _ref7$createObj,\n    _ref7$updateObj = _ref7.updateObj,\n    updateObj = _ref7$updateObj === void 0 ? function (obj, d) {} : _ref7$updateObj,\n    _ref7$exitObj = _ref7.exitObj,\n    exitObj = _ref7$exitObj === void 0 ? function (obj) {} : _ref7$exitObj,\n    _ref7$objBindAttr = _ref7.objBindAttr,\n    objBindAttr = _ref7$objBindAttr === void 0 ? '__obj' : _ref7$objBindAttr,\n    _ref7$dataBindAttr = _ref7.dataBindAttr,\n    dataBindAttr = _ref7$dataBindAttr === void 0 ? '__data' : _ref7$dataBindAttr,\n    dataDiffOptions = _objectWithoutProperties(_ref7, _excluded);\n  var _dataBindDiff = dataBindDiff(data, existingObjs, _objectSpread2({\n      objBindAttr: objBindAttr,\n      dataBindAttr: dataBindAttr\n    }, dataDiffOptions)),\n    enter = _dataBindDiff.enter,\n    update = _dataBindDiff.update,\n    exit = _dataBindDiff.exit;\n\n  // Remove exiting points\n  exit.forEach(function (d) {\n    var obj = d[objBindAttr];\n    delete d[objBindAttr]; // unbind obj\n\n    exitObj(obj);\n    removeObj(obj);\n  });\n  var newObjs = createObjs(enter);\n  var pointsData = [].concat(_toConsumableArray(enter), _toConsumableArray(update));\n  updateObjs(pointsData);\n\n  // Add new points\n  newObjs.forEach(appendObj);\n\n  //\n\n  function createObjs(data) {\n    var newObjs = [];\n    data.forEach(function (d) {\n      var obj = createObj(d);\n      if (obj) {\n        obj[dataBindAttr] = d;\n        d[objBindAttr] = obj;\n        newObjs.push(obj);\n      }\n    });\n    return newObjs;\n  }\n  function updateObjs(data) {\n    data.forEach(function (d) {\n      var obj = d[objBindAttr];\n      if (obj) {\n        obj[dataBindAttr] = d;\n        updateObj(obj, d);\n      }\n    });\n  }\n}\n\nexport { viewDigest as default };\n", "import { BackSide, BufferAttribute, Color, Mesh, ShaderMaterial, LineBasicMaterial, LineSegments, MeshPhongMaterial, SphereGeometry, TextureLoader, BufferGeometry, CylinderGeometry, Matrix4, MeshBasicMaterial, MeshLambertMaterial, Object3D, Vector3, CubicBezierCurve3, Curve, Float32BufferAttribute, Group, Line, NormalBlending, QuadraticBezierCurve3, TubeGeometry, DoubleSide, Euler, CircleGeometry, Vector2 } from 'three';\nimport Kapsule from 'kapsule';\nimport TWEEN from '@tweenjs/tween.js';\nimport { GeoJsonGeometry } from 'three-geojson-geometry';\nimport { geoGraticule10, geoDistance, geoInterpolate } from 'd3-geo';\nimport * as _bfg from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport accessorFn from 'accessor-fn';\nimport tinyColor from 'tinycolor2';\nimport dataJoint from 'data-joint';\nimport _FrameTicker from 'frame-ticker';\nimport { scaleLinear } from 'd3-scale';\nimport { ConicPolygonGeometry } from 'three-conic-polygon-geometry';\nimport indexBy from 'index-array-by';\nimport { latLngToCell, cellToLatLng, cellToBoundary, polygonToCells } from 'h3-js';\nimport { Line2, LineGeometry, LineMaterial } from 'three-fatline';\nimport { interpolateArray } from 'd3-interpolate';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar materialDispose = function materialDispose(material) {\n  if (material instanceof Array) {\n    material.forEach(materialDispose);\n  } else {\n    if (material.map) {\n      material.map.dispose();\n    }\n    material.dispose();\n  }\n};\nvar deallocate = function deallocate(obj) {\n  if (obj.geometry) {\n    obj.geometry.dispose();\n  }\n  if (obj.material) {\n    materialDispose(obj.material);\n  }\n  if (obj.texture) {\n    obj.texture.dispose();\n  }\n  if (obj.children) {\n    obj.children.forEach(deallocate);\n  }\n};\nvar emptyObject = function emptyObject(obj) {\n  if (obj && obj.children) while (obj.children.length) {\n    var childObj = obj.children[0];\n    obj.remove(childObj);\n    deallocate(childObj);\n  }\n};\n\nfunction linkKapsule (kapsulePropName, kapsuleType) {\n  var dummyK = new kapsuleType(); // To extract defaults\n\n  return {\n    linkProp: function linkProp(prop) {\n      // link property config\n      return {\n        \"default\": dummyK[prop](),\n        onChange: function onChange(v, state) {\n          state[kapsulePropName][prop](v);\n        },\n        triggerUpdate: false\n      };\n    },\n    linkMethod: function linkMethod(method) {\n      // link method pass-through\n      return function (state) {\n        var kapsuleInstance = state[kapsulePropName];\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        var returnVal = kapsuleInstance[method].apply(kapsuleInstance, args);\n        return returnVal === kapsuleInstance ? this // chain based on the parent object, not the inner kapsule\n        : returnVal;\n      };\n    }\n  };\n}\n\nvar GLOBE_RADIUS = 100;\n\nfunction getGlobeRadius() {\n  return GLOBE_RADIUS;\n}\nfunction polar2Cartesian(lat, lng) {\n  var relAltitude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var phi = (90 - lat) * Math.PI / 180;\n  var theta = (90 - lng) * Math.PI / 180;\n  var r = GLOBE_RADIUS * (1 + relAltitude);\n  return {\n    x: r * Math.sin(phi) * Math.cos(theta),\n    y: r * Math.cos(phi),\n    z: r * Math.sin(phi) * Math.sin(theta)\n  };\n}\nfunction cartesian2Polar(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    z = _ref.z;\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var phi = Math.acos(y / r);\n  var theta = Math.atan2(z, x);\n  return {\n    lat: 90 - phi * 180 / Math.PI,\n    lng: 90 - theta * 180 / Math.PI - (theta < -Math.PI / 2 ? 360 : 0),\n    // keep within [-180, 180] boundaries\n    altitude: r / GLOBE_RADIUS - 1\n  };\n}\n\nvar THREE$f = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BackSide: BackSide,\n  BufferAttribute: BufferAttribute,\n  Color: Color,\n  Mesh: Mesh,\n  ShaderMaterial: ShaderMaterial\n};\nvar fragmentShader = \"\\nuniform vec3 color;\\nuniform float coefficient;\\nuniform float power;\\nvarying vec3 vVertexNormal;\\nvarying vec3 vVertexWorldPosition;\\nvoid main() {\\n  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;\\n  vec3 viewCameraToVertex\\t= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;\\n  viewCameraToVertex = normalize(viewCameraToVertex);\\n  float intensity\\t= pow(\\n    coefficient + dot(vVertexNormal, viewCameraToVertex),\\n    power\\n  );\\n  gl_FragColor = vec4(color, intensity);\\n}\";\nvar vertexShader = \"\\nvarying vec3 vVertexWorldPosition;\\nvarying vec3 vVertexNormal;\\nvoid main() {\\n  vVertexNormal\\t= normalize(normalMatrix * normal);\\n  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\\n  gl_Position\\t= projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n\";\nvar defaultOptions = {\n  backside: true,\n  coefficient: 0.5,\n  color: 'gold',\n  size: 2,\n  power: 1\n};\n\n// Based off: http://stemkoski.blogspot.fr/2013/07/shaders-in-threejs-glow-and-halo.html\nfunction createGlowMaterial(coefficient, color, power) {\n  return new THREE$f.ShaderMaterial({\n    depthWrite: false,\n    fragmentShader: fragmentShader,\n    transparent: true,\n    uniforms: {\n      coefficient: {\n        value: coefficient\n      },\n      color: {\n        value: new THREE$f.Color(color)\n      },\n      power: {\n        value: power\n      }\n    },\n    vertexShader: vertexShader\n  });\n}\nfunction createGlowGeometry(geometry, size) {\n  // expect BufferGeometry\n  var glowGeometry = geometry.clone();\n\n  // Resize vertex positions according to normals\n  var position = new Float32Array(geometry.attributes.position.count * 3);\n  for (var idx = 0, len = position.length; idx < len; idx++) {\n    var normal = geometry.attributes.normal.array[idx];\n    var curPos = geometry.attributes.position.array[idx];\n    position[idx] = curPos + normal * size;\n  }\n  glowGeometry.setAttribute('position', new THREE$f.BufferAttribute(position, 3));\n  return glowGeometry;\n}\nfunction createGlowMesh(geometry) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  var backside = options.backside,\n    coefficient = options.coefficient,\n    color = options.color,\n    size = options.size,\n    power = options.power;\n  var glowGeometry = createGlowGeometry(geometry, size);\n  var glowMaterial = createGlowMaterial(coefficient, color, power);\n  if (backside) {\n    glowMaterial.side = THREE$f.BackSide;\n  }\n  return new THREE$f.Mesh(glowGeometry, glowMaterial);\n}\n\nvar THREE$e = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Color: Color,\n  LineBasicMaterial: LineBasicMaterial,\n  LineSegments: LineSegments,\n  Mesh: Mesh,\n  MeshPhongMaterial: MeshPhongMaterial,\n  SphereGeometry: SphereGeometry,\n  TextureLoader: TextureLoader\n};\n\n//\n\nvar GlobeLayerKapsule = Kapsule({\n  props: {\n    globeImageUrl: {},\n    bumpImageUrl: {},\n    showGlobe: {\n      \"default\": true,\n      onChange: function onChange(showGlobe, state) {\n        state.globeObj.visible = !!showGlobe;\n      },\n      triggerUpdate: false\n    },\n    showGraticules: {\n      \"default\": false,\n      onChange: function onChange(showGraticules, state) {\n        state.graticulesObj.visible = !!showGraticules;\n      },\n      triggerUpdate: false\n    },\n    showAtmosphere: {\n      \"default\": true,\n      onChange: function onChange(showAtmosphere, state) {\n        state.atmosphereObj && (state.atmosphereObj.visible = !!showAtmosphere);\n      },\n      triggerUpdate: false\n    },\n    atmosphereColor: {\n      \"default\": 'lightskyblue'\n    },\n    atmosphereAltitude: {\n      \"default\": 0.15\n    },\n    onReady: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    }\n  },\n  methods: {\n    globeMaterial: function globeMaterial(state, _globeMaterial) {\n      if (_globeMaterial !== undefined) {\n        state.globeObj.material = _globeMaterial || state.defaultGlobeMaterial;\n        return this;\n      }\n      return state.globeObj.material;\n    },\n    _destructor: function _destructor(state) {\n      emptyObject(state.globeObj);\n      emptyObject(state.graticulesObj);\n    }\n  },\n  stateInit: function stateInit() {\n    // create globe\n    var globeGeometry = new THREE$e.SphereGeometry(GLOBE_RADIUS, 75, 75);\n    var defaultGlobeMaterial = new THREE$e.MeshPhongMaterial({\n      color: 0x000000,\n      transparent: true\n    });\n    var globeObj = new THREE$e.Mesh(globeGeometry, defaultGlobeMaterial);\n    globeObj.rotation.y = -Math.PI / 2; // face prime meridian along Z axis\n    globeObj.__globeObjType = 'globe'; // Add object type\n\n    // create graticules\n    var graticulesObj = new THREE$e.LineSegments(new GeoJsonGeometry(geoGraticule10(), GLOBE_RADIUS, 2), new THREE$e.LineBasicMaterial({\n      color: 'lightgrey',\n      transparent: true,\n      opacity: 0.1\n    }));\n    return {\n      globeObj: globeObj,\n      graticulesObj: graticulesObj,\n      defaultGlobeMaterial: defaultGlobeMaterial\n    };\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n    state.scene.add(state.globeObj); // add globe\n    state.scene.add(state.graticulesObj); // add graticules\n\n    state.ready = false;\n  },\n  update: function update(state, changedProps) {\n    var globeMaterial = state.globeObj.material;\n    if (changedProps.hasOwnProperty('globeImageUrl')) {\n      if (!state.globeImageUrl) {\n        // Black globe if no image\n        !globeMaterial.color && (globeMaterial.color = new THREE$e.Color(0x000000));\n      } else {\n        new THREE$e.TextureLoader().load(state.globeImageUrl, function (texture) {\n          globeMaterial.map = texture;\n          globeMaterial.color = null;\n          globeMaterial.needsUpdate = true;\n\n          // ready when first globe image finishes loading (asynchronously to allow 1 frame to load texture)\n          !state.ready && (state.ready = true) && setTimeout(state.onReady);\n        });\n      }\n    }\n    if (changedProps.hasOwnProperty('bumpImageUrl')) {\n      if (!state.bumpImageUrl) {\n        globeMaterial.bumpMap = null;\n        globeMaterial.needsUpdate = true;\n      } else {\n        state.bumpImageUrl && new THREE$e.TextureLoader().load(state.bumpImageUrl, function (texture) {\n          globeMaterial.bumpMap = texture;\n          globeMaterial.needsUpdate = true;\n        });\n      }\n    }\n    if (changedProps.hasOwnProperty('atmosphereColor') || changedProps.hasOwnProperty('atmosphereAltitude')) {\n      if (state.atmosphereObj) {\n        // recycle previous atmosphere object\n        state.scene.remove(state.atmosphereObj);\n        emptyObject(state.atmosphereObj);\n      }\n      if (state.atmosphereColor && state.atmosphereAltitude) {\n        var obj = state.atmosphereObj = createGlowMesh(state.globeObj.geometry, {\n          backside: true,\n          color: state.atmosphereColor,\n          size: GLOBE_RADIUS * state.atmosphereAltitude,\n          power: 3.5,\n          // dispersion\n          coefficient: 0.1\n        });\n        obj.visible = !!state.showAtmosphere;\n        obj.__globeObjType = 'atmosphere'; // Add object type\n        state.scene.add(obj);\n      }\n    }\n    if (!state.ready && !state.globeImageUrl) {\n      // ready immediately if there's no globe image\n      state.ready = true;\n      state.onReady();\n    }\n  }\n});\n\nvar colorStr2Hex = function colorStr2Hex(str) {\n  return isNaN(str) ? parseInt(tinyColor(str).toHex(), 16) : str;\n};\nvar colorAlpha = function colorAlpha(str) {\n  return isNaN(str) ? tinyColor(str).getAlpha() : 1;\n};\nvar color2ShaderArr = function color2ShaderArr(str) {\n  var includeAlpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var rgba = tinyColor(str).toRgb();\n  var rgbArr = ['r', 'g', 'b'].map(function (d) {\n    return rgba[d] / 255;\n  });\n  return includeAlpha ? [].concat(_toConsumableArray(rgbArr), [rgba.a]) : rgbArr;\n};\nfunction setMaterialOpacity(material, opacity, depthWrite) {\n  material.opacity = opacity;\n  material.transparent = opacity < 1;\n  material.depthWrite = depthWrite === undefined ? opacity >= 1 : depthWrite; // depthWrite=false recommended for transparent materials, to prevent transparency issues https://discourse.threejs.org/t/threejs-and-the-transparent-problem/11553/31\n\n  return material;\n}\n\nfunction threeDigest(data, scene) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n    _ref$removeDelay = _ref.removeDelay,\n    removeDelay = _ref$removeDelay === void 0 ? 0 : _ref$removeDelay;\n  return dataJoint(data, scene.children, function (obj) {\n    return scene.add(obj);\n  }, function (obj) {\n    var removeFn = function removeFn() {\n      scene.remove(obj);\n      emptyObject(obj);\n      obj && obj.hasOwnProperty('__data') && delete obj.__data.__currentTargetD;\n    };\n    removeDelay ? setTimeout(removeFn, removeDelay) : removeFn();\n  }, _objectSpread2({\n    objBindAttr: '__threeObj'\n  }, options));\n}\n\nvar THREE$d = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferAttribute: BufferAttribute,\n  BufferGeometry: BufferGeometry,\n  Color: Color,\n  CylinderGeometry: CylinderGeometry,\n  Matrix4: Matrix4,\n  Mesh: Mesh,\n  MeshBasicMaterial: MeshBasicMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  Object3D: Object3D,\n  Vector3: Vector3\n};\nvar bfg$2 = Object.assign({}, _bfg);\nvar BufferGeometryUtils$2 = bfg$2.BufferGeometryUtils || bfg$2;\n\n//\n\n// support multiple method names for backwards threejs compatibility\nvar applyMatrix4Fn$1 = new THREE$d.BufferGeometry().applyMatrix4 ? 'applyMatrix4' : 'applyMatrix';\nvar PointsLayerKapsule = Kapsule({\n  props: {\n    pointsData: {\n      \"default\": []\n    },\n    pointLat: {\n      \"default\": 'lat'\n    },\n    pointLng: {\n      \"default\": 'lng'\n    },\n    pointColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    pointAltitude: {\n      \"default\": 0.1\n    },\n    // in units of globe radius\n    pointRadius: {\n      \"default\": 0.25\n    },\n    // in deg\n    pointResolution: {\n      \"default\": 12,\n      triggerUpdate: false\n    },\n    // how many slice segments in the cylinder's circumference\n    pointsMerge: {\n      \"default\": false\n    },\n    // boolean. Whether to merge all points into a single mesh for rendering performance\n    pointsTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Data accessors\n    var latAccessor = accessorFn(state.pointLat);\n    var lngAccessor = accessorFn(state.pointLng);\n    var altitudeAccessor = accessorFn(state.pointAltitude);\n    var radiusAccessor = accessorFn(state.pointRadius);\n    var colorAccessor = accessorFn(state.pointColor);\n\n    // shared geometry\n    var pointGeometry = new THREE$d.CylinderGeometry(1, 1, 1, state.pointResolution);\n    pointGeometry[applyMatrix4Fn$1](new THREE$d.Matrix4().makeRotationX(Math.PI / 2));\n    pointGeometry[applyMatrix4Fn$1](new THREE$d.Matrix4().makeTranslation(0, 0, -0.5));\n    var pxPerDeg = 2 * Math.PI * GLOBE_RADIUS / 360;\n    var pointMaterials = {}; // indexed by color\n\n    var scene = state.pointsMerge ? new THREE$d.Object3D() : state.scene; // use fake scene if merging points\n\n    threeDigest(state.pointsData, scene, {\n      createObj: createObj,\n      updateObj: updateObj\n    });\n    if (state.pointsMerge) {\n      // merge points into a single mesh\n      var pointsGeometry = !state.pointsData.length ? new THREE$d.BufferGeometry() : BufferGeometryUtils$2.mergeBufferGeometries(state.pointsData.map(function (d) {\n        var obj = d.__threeObj;\n        d.__threeObj = undefined; // unbind merged points\n\n        var geom = obj.geometry.clone();\n\n        // apply mesh world transform to vertices\n        obj.updateMatrix();\n        geom[applyMatrix4Fn$1](obj.matrix);\n\n        // color vertices\n        var color = new THREE$d.Color(colorAccessor(d));\n        var nVertices = geom.attributes.position.count;\n        var colors = new Float32Array(nVertices * 3);\n        for (var i = 0, len = nVertices; i < len; i++) {\n          var idx = i * 3;\n          colors[idx] = color.r;\n          colors[idx + 1] = color.g;\n          colors[idx + 2] = color.b;\n        }\n        geom.setAttribute('color', new THREE$d.BufferAttribute(colors, 3));\n        return geom;\n      }));\n      var points = new THREE$d.Mesh(pointsGeometry, new THREE$d.MeshBasicMaterial({\n        color: 0xffffff,\n        vertexColors: true\n      }));\n      points.__globeObjType = 'points'; // Add object type\n      points.__data = state.pointsData; // Attach obj data\n\n      emptyObject(state.scene);\n      state.scene.add(points);\n    }\n\n    //\n\n    function createObj() {\n      var obj = new THREE$d.Mesh(pointGeometry);\n      obj.__globeObjType = 'point'; // Add object type\n      return obj;\n    }\n    function updateObj(obj, d) {\n      var applyUpdate = function applyUpdate(td) {\n        var _obj$__currentTargetD = obj.__currentTargetD = td,\n          r = _obj$__currentTargetD.r,\n          alt = _obj$__currentTargetD.alt,\n          lat = _obj$__currentTargetD.lat,\n          lng = _obj$__currentTargetD.lng;\n\n        // position cylinder ground\n        Object.assign(obj.position, polar2Cartesian(lat, lng));\n\n        // orientate outwards\n        var globeCenter = state.pointsMerge ? new THREE$d.Vector3(0, 0, 0) : state.scene.localToWorld(new THREE$d.Vector3(0, 0, 0)); // translate from local to world coords\n        obj.lookAt(globeCenter);\n\n        // scale radius and altitude\n        obj.scale.x = obj.scale.y = Math.min(30, r) * pxPerDeg;\n        obj.scale.z = Math.max(alt * GLOBE_RADIUS, 0.1); // avoid non-invertible matrix\n      };\n\n      var targetD = {\n        alt: +altitudeAccessor(d),\n        r: +radiusAccessor(d),\n        lat: +latAccessor(d),\n        lng: +lngAccessor(d)\n      };\n      var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n        alt: -1e-3\n      });\n      if (Object.keys(targetD).some(function (k) {\n        return currentTargetD[k] !== targetD[k];\n      })) {\n        if (state.pointsMerge || !state.pointsTransitionDuration || state.pointsTransitionDuration < 0) {\n          // set final position\n          applyUpdate(targetD);\n        } else {\n          // animate\n          new TWEEN.Tween(currentTargetD).to(targetD, state.pointsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n        }\n      }\n      if (!state.pointsMerge) {\n        // Update materials on individual points\n        var color = colorAccessor(d);\n        var opacity = color ? colorAlpha(color) : 0;\n        var showCyl = !!opacity;\n        obj.visible = showCyl;\n        if (showCyl) {\n          if (!pointMaterials.hasOwnProperty(color)) {\n            pointMaterials[color] = new THREE$d.MeshLambertMaterial({\n              color: colorStr2Hex(color),\n              transparent: opacity < 1,\n              opacity: opacity\n            });\n          }\n          obj.material = pointMaterials[color];\n        }\n      }\n    }\n  }\n});\n\nvar _excluded = [\"stroke\"];\nvar THREE$c = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry,\n  CubicBezierCurve3: CubicBezierCurve3,\n  Curve: Curve,\n  Float32BufferAttribute: Float32BufferAttribute,\n  Group: Group,\n  Line: Line,\n  Mesh: Mesh,\n  NormalBlending: NormalBlending,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  ShaderMaterial: ShaderMaterial,\n  TubeGeometry: TubeGeometry,\n  Vector3: Vector3\n};\nvar FrameTicker$2 = _FrameTicker[\"default\"] || _FrameTicker;\n\n//\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn$1 = new THREE$c.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nvar gradientShaders$1 = {\n  uniforms: {\n    // dash param defaults, all relative to full length\n    dashOffset: {\n      value: 0\n    },\n    dashSize: {\n      value: 1\n    },\n    gapSize: {\n      value: 0\n    },\n    dashTranslate: {\n      value: 0\n    } // used for animating the dash\n  },\n\n  vertexShader: \"\\n    uniform float dashTranslate; \\n\\n    attribute vec4 vertexColor;\\n    varying vec4 vColor;\\n    \\n    attribute float vertexRelDistance;\\n    varying float vRelDistance;\\n\\n    void main() {\\n      // pass through colors and distances\\n      vColor = vertexColor;\\n      vRelDistance = vertexRelDistance + dashTranslate;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \",\n  fragmentShader: \"\\n    uniform float dashOffset; \\n    uniform float dashSize;\\n    uniform float gapSize; \\n    \\n    varying vec4 vColor;\\n    varying float vRelDistance;\\n    \\n    void main() {\\n      // ignore pixels in the gap\\n      if (vRelDistance < dashOffset) discard;\\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\\n    \\n      // set px color: [r, g, b, a], interpolated between vertices \\n      gl_FragColor = vColor; \\n    }\\n  \"\n};\nvar ArcsLayerKapsule = Kapsule({\n  props: {\n    arcsData: {\n      \"default\": []\n    },\n    arcStartLat: {\n      \"default\": 'startLat'\n    },\n    arcStartLng: {\n      \"default\": 'startLng'\n    },\n    arcEndLat: {\n      \"default\": 'endLat'\n    },\n    arcEndLng: {\n      \"default\": 'endLng'\n    },\n    arcColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    // single color, array of colors or color interpolation fn\n    arcAltitude: {},\n    // in units of globe radius\n    arcAltitudeAutoScale: {\n      \"default\": 0.5\n    },\n    // scale altitude proportional to great-arc distance between the two points\n    arcStroke: {},\n    // in deg\n    arcCurveResolution: {\n      \"default\": 64,\n      triggerUpdate: false\n    },\n    // how many straight segments in the curve\n    arcCircularResolution: {\n      \"default\": 6,\n      triggerUpdate: false\n    },\n    // how many slice segments in the tube's circumference\n    arcDashLength: {\n      \"default\": 1\n    },\n    // in units of line length\n    arcDashGap: {\n      \"default\": 0\n    },\n    arcDashInitialGap: {\n      \"default\": 0\n    },\n    arcDashAnimateTime: {\n      \"default\": 0\n    },\n    // ms\n    arcsTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n\n  methods: {\n    _destructor: function _destructor(state) {\n      state.ticker && state.ticker.dispose();\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n\n    // Kick-off dash animations\n    state.ticker = new FrameTicker$2();\n    state.ticker.onTick.add(function (_, timeDelta) {\n      state.arcsData.filter(function (d) {\n        return d.__threeObj && d.__threeObj.children.length && d.__threeObj.children[0].material && d.__threeObj.children[0].__dashAnimateStep;\n      }).forEach(function (d) {\n        var obj = d.__threeObj.children[0];\n        var step = obj.__dashAnimateStep * timeDelta;\n        var curTranslate = obj.material.uniforms.dashTranslate.value % 1e9; // reset after 1B loops\n        obj.material.uniforms.dashTranslate.value = curTranslate + step;\n      });\n    });\n  },\n  update: function update(state) {\n    // Data accessors\n    var startLatAccessor = accessorFn(state.arcStartLat);\n    var startLngAccessor = accessorFn(state.arcStartLng);\n    var endLatAccessor = accessorFn(state.arcEndLat);\n    var endLngAccessor = accessorFn(state.arcEndLng);\n    var altitudeAccessor = accessorFn(state.arcAltitude);\n    var altitudeAutoScaleAccessor = accessorFn(state.arcAltitudeAutoScale);\n    var strokeAccessor = accessorFn(state.arcStroke);\n    var colorAccessor = accessorFn(state.arcColor);\n    var dashLengthAccessor = accessorFn(state.arcDashLength);\n    var dashGapAccessor = accessorFn(state.arcDashGap);\n    var dashInitialGapAccessor = accessorFn(state.arcDashInitialGap);\n    var dashAnimateTimeAccessor = accessorFn(state.arcDashAnimateTime);\n    var sharedMaterial = new THREE$c.ShaderMaterial(_objectSpread2(_objectSpread2({}, gradientShaders$1), {}, {\n      transparent: true,\n      blending: THREE$c.NormalBlending\n    }));\n    threeDigest(state.arcsData, state.scene, {\n      createObj: function createObj() {\n        var obj = new THREE$c.Group(); // populated in updateObj\n\n        obj.__globeObjType = 'arc'; // Add object type\n        return obj;\n      },\n      updateObj: function updateObj(group, arc) {\n        var stroke = strokeAccessor(arc);\n        var useTube = stroke !== null && stroke !== undefined;\n        if (!group.children.length || useTube !== (group.children[0].type === 'Mesh')) {\n          // create or swap object types\n          emptyObject(group);\n          var _obj = useTube ? new THREE$c.Mesh() : new THREE$c.Line(new THREE$c.BufferGeometry());\n          _obj.material = sharedMaterial.clone(); // Separate material instance per object to have dedicated uniforms (but shared shaders)\n\n          group.add(_obj);\n        }\n        var obj = group.children[0];\n\n        // set dash uniforms\n        Object.assign(obj.material.uniforms, {\n          dashSize: {\n            value: dashLengthAccessor(arc)\n          },\n          gapSize: {\n            value: dashGapAccessor(arc)\n          },\n          dashOffset: {\n            value: dashInitialGapAccessor(arc)\n          }\n        });\n\n        // set dash animation step\n        var dashAnimateTime = dashAnimateTimeAccessor(arc);\n        obj.__dashAnimateStep = dashAnimateTime > 0 ? 1000 / dashAnimateTime : 0; // per second\n\n        // calculate vertex colors (to create gradient)\n        var vertexColorArray = calcColorVertexArray(colorAccessor(arc),\n        // single, array of colors or interpolator\n        state.arcCurveResolution,\n        // numSegments\n        useTube ? state.arcCircularResolution + 1 : 1 // num vertices per segment\n        );\n\n        // calculate vertex relative distances (for dashed lines)\n        var vertexRelDistanceArray = calcVertexRelDistances(state.arcCurveResolution,\n        // numSegments\n        useTube ? state.arcCircularResolution + 1 : 1,\n        // num vertices per segment\n        true // run from end to start, to animate in the correct direction\n        );\n\n        obj.geometry[setAttributeFn$1]('vertexColor', vertexColorArray);\n        obj.geometry[setAttributeFn$1]('vertexRelDistance', vertexRelDistanceArray);\n        var applyUpdate = function applyUpdate(td) {\n          var _arc$__currentTargetD = arc.__currentTargetD = td,\n            stroke = _arc$__currentTargetD.stroke,\n            curveD = _objectWithoutProperties(_arc$__currentTargetD, _excluded);\n          var curve = calcCurve(curveD);\n          if (useTube) {\n            obj.geometry && obj.geometry.dispose();\n            obj.geometry = new THREE$c.TubeGeometry(curve, state.arcCurveResolution, stroke / 2, state.arcCircularResolution);\n            obj.geometry[setAttributeFn$1]('vertexColor', vertexColorArray);\n            obj.geometry[setAttributeFn$1]('vertexRelDistance', vertexRelDistanceArray);\n          } else {\n            obj.geometry.setFromPoints(curve.getPoints(state.arcCurveResolution));\n          }\n        };\n        var targetD = {\n          stroke: stroke,\n          alt: altitudeAccessor(arc),\n          altAutoScale: +altitudeAutoScaleAccessor(arc),\n          startLat: +startLatAccessor(arc),\n          startLng: +startLngAccessor(arc),\n          endLat: +endLatAccessor(arc),\n          endLng: +endLngAccessor(arc)\n        };\n        var currentTargetD = arc.__currentTargetD || Object.assign({}, targetD, {\n          altAutoScale: -1e-3\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          if (!state.arcsTransitionDuration || state.arcsTransitionDuration < 0) {\n            // set final position\n            applyUpdate(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.arcsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n          }\n        }\n      }\n    });\n\n    //\n\n    function calcCurve(_ref) {\n      var alt = _ref.alt,\n        altAutoScale = _ref.altAutoScale,\n        startLat = _ref.startLat,\n        startLng = _ref.startLng,\n        endLat = _ref.endLat,\n        endLng = _ref.endLng;\n      var getVec = function getVec(_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 3),\n          lng = _ref3[0],\n          lat = _ref3[1],\n          alt = _ref3[2];\n        var _polar2Cartesian = polar2Cartesian(lat, lng, alt),\n          x = _polar2Cartesian.x,\n          y = _polar2Cartesian.y,\n          z = _polar2Cartesian.z;\n        return new THREE$c.Vector3(x, y, z);\n      };\n\n      //calculate curve\n      var startPnt = [startLng, startLat];\n      var endPnt = [endLng, endLat];\n      var altitude = alt;\n      (altitude === null || altitude === undefined) && (\n      // by default set altitude proportional to the great-arc distance\n      altitude = geoDistance(startPnt, endPnt) / 2 * altAutoScale);\n      if (altitude) {\n        var interpolate = geoInterpolate(startPnt, endPnt);\n        var _map = [0.25, 0.75].map(function (t) {\n            return [].concat(_toConsumableArray(interpolate(t)), [altitude * 1.5]);\n          }),\n          _map2 = _slicedToArray(_map, 2),\n          m1Pnt = _map2[0],\n          m2Pnt = _map2[1];\n        var curve = _construct(THREE$c.CubicBezierCurve3, _toConsumableArray([startPnt, m1Pnt, m2Pnt, endPnt].map(getVec)));\n\n        //const mPnt = [...interpolate(0.5), altitude * 2];\n        //curve = new THREE.QuadraticBezierCurve3(...[startPnt, mPnt, endPnt].map(getVec));\n\n        return curve;\n      } else {\n        // ground line\n        var _alt = 0.001; // slightly above the ground to prevent occlusion\n        return calcSphereArc.apply(void 0, _toConsumableArray([[].concat(startPnt, [_alt]), [].concat(endPnt, [_alt])].map(getVec)));\n      }\n\n      //\n\n      function calcSphereArc(startVec, endVec) {\n        var angle = startVec.angleTo(endVec);\n        var getGreatCirclePoint = angle === 0 ? function () {\n          return startVec.clone();\n        } // points exactly overlap\n        : function (t) {\n          return new THREE$c.Vector3().addVectors(startVec.clone().multiplyScalar(Math.sin((1 - t) * angle)), endVec.clone().multiplyScalar(Math.sin(t * angle))).divideScalar(Math.sin(angle));\n        };\n        var sphereArc = new THREE$c.Curve();\n        sphereArc.getPoint = getGreatCirclePoint;\n        return sphereArc;\n      }\n    }\n    function calcColorVertexArray(colors, numSegments) {\n      var numVerticesPerSegment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var numVerticesGroup = numSegments + 1; // one between every two segments and two at the ends\n\n      var getVertexColor;\n      if (colors instanceof Array || colors instanceof Function) {\n        var colorInterpolator = colors instanceof Array ? scaleLinear() // array of colors, interpolate at each step\n        .domain(colors.map(function (_, idx) {\n          return idx / (colors.length - 1);\n        })) // same number of stops as colors\n        .range(colors) : colors; // already interpolator fn\n\n        getVertexColor = function getVertexColor(t) {\n          return color2ShaderArr(colorInterpolator(t));\n        };\n      } else {\n        // single color, use constant\n        var vertexColor = color2ShaderArr(colors);\n        getVertexColor = function getVertexColor() {\n          return vertexColor;\n        };\n      }\n      var vertexColorArray = new THREE$c.Float32BufferAttribute(numVerticesGroup * 4 * numVerticesPerSegment, 4);\n      for (var v = 0, l = numVerticesGroup; v < l; v++) {\n        var _vertexColor = getVertexColor(v / (l - 1));\n        for (var s = 0; s < numVerticesPerSegment; s++) {\n          vertexColorArray.set(_vertexColor, (v * numVerticesPerSegment + s) * 4);\n        }\n      }\n      return vertexColorArray;\n    }\n    function calcVertexRelDistances(numSegments) {\n      var numVerticesPerSegment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var invert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var numVerticesGroup = numSegments + 1; // one between every two segments and two at the ends\n      var arrLen = numVerticesGroup * numVerticesPerSegment;\n      var vertexDistanceArray = new THREE$c.Float32BufferAttribute(arrLen, 1);\n      for (var v = 0, l = numVerticesGroup; v < l; v++) {\n        var relDistance = v / (l - 1);\n        for (var s = 0; s < numVerticesPerSegment; s++) {\n          var idx = v * numVerticesPerSegment + s;\n          var pos = invert ? arrLen - 1 - idx : idx;\n          vertexDistanceArray.setX(pos, relDistance);\n        }\n      }\n      return vertexDistanceArray;\n    }\n  }\n});\n\nvar THREE$b = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferAttribute: BufferAttribute,\n  BufferGeometry: BufferGeometry,\n  Color: Color,\n  DoubleSide: DoubleSide,\n  Mesh: Mesh,\n  MeshBasicMaterial: MeshBasicMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  Object3D: Object3D\n};\nvar bfg$1 = Object.assign({}, _bfg);\nvar BufferGeometryUtils$1 = bfg$1.BufferGeometryUtils || bfg$1;\n\n//\n\n// support multiple method names for backwards threejs compatibility\nvar applyMatrix4Fn = new THREE$b.BufferGeometry().applyMatrix4 ? 'applyMatrix4' : 'applyMatrix';\nvar HexBinLayerKapsule = Kapsule({\n  props: {\n    hexBinPointsData: {\n      \"default\": []\n    },\n    hexBinPointLat: {\n      \"default\": 'lat'\n    },\n    hexBinPointLng: {\n      \"default\": 'lng'\n    },\n    hexBinPointWeight: {\n      \"default\": 1\n    },\n    hexBinResolution: {\n      \"default\": 4\n    },\n    // 0-15. Level 0 partitions the earth in 122 (mostly) hexagonal cells. Each subsequent level sub-divides the previous in roughly 7 hexagons.\n    hexMargin: {\n      \"default\": 0.2\n    },\n    // in fraction of diameter\n    hexTopCurvatureResolution: {\n      \"default\": 5\n    },\n    // in angular degrees\n    hexTopColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    hexSideColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    hexAltitude: {\n      \"default\": function _default(_ref) {\n        var sumWeight = _ref.sumWeight;\n        return sumWeight * 0.01;\n      }\n    },\n    // in units of globe radius\n    hexBinMerge: {\n      \"default\": false\n    },\n    // boolean. Whether to merge all hex geometries into a single mesh for rendering performance\n    hexTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Accessors\n    var latAccessor = accessorFn(state.hexBinPointLat);\n    var lngAccessor = accessorFn(state.hexBinPointLng);\n    var weightAccessor = accessorFn(state.hexBinPointWeight);\n    var altitudeAccessor = accessorFn(state.hexAltitude);\n    var topColorAccessor = accessorFn(state.hexTopColor);\n    var sideColorAccessor = accessorFn(state.hexSideColor);\n    var marginAccessor = accessorFn(state.hexMargin);\n    var byH3Idx = indexBy(state.hexBinPointsData.map(function (d) {\n      return _objectSpread2(_objectSpread2({}, d), {}, {\n        h3Idx: latLngToCell(latAccessor(d), lngAccessor(d), state.hexBinResolution)\n      });\n    }), 'h3Idx');\n    var hexBins = Object.entries(byH3Idx).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        h3Idx = _ref3[0],\n        points = _ref3[1];\n      return {\n        h3Idx: h3Idx,\n        points: points,\n        sumWeight: points.reduce(function (agg, d) {\n          return agg + +weightAccessor(d);\n        }, 0)\n      };\n    });\n    var hexMaterials = {}; // indexed by color\n\n    var scene = state.hexBinMerge ? new THREE$b.Object3D() : state.scene; // use fake scene if merging hex points\n\n    threeDigest(hexBins, scene, {\n      createObj: createObj,\n      updateObj: updateObj,\n      idAccessor: function idAccessor(d) {\n        return d.h3Idx;\n      }\n    });\n    if (state.hexBinMerge) {\n      // merge points into a single mesh\n      var hexPointsGeometry = !hexBins.length ? new THREE$b.BufferGeometry() : BufferGeometryUtils$1.mergeBufferGeometries(hexBins.map(function (d) {\n        var obj = d.__threeObj;\n        d.__threeObj = undefined; // unbind merged points\n\n        // use non-indexed geometry so that groups can be colored separately, otherwise different groups share vertices\n        var geom = obj.geometry.toNonIndexed();\n\n        // apply mesh world transform to vertices\n        obj.updateMatrix();\n        geom[applyMatrix4Fn](obj.matrix);\n\n        // color vertices\n        var topColor = new THREE$b.Color(topColorAccessor(d));\n        var sideColor = new THREE$b.Color(sideColorAccessor(d));\n        var nVertices = geom.attributes.position.count;\n        var topFaceIdx = geom.groups[0].count; // starting vertex index of top group\n        var colors = new Float32Array(nVertices * 3);\n        for (var i = 0, len = nVertices; i < len; i++) {\n          var idx = i * 3;\n          var c = i >= topFaceIdx ? topColor : sideColor;\n          colors[idx] = c.r;\n          colors[idx + 1] = c.g;\n          colors[idx + 2] = c.b;\n        }\n        geom.setAttribute('color', new THREE$b.BufferAttribute(colors, 3));\n        return geom;\n      }));\n      var hexPoints = new THREE$b.Mesh(hexPointsGeometry, new THREE$b.MeshBasicMaterial({\n        color: 0xffffff,\n        vertexColors: true,\n        side: THREE$b.DoubleSide\n      }));\n      hexPoints.__globeObjType = 'hexBinPoints'; // Add object type\n      hexPoints.__data = hexBins; // Attach obj data\n\n      emptyObject(state.scene);\n      state.scene.add(hexPoints);\n    }\n\n    //\n\n    function createObj(d) {\n      var obj = new THREE$b.Mesh();\n      obj.__hexCenter = cellToLatLng(d.h3Idx);\n      obj.__hexGeoJson = cellToBoundary(d.h3Idx, true).reverse(); // correct polygon winding\n\n      // stitch longitudes at the anti-meridian\n      var centerLng = obj.__hexCenter[1];\n      obj.__hexGeoJson.forEach(function (d) {\n        var edgeLng = d[0];\n        if (Math.abs(centerLng - edgeLng) > 170) {\n          // normalize large lng distances\n          d[0] += centerLng > edgeLng ? 360 : -360;\n        }\n      });\n      obj.__globeObjType = 'hexbin'; // Add object type\n      return obj;\n    }\n    function updateObj(obj, d) {\n      // compute new geojson with relative margin\n      var relNum = function relNum(st, end, rat) {\n        return st - (st - end) * rat;\n      };\n      var margin = Math.max(0, Math.min(1, +marginAccessor(d)));\n      var _obj$__hexCenter = _slicedToArray(obj.__hexCenter, 2),\n        clat = _obj$__hexCenter[0],\n        clng = _obj$__hexCenter[1];\n      var geoJson = margin === 0 ? obj.__hexGeoJson : obj.__hexGeoJson.map(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          elng = _ref5[0],\n          elat = _ref5[1];\n        return [[elng, clng], [elat, clat]].map(function (_ref6) {\n          var _ref7 = _slicedToArray(_ref6, 2),\n            st = _ref7[0],\n            end = _ref7[1];\n          return relNum(st, end, margin);\n        });\n      });\n      var topCurvatureResolution = state.hexTopCurvatureResolution;\n      obj.geometry && obj.geometry.dispose();\n      obj.geometry = new ConicPolygonGeometry([geoJson], 0, GLOBE_RADIUS, false, true, true, topCurvatureResolution);\n      var targetD = {\n        alt: +altitudeAccessor(d)\n      };\n      var applyUpdate = function applyUpdate(td) {\n        var _obj$__currentTargetD = obj.__currentTargetD = td,\n          alt = _obj$__currentTargetD.alt;\n        obj.scale.x = obj.scale.y = obj.scale.z = 1 + alt; // scale according to altitude\n      };\n\n      var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n        alt: -1e-3\n      });\n      if (Object.keys(targetD).some(function (k) {\n        return currentTargetD[k] !== targetD[k];\n      })) {\n        if (state.hexBinMerge || !state.hexTransitionDuration || state.hexTransitionDuration < 0) {\n          // set final position\n          applyUpdate(targetD);\n        } else {\n          // animate\n          new TWEEN.Tween(currentTargetD).to(targetD, state.hexTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n        }\n      }\n      if (!state.hexBinMerge) {\n        // Update materials on individual hex points\n        var sideColor = sideColorAccessor(d);\n        var topColor = topColorAccessor(d);\n        [sideColor, topColor].forEach(function (color) {\n          if (!hexMaterials.hasOwnProperty(color)) {\n            var opacity = colorAlpha(color);\n            hexMaterials[color] = new THREE$b.MeshLambertMaterial({\n              color: colorStr2Hex(color),\n              transparent: opacity < 1,\n              opacity: opacity,\n              side: THREE$b.DoubleSide\n            });\n          }\n        });\n        obj.material = [sideColor, topColor].map(function (color) {\n          return hexMaterials[color];\n        });\n      }\n    }\n  }\n});\n\nvar THREE$a = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  DoubleSide: DoubleSide,\n  Group: Group,\n  LineBasicMaterial: LineBasicMaterial,\n  LineSegments: LineSegments,\n  Mesh: Mesh,\n  MeshBasicMaterial: MeshBasicMaterial\n};\n\n//\n\nvar PolygonsLayerKapsule = Kapsule({\n  props: {\n    polygonsData: {\n      \"default\": []\n    },\n    polygonGeoJsonGeometry: {\n      \"default\": 'geometry'\n    },\n    polygonSideColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    polygonSideMaterial: {},\n    polygonCapColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    polygonCapMaterial: {},\n    polygonStrokeColor: {},\n    polygonAltitude: {\n      \"default\": 0.01\n    },\n    // in units of globe radius\n    polygonCapCurvatureResolution: {\n      \"default\": 5\n    },\n    // in angular degrees\n    polygonsTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Data accessors\n    var geoJsonAccessor = accessorFn(state.polygonGeoJsonGeometry);\n    var altitudeAccessor = accessorFn(state.polygonAltitude);\n    var capCurvatureResolutionAccessor = accessorFn(state.polygonCapCurvatureResolution);\n    var capColorAccessor = accessorFn(state.polygonCapColor);\n    var capMaterialAccessor = accessorFn(state.polygonCapMaterial);\n    var sideColorAccessor = accessorFn(state.polygonSideColor);\n    var sideMaterialAccessor = accessorFn(state.polygonSideMaterial);\n    var strokeColorAccessor = accessorFn(state.polygonStrokeColor);\n    var singlePolygons = [];\n    state.polygonsData.forEach(function (polygon) {\n      var objAttrs = {\n        data: polygon,\n        capColor: capColorAccessor(polygon),\n        capMaterial: capMaterialAccessor(polygon),\n        sideColor: sideColorAccessor(polygon),\n        sideMaterial: sideMaterialAccessor(polygon),\n        strokeColor: strokeColorAccessor(polygon),\n        altitude: +altitudeAccessor(polygon),\n        capCurvatureResolution: +capCurvatureResolutionAccessor(polygon)\n      };\n      var geoJson = geoJsonAccessor(polygon);\n      var geoId = polygon.__id || \"\".concat(Math.round(Math.random() * 1e9)); // generate and stamp polygon ids to keep track in digest\n      polygon.__id = geoId;\n      if (geoJson.type === 'Polygon') {\n        singlePolygons.push(_objectSpread2({\n          id: \"\".concat(geoId, \"_0\"),\n          coords: geoJson.coordinates\n        }, objAttrs));\n      } else if (geoJson.type === 'MultiPolygon') {\n        singlePolygons.push.apply(singlePolygons, _toConsumableArray(geoJson.coordinates.map(function (coords, idx) {\n          return _objectSpread2({\n            id: \"\".concat(geoId, \"_\").concat(idx),\n            coords: coords\n          }, objAttrs);\n        })));\n      } else {\n        console.warn(\"Unsupported GeoJson geometry type: \".concat(geoJson.type, \". Skipping geometry...\"));\n      }\n    });\n    threeDigest(singlePolygons, state.scene, {\n      idAccessor: function idAccessor(d) {\n        return d.id;\n      },\n      createObj: function createObj() {\n        var obj = new THREE$a.Group();\n        obj.__defaultSideMaterial = new THREE$a.MeshBasicMaterial({\n          side: THREE$a.DoubleSide,\n          depthWrite: true\n        });\n        obj.__defaultCapMaterial = new THREE$a.MeshBasicMaterial({\n          side: THREE$a.DoubleSide,\n          depthWrite: true\n        });\n\n        // conic geometry\n        obj.add(new THREE$a.Mesh(undefined, [obj.__defaultSideMaterial,\n        // side material\n        obj.__defaultCapMaterial // cap material\n        ]));\n\n        // polygon stroke\n        obj.add(new THREE$a.LineSegments(undefined, new THREE$a.LineBasicMaterial()));\n        obj.__globeObjType = 'polygon'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, _ref) {\n        var coords = _ref.coords,\n          capColor = _ref.capColor,\n          capMaterial = _ref.capMaterial,\n          sideColor = _ref.sideColor,\n          sideMaterial = _ref.sideMaterial,\n          strokeColor = _ref.strokeColor,\n          altitude = _ref.altitude,\n          capCurvatureResolution = _ref.capCurvatureResolution;\n        var _obj$children = _slicedToArray(obj.children, 2),\n          conicObj = _obj$children[0],\n          strokeObj = _obj$children[1];\n\n        // hide stroke if no color set\n        var addStroke = !!strokeColor;\n        strokeObj.visible = addStroke;\n\n        // regenerate geometries if needed\n        if (!objMatch(conicObj.geometry.parameters || {}, {\n          polygonGeoJson: coords,\n          curvatureResolution: capCurvatureResolution\n        })) {\n          conicObj.geometry && conicObj.geometry.dispose();\n          conicObj.geometry = new ConicPolygonGeometry(coords, 0, GLOBE_RADIUS, false, true, true, capCurvatureResolution);\n        }\n        if (addStroke && (!strokeObj.geometry.parameters || strokeObj.geometry.parameters.geoJson.coordinates !== coords || strokeObj.geometry.parameters.resolution !== capCurvatureResolution)) {\n          strokeObj.geometry && strokeObj.geometry.dispose();\n          strokeObj.geometry = new GeoJsonGeometry({\n            type: 'Polygon',\n            coordinates: coords\n          }, GLOBE_RADIUS, capCurvatureResolution);\n        }\n\n        // replace side/cap materials if defined\n        conicObj.material[0] = sideMaterial || obj.__defaultSideMaterial;\n        conicObj.material[1] = capMaterial || obj.__defaultCapMaterial;\n\n        // update default material colors\n        [!sideMaterial && sideColor, !capMaterial && capColor].forEach(function (color, materialIdx) {\n          if (!color) return; // skip custom materials\n\n          // conic object\n          var material = conicObj.material[materialIdx];\n          var opacity = colorAlpha(color);\n          material.color.set(colorStr2Hex(color));\n          material.transparent = opacity < 1;\n          material.opacity = opacity;\n        });\n        if (addStroke) {\n          // stroke object\n          var material = strokeObj.material;\n          var opacity = colorAlpha(strokeColor);\n          material.color.set(colorStr2Hex(strokeColor));\n          material.transparent = opacity < 1;\n          material.opacity = opacity;\n        }\n        var targetD = {\n          alt: altitude\n        };\n        var applyUpdate = function applyUpdate(td) {\n          var _obj$__currentTargetD = obj.__currentTargetD = td,\n            alt = _obj$__currentTargetD.alt;\n          conicObj.scale.x = conicObj.scale.y = conicObj.scale.z = 1 + alt;\n          addStroke && (strokeObj.scale.x = strokeObj.scale.y = strokeObj.scale.z = 1 + alt + 1e-4); // stroke slightly above the conic mesh\n        };\n\n        var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n          alt: -1e-3\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          if (!state.polygonsTransitionDuration || state.polygonsTransitionDuration < 0 || currentTargetD.alt === targetD.alt) {\n            // set final position\n            applyUpdate(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.polygonsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n          }\n        }\n      }\n    });\n  }\n});\nfunction objMatch(obj, attrs) {\n  var compFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return function (a, b) {\n      return a === b;\n    };\n  };\n  return Object.entries(attrs).every(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      k = _ref3[0],\n      v = _ref3[1];\n    return obj.hasOwnProperty(k) && compFn(k)(obj[k], v);\n  });\n}\n\nvar THREE$9 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry,\n  DoubleSide: DoubleSide,\n  Mesh: Mesh,\n  MeshLambertMaterial: MeshLambertMaterial\n};\nvar bfg = Object.assign({}, _bfg);\nvar BufferGeometryUtils = bfg.BufferGeometryUtils || bfg;\n\n//\n\nvar HexedPolygonsLayerKapsule = Kapsule({\n  props: {\n    hexPolygonsData: {\n      \"default\": []\n    },\n    hexPolygonGeoJsonGeometry: {\n      \"default\": 'geometry'\n    },\n    hexPolygonColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    hexPolygonAltitude: {\n      \"default\": 0.001\n    },\n    // in units of globe radius\n    hexPolygonResolution: {\n      \"default\": 3\n    },\n    // 0-15. Level 0 partitions the earth in 122 (mostly) hexagonal cells. Each subsequent level sub-divides the previous in roughly 7 hexagons.\n    hexPolygonMargin: {\n      \"default\": 0.2\n    },\n    // in fraction of hex diameter\n    hexPolygonCurvatureResolution: {\n      \"default\": 5\n    },\n    // in angular degrees\n    hexPolygonsTransitionDuration: {\n      \"default\": 0,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Accessors\n    var geoJsonAccessor = accessorFn(state.hexPolygonGeoJsonGeometry);\n    var colorAccessor = accessorFn(state.hexPolygonColor);\n    var altitudeAccessor = accessorFn(state.hexPolygonAltitude);\n    var resolutionAccessor = accessorFn(state.hexPolygonResolution);\n    var marginAccessor = accessorFn(state.hexPolygonMargin);\n    var curvatureResolutionAccessor = accessorFn(state.hexPolygonCurvatureResolution);\n    threeDigest(state.hexPolygonsData, state.scene, {\n      createObj: function createObj(d) {\n        var obj = new THREE$9.Mesh(undefined, new THREE$9.MeshLambertMaterial({\n          side: THREE$9.DoubleSide\n        }));\n        obj.__globeObjType = 'hexPolygon'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        var geoJson = geoJsonAccessor(d);\n        var h3Res = resolutionAccessor(d);\n        var alt = altitudeAccessor(d);\n        var margin = Math.max(0, Math.min(1, +marginAccessor(d)));\n        var curvatureResolution = curvatureResolutionAccessor(d);\n\n        // update material\n        var color = colorAccessor(d);\n        var opacity = colorAlpha(color);\n        obj.material.color.set(colorStr2Hex(color));\n        obj.material.transparent = opacity < 1;\n        obj.material.opacity = opacity;\n        var targetD = {\n          alt: alt,\n          margin: margin,\n          curvatureResolution: curvatureResolution\n        };\n        var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n          alt: -1e-3\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          var h3Idxs = [];\n          if (geoJson.type === 'Polygon') {\n            polygonToCells(geoJson.coordinates, h3Res, true).forEach(function (idx) {\n              return h3Idxs.push(idx);\n            });\n          } else if (geoJson.type === 'MultiPolygon') {\n            geoJson.coordinates.forEach(function (coords) {\n              return polygonToCells(coords, h3Res, true).forEach(function (idx) {\n                return h3Idxs.push(idx);\n              });\n            });\n          } else {\n            console.warn(\"Unsupported GeoJson geometry type: \".concat(geoJson.type, \". Skipping geometry...\"));\n          }\n          var hexBins = h3Idxs.map(function (h3Idx) {\n            var hexCenter = cellToLatLng(h3Idx);\n            var hexGeoJson = cellToBoundary(h3Idx, true).reverse(); // correct polygon winding\n\n            // stitch longitudes at the anti-meridian\n            var centerLng = hexCenter[1];\n            hexGeoJson.forEach(function (d) {\n              var edgeLng = d[0];\n              if (Math.abs(centerLng - edgeLng) > 170) {\n                // normalize large lng distances\n                d[0] += centerLng > edgeLng ? 360 : -360;\n              }\n            });\n            return {\n              h3Idx: h3Idx,\n              hexCenter: hexCenter,\n              hexGeoJson: hexGeoJson\n            };\n          });\n          var applyUpdate = function applyUpdate(td) {\n            var _obj$__currentTargetD = obj.__currentTargetD = td,\n              alt = _obj$__currentTargetD.alt,\n              margin = _obj$__currentTargetD.margin,\n              curvatureResolution = _obj$__currentTargetD.curvatureResolution;\n            obj.geometry && obj.geometry.dispose();\n            obj.geometry = !hexBins.length ? new THREE$9.BufferGeometry() : BufferGeometryUtils.mergeBufferGeometries(hexBins.map(function (h) {\n              // compute new geojson with relative margin\n              var relNum = function relNum(st, end, rat) {\n                return st - (st - end) * rat;\n              };\n              var _h$hexCenter = _slicedToArray(h.hexCenter, 2),\n                clat = _h$hexCenter[0],\n                clng = _h$hexCenter[1];\n              var geoJson = margin === 0 ? h.hexGeoJson : h.hexGeoJson.map(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 2),\n                  elng = _ref2[0],\n                  elat = _ref2[1];\n                return [[elng, clng], [elat, clat]].map(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 2),\n                    st = _ref4[0],\n                    end = _ref4[1];\n                  return relNum(st, end, margin);\n                });\n              });\n              return new ConicPolygonGeometry([geoJson], GLOBE_RADIUS, GLOBE_RADIUS * (1 + alt), false, true, false, curvatureResolution);\n            }));\n          };\n          if (!state.hexPolygonsTransitionDuration || state.hexPolygonsTransitionDuration < 0) {\n            // set final position\n            applyUpdate(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.hexPolygonsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n          }\n        }\n      }\n    });\n  }\n});\n\nvar THREE$8 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Vector3: Vector3\n};\nfunction interpolateVectors(fromPnts, toPnts) {\n  var extendArr = function extendArr(arr, length) {\n    var repeatItem = arr[arr.length - 1];\n    return [].concat(_toConsumableArray(arr), _toConsumableArray(_toConsumableArray(new Array(length - arr.length)).map(function () {\n      return repeatItem;\n    })));\n  };\n  var arrLength = Math.max(fromPnts.length, toPnts.length);\n  var interpolator = interpolateArray.apply(void 0, _toConsumableArray([fromPnts, toPnts].map(function (pnts) {\n    return pnts.map(function (_ref) {\n      var x = _ref.x,\n        y = _ref.y,\n        z = _ref.z;\n      return [x, y, z];\n    });\n  }).map(function (arr) {\n    return extendArr(arr, arrLength);\n  })));\n  return function (k) {\n    return k === 0 ? fromPnts : k === 1 ? toPnts : interpolator(k).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 3),\n        x = _ref3[0],\n        y = _ref3[1],\n        z = _ref3[2];\n      return new THREE$8.Vector3(x, y, z);\n    });\n  };\n}\n\nvar THREE$7 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry,\n  Color: Color,\n  Float32BufferAttribute: Float32BufferAttribute,\n  Group: Group,\n  Line: Line,\n  NormalBlending: NormalBlending,\n  ShaderMaterial: ShaderMaterial,\n  Vector3: Vector3\n};\nvar FrameTicker$1 = _FrameTicker[\"default\"] || _FrameTicker;\n\n//\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE$7.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nvar gradientShaders = {\n  uniforms: {\n    // dash param defaults, all relative to full length\n    dashOffset: {\n      value: 0\n    },\n    dashSize: {\n      value: 1\n    },\n    gapSize: {\n      value: 0\n    },\n    dashTranslate: {\n      value: 0\n    } // used for animating the dash\n  },\n\n  vertexShader: \"\\n    uniform float dashTranslate;\\n\\n    attribute vec4 vertexColor;\\n    varying vec4 vColor;\\n\\n    attribute float vertexRelDistance;\\n    varying float vRelDistance;\\n\\n    void main() {\\n      // pass through colors and distances\\n      vColor = vertexColor;\\n      vRelDistance = vertexRelDistance + dashTranslate;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \",\n  fragmentShader: \"\\n    uniform float dashOffset;\\n    uniform float dashSize;\\n    uniform float gapSize;\\n\\n    varying vec4 vColor;\\n    varying float vRelDistance;\\n\\n    void main() {\\n      // ignore pixels in the gap\\n      if (vRelDistance < dashOffset) discard;\\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\\n\\n      // set px color: [r, g, b, a], interpolated between vertices\\n      gl_FragColor = vColor;\\n    }\\n  \"\n};\nvar PathsLayerKapsule = Kapsule({\n  props: {\n    pathsData: {\n      \"default\": []\n    },\n    pathPoints: {\n      \"default\": function _default(pnts) {\n        return pnts;\n      }\n    },\n    pathPointLat: {\n      \"default\": function _default(arr) {\n        return arr[0];\n      }\n    },\n    pathPointLng: {\n      \"default\": function _default(arr) {\n        return arr[1];\n      }\n    },\n    pathPointAlt: {\n      \"default\": 1e-3\n    },\n    pathResolution: {\n      \"default\": 2\n    },\n    // in deg\n    pathColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      }\n    },\n    // single color, array of colors or color interpolation fn\n    pathStroke: {},\n    // in deg\n    pathDashLength: {\n      \"default\": 1\n    },\n    // in units of line length\n    pathDashGap: {\n      \"default\": 0\n    },\n    pathDashInitialGap: {\n      \"default\": 0\n    },\n    pathDashAnimateTime: {\n      \"default\": 0\n    },\n    // ms\n    pathTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    },\n    // ms\n    rendererSize: {} // necessary to set correct fatline proportions\n  },\n\n  methods: {\n    _destructor: function _destructor(state) {\n      state.ticker && state.ticker.dispose();\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n\n    // Kick-off dash animations\n    state.ticker = new FrameTicker$1();\n    state.ticker.onTick.add(function (_, timeDelta) {\n      state.pathsData.filter(function (d) {\n        return d.__threeObj && d.__threeObj.children.length && d.__threeObj.children[0].material && d.__threeObj.children[0].__dashAnimateStep;\n      }).forEach(function (d) {\n        var obj = d.__threeObj.children[0];\n        var step = obj.__dashAnimateStep * timeDelta;\n        if (obj.type === 'Line') {\n          var curTranslate = obj.material.uniforms.dashTranslate.value % 1e9; // reset after 1B loops\n          obj.material.uniforms.dashTranslate.value = curTranslate + step;\n        } else if (obj.type === 'Line2') {\n          // fatline\n          var offset = obj.material.dashOffset - step;\n          var dashLength = obj.material.dashSize + obj.material.gapSize;\n          while (offset <= -dashLength) offset += dashLength; // cycle within dash length\n          obj.material.dashOffset = offset;\n        }\n      });\n    });\n  },\n  update: function update(state) {\n    // Data accessors\n    var pointsAccessor = accessorFn(state.pathPoints);\n    var pointLatAccessor = accessorFn(state.pathPointLat);\n    var pointLngAccessor = accessorFn(state.pathPointLng);\n    var pointAltAccessor = accessorFn(state.pathPointAlt);\n    var strokeAccessor = accessorFn(state.pathStroke);\n    var colorAccessor = accessorFn(state.pathColor);\n    var dashLengthAccessor = accessorFn(state.pathDashLength);\n    var dashGapAccessor = accessorFn(state.pathDashGap);\n    var dashInitialGapAccessor = accessorFn(state.pathDashInitialGap);\n    var dashAnimateTimeAccessor = accessorFn(state.pathDashAnimateTime);\n    var sharedShaderMaterial = new THREE$7.ShaderMaterial(_objectSpread2(_objectSpread2({}, gradientShaders), {}, {\n      transparent: true,\n      blending: THREE$7.NormalBlending\n    }));\n    threeDigest(state.pathsData, state.scene, {\n      createObj: function createObj() {\n        var obj = new THREE$7.Group(); // populated in updateObj\n\n        obj.__globeObjType = 'path'; // Add object type\n        return obj;\n      },\n      updateObj: function updateObj(group, path) {\n        var stroke = strokeAccessor(path);\n        var useFatLine = stroke !== null && stroke !== undefined;\n        if (!group.children.length || useFatLine === (group.children[0].type === 'Line')) {\n          // create or swap object types\n          emptyObject(group);\n          var _obj = useFatLine ? new Line2(new LineGeometry(), new LineMaterial()) : new THREE$7.Line(new THREE$7.BufferGeometry(), sharedShaderMaterial.clone() // Separate material instance per object to have dedicated uniforms (but shared shaders)\n          );\n\n          group.add(_obj);\n        }\n        var obj = group.children[0];\n        var points = calcPath(pointsAccessor(path), pointLatAccessor, pointLngAccessor, pointAltAccessor, state.pathResolution);\n\n        // set dash animation step\n        var dashAnimateTime = dashAnimateTimeAccessor(path);\n        obj.__dashAnimateStep = dashAnimateTime > 0 ? 1000 / dashAnimateTime : 0; // per second\n\n        if (!useFatLine) {\n          // set dash uniforms\n          Object.assign(obj.material.uniforms, {\n            dashSize: {\n              value: dashLengthAccessor(path)\n            },\n            gapSize: {\n              value: dashGapAccessor(path)\n            },\n            dashOffset: {\n              value: dashInitialGapAccessor(path)\n            }\n          });\n\n          // calculate vertex colors (to create gradient)\n          var vertexColorArray = calcColorVertexArray(colorAccessor(path),\n          // single, array of colors or interpolator\n          points.length // numSegments\n          );\n\n          // calculate vertex relative distances (for dashed lines)\n          var vertexRelDistanceArray = calcVertexRelDistances(points.length,\n          // numSegments\n          1,\n          // num vertices per segment\n          true // run from end to start, to animate in the correct direction\n          );\n\n          obj.geometry[setAttributeFn]('vertexColor', vertexColorArray);\n          obj.geometry[setAttributeFn]('vertexRelDistance', vertexRelDistanceArray);\n        } else {\n          // fat lines\n          obj.material.resolution = state.rendererSize;\n          {\n            // set dash styling\n            var dashLength = dashLengthAccessor(path);\n            var dashGap = dashGapAccessor(path);\n            var dashInitialGap = dashInitialGapAccessor(path);\n            obj.material.dashed = dashGap > 0;\n\n            // temp hack to activate line dashes\n            obj.material.dashed ? obj.material.defines.USE_DASH = \"\" : delete obj.material.defines.USE_DASH;\n            if (obj.material.dashed) {\n              obj.material.dashScale = 1 / calcLineDistance(points); // dash sizes relative to full line length\n\n              obj.material.dashSize = dashLength;\n              obj.material.gapSize = dashGap;\n              obj.material.dashOffset = -dashInitialGap;\n            }\n          }\n          {\n            // set line colors\n            var colors = colorAccessor(path);\n            if (colors instanceof Array) {\n              // calculate vertex colors (to create gradient)\n              var _vertexColorArray = calcColorVertexArray(colorAccessor(path),\n              // single, array of colors or interpolator\n              points.length - 1,\n              // numSegments\n              1,\n              // num vertices per segment\n              false);\n              obj.geometry.setColors(_vertexColorArray.array);\n              obj.material.vertexColors = true;\n            } else {\n              // single color\n              var color = colors;\n              var opacity = colorAlpha(color);\n              obj.material.color = new THREE$7.Color(colorStr2Hex(color));\n              obj.material.transparent = opacity < 1;\n              obj.material.opacity = opacity;\n              obj.material.vertexColors = false;\n            }\n          }\n          obj.material.needsUpdate = true;\n        }\n\n        // animate from start to finish by default\n        var pointsInterpolator = interpolateVectors(path.__currentTargetD && path.__currentTargetD.points || [points[0]], points);\n        var applyUpdate = function applyUpdate(td) {\n          var _path$__currentTarget = path.__currentTargetD = td,\n            stroke = _path$__currentTarget.stroke,\n            interpolK = _path$__currentTarget.interpolK;\n          var kPoints = path.__currentTargetD.points = pointsInterpolator(interpolK);\n          if (useFatLine) {\n            var _ref;\n            obj.geometry.setPositions((_ref = []).concat.apply(_ref, _toConsumableArray(kPoints.map(function (_ref2) {\n              var x = _ref2.x,\n                y = _ref2.y,\n                z = _ref2.z;\n              return [x, y, z];\n            }))));\n            obj.material.linewidth = stroke;\n\n            // necessary for dashed lines\n            obj.material.dashed && obj.computeLineDistances();\n          } else {\n            obj.geometry.setFromPoints(kPoints);\n            obj.geometry.computeBoundingSphere();\n          }\n        };\n        var targetD = {\n          stroke: stroke,\n          interpolK: 1\n        };\n        var currentTargetD = Object.assign({}, path.__currentTargetD || targetD, {\n          interpolK: 0\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          if (!state.pathTransitionDuration || state.pathTransitionDuration < 0) {\n            // set final position\n            applyUpdate(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.pathTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n          }\n        }\n      }\n    });\n\n    //\n\n    function calcLineDistance(pnts) {\n      var totalDist = 0;\n      var prevPnt;\n      pnts.forEach(function (pnt) {\n        prevPnt && (totalDist += prevPnt.distanceTo(pnt));\n        prevPnt = pnt;\n      });\n      return totalDist;\n    }\n    function calcPath(points, latAccessor, lngAccessor, altAccessor, angularResolution) {\n      var getInterpolatedVals = function getInterpolatedVals(start, end, numPnts) {\n        var result = [];\n        for (var i = 1; i <= numPnts; i++) {\n          result.push(start + (end - start) * i / (numPnts + 1));\n        }\n        return result;\n      };\n      var interpolateLine = function interpolateLine() {\n        var lineCoords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var maxDegDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var result = [];\n        var prevPnt = null;\n        lineCoords.forEach(function (pnt) {\n          if (prevPnt) {\n            // cross the anti-meridian if that's the closest distance between points\n            while (Math.abs(prevPnt[1] - pnt[1]) > 180) prevPnt[1] += 360 * (prevPnt[1] < pnt[1] ? 1 : -1);\n            var dist = Math.sqrt(Math.pow(pnt[0] - prevPnt[0], 2) + Math.pow(pnt[1] - prevPnt[1], 2));\n            if (dist > maxDegDistance) {\n              var numAdditionalPnts = Math.floor(dist / maxDegDistance);\n              var lats = getInterpolatedVals(prevPnt[0], pnt[0], numAdditionalPnts);\n              var lngs = getInterpolatedVals(prevPnt[1], pnt[1], numAdditionalPnts);\n              var alts = getInterpolatedVals(prevPnt[2], pnt[2], numAdditionalPnts);\n              for (var i = 0, len = lats.length; i < len; i++) {\n                result.push([lats[i], lngs[i], alts[i]]);\n              }\n            }\n          }\n          result.push(prevPnt = pnt);\n        });\n        return result;\n      };\n      var getVec = function getVec(_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 3),\n          lat = _ref4[0],\n          lng = _ref4[1],\n          alt = _ref4[2];\n        var _polar2Cartesian = polar2Cartesian(lat, lng, alt),\n          x = _polar2Cartesian.x,\n          y = _polar2Cartesian.y,\n          z = _polar2Cartesian.z;\n        return new THREE$7.Vector3(x, y, z);\n      };\n      return interpolateLine(points.map(function (pnt) {\n        return [latAccessor(pnt), lngAccessor(pnt), altAccessor(pnt)];\n      }), angularResolution).map(getVec);\n    }\n    function calcColorVertexArray(colors, numSegments) {\n      var numVerticesPerSegment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var includeAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var numVerticesGroup = numSegments + 1; // one between every two segments and two at the ends\n\n      var getVertexColor;\n      if (colors instanceof Array || colors instanceof Function) {\n        var colorInterpolator = colors instanceof Array ? scaleLinear() // array of colors, interpolate at each step\n        .domain(colors.map(function (_, idx) {\n          return idx / (colors.length - 1);\n        })) // same number of stops as colors\n        .range(colors) : colors; // already interpolator fn\n\n        getVertexColor = function getVertexColor(t) {\n          return color2ShaderArr(colorInterpolator(t), includeAlpha);\n        };\n      } else {\n        // single color, use constant\n        var vertexColor = color2ShaderArr(colors, includeAlpha);\n        getVertexColor = function getVertexColor() {\n          return vertexColor;\n        };\n      }\n      var numArgs = includeAlpha ? 4 : 3;\n      var vertexColorArray = new THREE$7.Float32BufferAttribute(numVerticesGroup * numArgs * numVerticesPerSegment, numArgs);\n      for (var v = 0, l = numVerticesGroup; v < l; v++) {\n        var _vertexColor = getVertexColor(v / (l - 1));\n        for (var s = 0; s < numVerticesPerSegment; s++) {\n          vertexColorArray.set(_vertexColor, (v * numVerticesPerSegment + s) * numArgs);\n        }\n      }\n      return vertexColorArray;\n    }\n    function calcVertexRelDistances(numSegments) {\n      var numVerticesPerSegment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var invert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var numVerticesGroup = numSegments + 1; // one between every two segments and two at the ends\n      var arrLen = numVerticesGroup * numVerticesPerSegment;\n      var vertexDistanceArray = new THREE$7.Float32BufferAttribute(arrLen, 1);\n      for (var v = 0, l = numVerticesGroup; v < l; v++) {\n        var relDistance = v / (l - 1);\n        for (var s = 0; s < numVerticesPerSegment; s++) {\n          var idx = v * numVerticesPerSegment + s;\n          var pos = invert ? arrLen - 1 - idx : idx;\n          vertexDistanceArray.setX(pos, relDistance);\n        }\n      }\n      return vertexDistanceArray;\n    }\n  }\n});\n\nvar THREE$6 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Euler: Euler,\n  Mesh: Mesh,\n  MeshLambertMaterial: MeshLambertMaterial,\n  SphereGeometry: SphereGeometry\n};\n\n//\n\nvar TilesLayerKapsule = Kapsule({\n  props: {\n    tilesData: {\n      \"default\": []\n    },\n    tileLat: {\n      \"default\": 'lat'\n    },\n    // tile centroid\n    tileLng: {\n      \"default\": 'lng'\n    },\n    tileAltitude: {\n      \"default\": 0.01\n    },\n    // in units of globe radius\n    tileWidth: {\n      \"default\": 1\n    },\n    // in lng degrees\n    tileHeight: {\n      \"default\": 1\n    },\n    // in lat degrees\n    tileUseGlobeProjection: {\n      \"default\": true\n    },\n    // whether to size tiles relative to the globe coordinate system, or independently\n    tileMaterial: {\n      \"default\": function _default() {\n        return new THREE$6.MeshLambertMaterial({\n          color: '#ffbb88',\n          opacity: 0.4,\n          transparent: true\n        });\n      }\n    },\n    tileCurvatureResolution: {\n      \"default\": 5\n    },\n    // in angular degrees\n    tilesTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Data accessors\n    var latAccessor = accessorFn(state.tileLat);\n    var lngAccessor = accessorFn(state.tileLng);\n    var altitudeAccessor = accessorFn(state.tileAltitude);\n    var widthAccessor = accessorFn(state.tileWidth);\n    var heightAccessor = accessorFn(state.tileHeight);\n    var useGlobeProjectionAccessor = accessorFn(state.tileUseGlobeProjection);\n    var materialAccessor = accessorFn(state.tileMaterial);\n    var curvatureResolutionAccessor = accessorFn(state.tileCurvatureResolution);\n    threeDigest(state.tilesData, state.scene, {\n      createObj: function createObj() {\n        var obj = new THREE$6.Mesh();\n        obj.__globeObjType = 'tile'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        obj.material = materialAccessor(d); // set material\n\n        var useGlobeProjection = useGlobeProjectionAccessor(d);\n        var curvatureResolution = curvatureResolutionAccessor(d);\n\n        // animations\n        var applyPosition = function applyPosition(td) {\n          var _obj$__currentTargetD = obj.__currentTargetD = td,\n            lat = _obj$__currentTargetD.lat,\n            lng = _obj$__currentTargetD.lng,\n            alt = _obj$__currentTargetD.alt,\n            width = _obj$__currentTargetD.width,\n            height = _obj$__currentTargetD.height;\n          var rotLng = deg2Rad(lng);\n          var rotLat = deg2Rad(-lat);\n          obj.geometry && obj.geometry.dispose();\n          obj.geometry = new THREE$6.SphereGeometry(GLOBE_RADIUS * (1 + alt), Math.ceil(width / (curvatureResolution || -1)), Math.ceil(height / (curvatureResolution || -1)), deg2Rad(90 - width / 2) + (useGlobeProjection ? rotLng : 0), deg2Rad(width), deg2Rad(90 - height / 2) + (useGlobeProjection ? rotLat : 0), deg2Rad(height));\n          if (!useGlobeProjection) {\n            // rotate obj instead. order matters, rotate longitudinally first.\n            obj.setRotationFromEuler(new THREE$6.Euler(rotLat, rotLng, 0, 'YXZ'));\n          }\n        };\n        var targetD = {\n          lat: +latAccessor(d),\n          lng: +lngAccessor(d),\n          alt: +altitudeAccessor(d),\n          width: +widthAccessor(d),\n          height: +heightAccessor(d)\n        };\n        var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n          width: 0,\n          height: 0\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          if (!state.tilesTransitionDuration || state.tilesTransitionDuration < 0) {\n            // set final position\n            applyPosition(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.tilesTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyPosition).start();\n          }\n        }\n      }\n    });\n  }\n});\nvar deg2Rad = function deg2Rad(deg) {\n  return deg * Math.PI / 180;\n};\n\nvar glyphs={\"0\":{x_min:73,x_max:715,ha:792,o:\"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 \"},\"1\":{x_min:215.671875,x_max:574,ha:792,o:\"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 \"},\"2\":{x_min:59,x_max:731,ha:792,o:\"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 \"},\"3\":{x_min:54,x_max:737,ha:792,o:\"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 \"},\"4\":{x_min:48,x_max:742.453125,ha:792,o:\"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 \"},\"5\":{x_min:54.171875,x_max:738,ha:792,o:\"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 \"},\"6\":{x_min:53,x_max:739,ha:792,o:\"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 \"},\"7\":{x_min:58.71875,x_max:730.953125,ha:792,o:\"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 \"},\"8\":{x_min:55,x_max:736,ha:792,o:\"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 \"},\"9\":{x_min:53,x_max:739,ha:792,o:\"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 \"},\"ο\":{x_min:0,x_max:712,ha:815,o:\"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 \"},S:{x_min:0,x_max:788,ha:890,o:\"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 \"},\"¦\":{x_min:343,x_max:449,ha:792,o:\"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \"},\"/\":{x_min:183.25,x_max:608.328125,ha:792,o:\"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 \"},\"Τ\":{x_min:-0.4375,x_max:777.453125,ha:839,o:\"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 \"},y:{x_min:0,x_max:684.78125,ha:771,o:\"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 \"},\"Π\":{x_min:0,x_max:803,ha:917,o:\"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 \"},\"ΐ\":{x_min:-111,x_max:339,ha:361,o:\"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 \"},g:{x_min:0,x_max:686,ha:838,o:\"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 \"},\"²\":{x_min:0,x_max:442,ha:539,o:\"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 \"},\"–\":{x_min:0,x_max:705.5625,ha:803,o:\"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \"},\"Κ\":{x_min:0,x_max:819.5625,ha:893,o:\"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \"},\"ƒ\":{x_min:-46.265625,x_max:392,ha:513,o:\"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 \"},e:{x_min:0,x_max:714,ha:813,o:\"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 \"},\"ό\":{x_min:0,x_max:712,ha:815,o:\"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 \"},J:{x_min:0,x_max:588,ha:699,o:\"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 \"},\"»\":{x_min:-1,x_max:503,ha:601,o:\"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 \"},\"©\":{x_min:-3,x_max:1008,ha:1106,o:\"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 \"},\"ώ\":{x_min:0,x_max:922,ha:1030,o:\"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 \"},\"^\":{x_min:193.0625,x_max:598.609375,ha:792,o:\"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 \"},\"«\":{x_min:0,x_max:507.203125,ha:604,o:\"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 \"},D:{x_min:0,x_max:828,ha:935,o:\"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 \"},\"∙\":{x_min:0,x_max:142,ha:239,o:\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \"},\"ÿ\":{x_min:0,x_max:47,ha:125,o:\"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 \"},w:{x_min:0,x_max:1009.71875,ha:1100,o:\"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 \"},$:{x_min:0,x_max:700,ha:793,o:\"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 \"},\"\\\\\":{x_min:-0.015625,x_max:425.0625,ha:522,o:\"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 \"},\"µ\":{x_min:0,x_max:697.21875,ha:747,o:\"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 \"},\"Ι\":{x_min:42,x_max:181,ha:297,o:\"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 \"},\"Ύ\":{x_min:0,x_max:1144.5,ha:1214,o:\"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"’\":{x_min:0,x_max:139,ha:236,o:\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \"},\"Ν\":{x_min:0,x_max:801,ha:915,o:\"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 \"},\"-\":{x_min:8.71875,x_max:350.390625,ha:478,o:\"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 \"},Q:{x_min:0,x_max:968,ha:1072,o:\"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 \"},\"ς\":{x_min:1,x_max:676.28125,ha:740,o:\"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 \"},M:{x_min:0,x_max:954,ha:1067,o:\"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 \"},\"Ψ\":{x_min:0,x_max:1006,ha:1094,o:\"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 \"},C:{x_min:0,x_max:886,ha:944,o:\"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 \"},\"!\":{x_min:0,x_max:138,ha:236,o:\"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 \"},\"{\":{x_min:0,x_max:480.5625,ha:578,o:\"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 \"},X:{x_min:-0.015625,x_max:854.15625,ha:940,o:\"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 \"},\"#\":{x_min:0,x_max:963.890625,ha:1061,o:\"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 \"},\"ι\":{x_min:42,x_max:284,ha:361,o:\"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 \"},\"Ά\":{x_min:0,x_max:906.953125,ha:982,o:\"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \"},\")\":{x_min:0,x_max:318,ha:415,o:\"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 \"},\"ε\":{x_min:0,x_max:634.71875,ha:714,o:\"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 \"},\"Δ\":{x_min:0,x_max:952.78125,ha:1028,o:\"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 \"},\"}\":{x_min:0,x_max:481,ha:578,o:\"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 \"},\"‰\":{x_min:-3,x_max:1672,ha:1821,o:\"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 \"},a:{x_min:0,x_max:698.609375,ha:794,o:\"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 \"},\"—\":{x_min:0,x_max:941.671875,ha:1039,o:\"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 \"},\"=\":{x_min:8.71875,x_max:780.953125,ha:792,o:\"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 \"},N:{x_min:0,x_max:801,ha:914,o:\"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 \"},\"ρ\":{x_min:0,x_max:712,ha:797,o:\"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 \"},\"¯\":{x_min:0,x_max:941.671875,ha:938,o:\"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 \"},Z:{x_min:0,x_max:779,ha:849,o:\"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 \"},u:{x_min:0,x_max:617,ha:729,o:\"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 \"},k:{x_min:0,x_max:612.484375,ha:697,o:\"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 \"},\"Η\":{x_min:0,x_max:803,ha:917,o:\"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \"},\"Α\":{x_min:0,x_max:906.953125,ha:985,o:\"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \"},s:{x_min:0,x_max:604,ha:697,o:\"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 \"},B:{x_min:0,x_max:778,ha:876,o:\"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 \"},\"…\":{x_min:0,x_max:614,ha:708,o:\"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 \"},\"?\":{x_min:0,x_max:607,ha:704,o:\"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 \"},H:{x_min:0,x_max:803,ha:915,o:\"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \"},\"ν\":{x_min:0,x_max:675,ha:761,o:\"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 \"},c:{x_min:1,x_max:701.390625,ha:775,o:\"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 \"},\"¶\":{x_min:0,x_max:566.671875,ha:678,o:\"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 \"},\"β\":{x_min:0,x_max:660,ha:745,o:\"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 \"},\"Μ\":{x_min:0,x_max:954,ha:1068,o:\"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 \"},\"Ό\":{x_min:0.109375,x_max:1120,ha:1217,o:\"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"Ή\":{x_min:0,x_max:1158,ha:1275,o:\"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"•\":{x_min:0,x_max:663.890625,ha:775,o:\"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 \"},\"¥\":{x_min:0.1875,x_max:819.546875,ha:886,o:\"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 \"},\"(\":{x_min:0,x_max:318.0625,ha:415,o:\"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 \"},U:{x_min:0,x_max:796,ha:904,o:\"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 \"},\"γ\":{x_min:0.5,x_max:744.953125,ha:822,o:\"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 \"},\"α\":{x_min:0,x_max:765.5625,ha:809,o:\"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 \"},F:{x_min:0,x_max:683.328125,ha:717,o:\"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 \"},\"­\":{x_min:0,x_max:705.5625,ha:803,o:\"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \"},\":\":{x_min:0,x_max:142,ha:239,o:\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \"},\"Χ\":{x_min:0,x_max:854.171875,ha:935,o:\"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 \"},\"*\":{x_min:116,x_max:674,ha:792,o:\"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 \"},\"†\":{x_min:0,x_max:777,ha:835,o:\"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 \"},\"°\":{x_min:0,x_max:347,ha:444,o:\"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 \"},V:{x_min:0,x_max:862.71875,ha:940,o:\"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 \"},\"Ξ\":{x_min:0,x_max:734.71875,ha:763,o:\"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 \"},\" \":{x_min:0,x_max:0,ha:853},\"Ϋ\":{x_min:0.328125,x_max:819.515625,ha:889,o:\"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 \"},\"”\":{x_min:0,x_max:347,ha:454,o:\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 \"},\"@\":{x_min:0,x_max:1260,ha:1357,o:\"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 \"},\"Ί\":{x_min:0,x_max:499,ha:613,o:\"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 \"},i:{x_min:14,x_max:136,ha:275,o:\"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 \"},\"Β\":{x_min:0,x_max:778,ha:877,o:\"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 \"},\"υ\":{x_min:0,x_max:617,ha:725,o:\"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 \"},\"]\":{x_min:0,x_max:275,ha:372,o:\"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 \"},m:{x_min:0,x_max:1019,ha:1128,o:\"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 \"},\"χ\":{x_min:8.328125,x_max:780.5625,ha:815,o:\"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 \"},\"ί\":{x_min:42,x_max:326.71875,ha:361,o:\"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 \"},\"Ζ\":{x_min:0,x_max:779.171875,ha:850,o:\"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 \"},R:{x_min:0,x_max:781.953125,ha:907,o:\"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 \"},o:{x_min:0,x_max:713,ha:821,o:\"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 \"},K:{x_min:0,x_max:819.46875,ha:906,o:\"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \"},\",\":{x_min:0,x_max:142,ha:239,o:\"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 \"},d:{x_min:0,x_max:683,ha:796,o:\"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 \"},\"¨\":{x_min:-109,x_max:247,ha:232,o:\"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 \"},E:{x_min:0,x_max:736.109375,ha:789,o:\"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \"},Y:{x_min:0,x_max:820,ha:886,o:\"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 \"},\"\\\"\":{x_min:0,x_max:299,ha:396,o:\"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \"},\"‹\":{x_min:17.984375,x_max:773.609375,ha:792,o:\"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \"},\"„\":{x_min:0,x_max:364,ha:467,o:\"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 \"},\"δ\":{x_min:1,x_max:710,ha:810,o:\"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 \"},\"έ\":{x_min:0,x_max:634.71875,ha:714,o:\"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 \"},\"ω\":{x_min:0,x_max:922,ha:1031,o:\"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 \"},\"´\":{x_min:0,x_max:96,ha:251,o:\"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \"},\"±\":{x_min:11,x_max:781,ha:792,o:\"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 \"},\"|\":{x_min:343,x_max:449,ha:792,o:\"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \"},\"ϋ\":{x_min:0,x_max:617,ha:725,o:\"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 \"},\"§\":{x_min:0,x_max:593,ha:690,o:\"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 \"},b:{x_min:0,x_max:685,ha:783,o:\"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 \"},q:{x_min:0,x_max:683,ha:876,o:\"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 \"},\"Ω\":{x_min:-0.171875,x_max:969.5625,ha:1068,o:\"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 \"},\"ύ\":{x_min:0,x_max:617,ha:725,o:\"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 \"},z:{x_min:-0.015625,x_max:613.890625,ha:697,o:\"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 \"},\"™\":{x_min:0,x_max:894,ha:1000,o:\"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 \"},\"ή\":{x_min:0.78125,x_max:697,ha:810,o:\"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 \"},\"Θ\":{x_min:0,x_max:960,ha:1056,o:\"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 \"},\"®\":{x_min:-3,x_max:1008,ha:1106,o:\"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 \"},\"~\":{x_min:0,x_max:833,ha:931,o:\"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 \"},\"Ε\":{x_min:0,x_max:736.21875,ha:778,o:\"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \"},\"³\":{x_min:0,x_max:450,ha:547,o:\"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 \"},\"[\":{x_min:0,x_max:273.609375,ha:371,o:\"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 \"},L:{x_min:0,x_max:645.828125,ha:696,o:\"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 \"},\"σ\":{x_min:0,x_max:803.390625,ha:894,o:\"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 \"},\"ζ\":{x_min:0,x_max:573,ha:642,o:\"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 \"},\"θ\":{x_min:0,x_max:674,ha:778,o:\"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 \"},\"Ο\":{x_min:0,x_max:958,ha:1054,o:\"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 \"},\"Γ\":{x_min:0,x_max:705.28125,ha:749,o:\"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 \"},\" \":{x_min:0,x_max:0,ha:375},\"%\":{x_min:-3,x_max:1089,ha:1186,o:\"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 \"},P:{x_min:0,x_max:726,ha:806,o:\"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 \"},\"Έ\":{x_min:0,x_max:1078.21875,ha:1118,o:\"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"Ώ\":{x_min:0.125,x_max:1136.546875,ha:1235,o:\"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 \"},_:{x_min:0,x_max:705.5625,ha:803,o:\"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 \"},\"Ϊ\":{x_min:-110,x_max:246,ha:275,o:\"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 \"},\"+\":{x_min:23,x_max:768,ha:792,o:\"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 \"},\"½\":{x_min:0,x_max:1050,ha:1149,o:\"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 \"},\"Ρ\":{x_min:0,x_max:720,ha:783,o:\"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 \"},\"'\":{x_min:0,x_max:139,ha:236,o:\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \"},\"ª\":{x_min:0,x_max:350,ha:397,o:\"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 \"},\"΅\":{x_min:0,x_max:450,ha:553,o:\"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 \"},T:{x_min:0,x_max:777,ha:835,o:\"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 \"},\"Φ\":{x_min:0,x_max:915,ha:997,o:\"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 \"},\"⁋\":{x_min:0,x_max:0,ha:694},j:{x_min:-77.78125,x_max:167,ha:349,o:\"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 \"},\"Σ\":{x_min:0,x_max:756.953125,ha:819,o:\"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 \"},\"›\":{x_min:18.0625,x_max:774,ha:792,o:\"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \"},\"<\":{x_min:17.984375,x_max:773.609375,ha:792,o:\"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \"},\"£\":{x_min:0,x_max:704.484375,ha:801,o:\"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 \"},t:{x_min:0,x_max:367,ha:458,o:\"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 \"},\"¬\":{x_min:0,x_max:706,ha:803,o:\"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 \"},\"λ\":{x_min:0,x_max:750,ha:803,o:\"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 \"},W:{x_min:0,x_max:1263.890625,ha:1351,o:\"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 \"},\">\":{x_min:18.0625,x_max:774,ha:792,o:\"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \"},v:{x_min:0,x_max:675.15625,ha:761,o:\"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 \"},\"τ\":{x_min:0.28125,x_max:644.5,ha:703,o:\"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 \"},\"ξ\":{x_min:0,x_max:624.9375,ha:699,o:\"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 \"},\"&\":{x_min:-3,x_max:894.25,ha:992,o:\"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 \"},\"Λ\":{x_min:0,x_max:862.5,ha:942,o:\"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 \"},I:{x_min:41,x_max:180,ha:293,o:\"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 \"},G:{x_min:0,x_max:921,ha:1011,o:\"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 \"},\"ΰ\":{x_min:0,x_max:617,ha:725,o:\"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 \"},\"`\":{x_min:0,x_max:138.890625,ha:236,o:\"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 \"},\"·\":{x_min:0,x_max:142,ha:239,o:\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \"},\"Υ\":{x_min:0.328125,x_max:819.515625,ha:889,o:\"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 \"},r:{x_min:0,x_max:355.5625,ha:432,o:\"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 \"},x:{x_min:0,x_max:675,ha:764,o:\"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 \"},\"μ\":{x_min:0,x_max:696.609375,ha:747,o:\"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 \"},h:{x_min:0,x_max:615,ha:724,o:\"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 \"},\".\":{x_min:0,x_max:142,ha:239,o:\"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \"},\"φ\":{x_min:-2,x_max:878,ha:974,o:\"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 \"},\";\":{x_min:0,x_max:142,ha:239,o:\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 \"},f:{x_min:0,x_max:378,ha:472,o:\"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 \"},\"“\":{x_min:1,x_max:348.21875,ha:454,o:\"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 \"},A:{x_min:0.03125,x_max:906.953125,ha:1008,o:\"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 \"},\"‘\":{x_min:1,x_max:139.890625,ha:236,o:\"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 \"},\"ϊ\":{x_min:-70,x_max:283,ha:361,o:\"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 \"},\"π\":{x_min:-0.21875,x_max:773.21875,ha:857,o:\"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 \"},\"ά\":{x_min:0,x_max:765.5625,ha:809,o:\"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 \"},O:{x_min:0,x_max:958,ha:1057,o:\"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 \"},n:{x_min:0,x_max:615,ha:724,o:\"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 \"},l:{x_min:41,x_max:166,ha:279,o:\"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 \"},\"¤\":{x_min:40.09375,x_max:728.796875,ha:825,o:\"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 \"},\"κ\":{x_min:0,x_max:632.328125,ha:679,o:\"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 \"},p:{x_min:0,x_max:685,ha:786,o:\"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 \"},\"‡\":{x_min:0,x_max:777,ha:835,o:\"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 \"},\"ψ\":{x_min:0,x_max:808,ha:907,o:\"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 \"},\"η\":{x_min:0.78125,x_max:697,ha:810,o:\"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 \"}};var cssFontWeight=\"normal\";var ascender=1189;var underlinePosition=-100;var cssFontStyle=\"normal\";var boundingBox={yMin:-334,xMin:-111,yMax:1189,xMax:1672};var resolution=1000;var original_font_information={postscript_name:\"Helvetiker-Regular\",version_string:\"Version 1.00 2004 initial release\",vendor_url:\"http://www.magenta.gr/\",full_font_name:\"Helvetiker\",font_family_name:\"Helvetiker\",copyright:\"Copyright (c) Μagenta ltd, 2004\",description:\"\",trademark:\"\",designer:\"\",designer_url:\"\",unique_font_identifier:\"Μagenta ltd:Helvetiker:22-10-104\",license_url:\"http://www.ellak.gr/fonts/MgOpen/license.html\",license_description:\"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\\"Fonts\\\") and associated documentation files (the \\\"Font Software\\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\\"MgOpen\\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\\"MgOpen\\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\",manufacturer_name:\"Μagenta ltd\",font_sub_family_name:\"Regular\"};var descender=-334;var familyName=\"Helvetiker\";var lineHeight=1522;var underlineThickness=50;var defaultTypeFace = {glyphs:glyphs,cssFontWeight:cssFontWeight,ascender:ascender,underlinePosition:underlinePosition,cssFontStyle:cssFontStyle,boundingBox:boundingBox,resolution:resolution,original_font_information:original_font_information,descender:descender,familyName:familyName,lineHeight:lineHeight,underlineThickness:underlineThickness};\n\nvar THREE$5 = _objectSpread2(_objectSpread2({}, window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  CircleGeometry: CircleGeometry,\n  Group: Group,\n  Mesh: Mesh,\n  MeshLambertMaterial: MeshLambertMaterial,\n  TextGeometry: TextGeometry,\n  Vector3: Vector3\n}), {}, {\n  Font: Font,\n  TextGeometry: TextGeometry\n});\n\n//\n\nvar LabelsLayerKapsule = Kapsule({\n  props: {\n    labelsData: {\n      \"default\": []\n    },\n    labelLat: {\n      \"default\": 'lat'\n    },\n    labelLng: {\n      \"default\": 'lng'\n    },\n    labelAltitude: {\n      \"default\": 0\n    },\n    // in units of globe radius\n    labelText: {\n      \"default\": 'text'\n    },\n    labelSize: {\n      \"default\": 0.5\n    },\n    // text height in deg\n    labelTypeFace: {\n      \"default\": defaultTypeFace,\n      onChange: function onChange(tf, state) {\n        state.font = new THREE$5.Font(tf);\n      }\n    },\n    labelColor: {\n      \"default\": function _default() {\n        return 'lightgrey';\n      }\n    },\n    labelRotation: {\n      \"default\": 0\n    },\n    // clockwise degrees, relative to the latitute parallel plane\n    labelResolution: {\n      \"default\": 3\n    },\n    // how many segments in the text's curves\n    labelIncludeDot: {\n      \"default\": true\n    },\n    labelDotRadius: {\n      \"default\": 0.1\n    },\n    // in deg\n    labelDotOrientation: {\n      \"default\": function _default() {\n        return 'bottom';\n      }\n    },\n    // right, top, bottom\n    labelsTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    } // ms\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state) {\n    // Data accessors\n    var latAccessor = accessorFn(state.labelLat);\n    var lngAccessor = accessorFn(state.labelLng);\n    var altitudeAccessor = accessorFn(state.labelAltitude);\n    var textAccessor = accessorFn(state.labelText);\n    var sizeAccessor = accessorFn(state.labelSize);\n    var rotationAccessor = accessorFn(state.labelRotation);\n    var colorAccessor = accessorFn(state.labelColor);\n    var includeDotAccessor = accessorFn(state.labelIncludeDot);\n    var dotRadiusAccessor = accessorFn(state.labelDotRadius);\n    var dotOrientationAccessor = accessorFn(state.labelDotOrientation);\n    var orientations = new Set(['right', 'top', 'bottom']);\n    var pxPerDeg = 2 * Math.PI * GLOBE_RADIUS / 360;\n    var circleGeometry = new THREE$5.CircleGeometry(1, 16);\n    threeDigest(state.labelsData, state.scene, {\n      createObj: function createObj() {\n        var material = new THREE$5.MeshLambertMaterial();\n        var obj = new THREE$5.Group(); // container\n\n        obj.add(new THREE$5.Mesh(circleGeometry, material)); // dot\n        obj.add(new THREE$5.Mesh(undefined, material)); // text\n\n        obj.__globeObjType = 'label'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        var _obj$children = _slicedToArray(obj.children, 2),\n          dotObj = _obj$children[0],\n          textObj = _obj$children[1];\n\n        // update color\n        var color = colorAccessor(d);\n        var opacity = colorAlpha(color);\n        textObj.material.color.set(colorStr2Hex(color));\n        textObj.material.transparent = opacity < 1;\n        textObj.material.opacity = opacity;\n\n        // update dot\n        var includeDot = includeDotAccessor(d);\n        var dotOrient = dotOrientationAccessor(d);\n        !includeDot || !orientations.has(dotOrient) && (dotOrient = 'bottom');\n\n        // size dot\n        var dotR = includeDot ? +dotRadiusAccessor(d) * pxPerDeg : 1e-12;\n        dotObj.scale.x = dotObj.scale.y = dotR;\n\n        // create text geometry\n        var textHeight = +sizeAccessor(d) * pxPerDeg;\n        textObj.geometry && textObj.geometry.dispose();\n        textObj.geometry = new THREE$5.TextGeometry(textAccessor(d), {\n          font: state.font,\n          size: textHeight,\n          height: 0,\n          curveSegments: state.labelResolution\n        });\n\n        // center text (otherwise anchor is on bottom-left)\n        dotOrient !== 'right' && textObj.geometry.center();\n        if (includeDot) {\n          // translate text\n          var padding = dotR + textHeight / 2;\n          dotOrient === 'right' && (textObj.position.x = padding);\n          textObj.position.y = {\n            right: -textHeight / 2,\n            // center vertically\n            top: padding + textHeight / 2,\n            bottom: -padding - textHeight / 2\n          }[dotOrient];\n        }\n\n        // animations\n        var applyPosition = function applyPosition(td) {\n          var _obj$__currentTargetD = obj.__currentTargetD = td,\n            lat = _obj$__currentTargetD.lat,\n            lng = _obj$__currentTargetD.lng,\n            alt = _obj$__currentTargetD.alt,\n            rot = _obj$__currentTargetD.rot,\n            scale = _obj$__currentTargetD.scale;\n\n          // position center\n          Object.assign(obj.position, polar2Cartesian(lat, lng, alt));\n\n          // rotate\n          obj.lookAt(state.scene.localToWorld(new THREE$5.Vector3(0, 0, 0))); // face globe (local) center\n          obj.rotateY(Math.PI); // face outwards\n\n          // rotate clockwise relative to lat parallel\n          obj.rotateZ(-rot * Math.PI / 180);\n\n          // scale it\n          obj.scale.x = obj.scale.y = obj.scale.z = scale;\n        };\n        var targetD = {\n          lat: +latAccessor(d),\n          lng: +lngAccessor(d),\n          alt: +altitudeAccessor(d),\n          rot: +rotationAccessor(d),\n          scale: 1\n        };\n        var currentTargetD = obj.__currentTargetD || Object.assign({}, targetD, {\n          scale: 1e-12\n        });\n        if (Object.keys(targetD).some(function (k) {\n          return currentTargetD[k] !== targetD[k];\n        })) {\n          if (!state.labelsTransitionDuration || state.labelsTransitionDuration < 0) {\n            // set final position\n            applyPosition(targetD);\n          } else {\n            // animate\n            new TWEEN.Tween(currentTargetD).to(targetD, state.labelsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyPosition).start();\n          }\n        }\n      }\n    });\n  }\n});\n\nvar THREE$4 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry\n};\nvar CircleLineGeometry = /*#__PURE__*/function (_THREE$BufferGeometry) {\n  _inherits(CircleLineGeometry, _THREE$BufferGeometry);\n  var _super = _createSuper(CircleLineGeometry);\n  function CircleLineGeometry() {\n    var _this;\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var segmentCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n    _classCallCheck(this, CircleLineGeometry);\n    _this = _super.call(this);\n    _this.type = 'CircleLineGeometry';\n    _this.parameters = {\n      radius: radius,\n      segmentCount: segmentCount\n    };\n    var points = [];\n    for (var i = 0; i <= segmentCount; i++) {\n      var theta = (i / segmentCount - 0.25) * Math.PI * 2;\n      points.push({\n        x: Math.cos(theta) * radius,\n        y: Math.sin(theta) * radius,\n        z: 0\n      });\n    }\n    _this.setFromPoints(points);\n    return _this;\n  }\n  return _createClass(CircleLineGeometry);\n}(THREE$4.BufferGeometry);\n\nvar THREE$3 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Color: Color,\n  Group: Group,\n  Line: Line,\n  LineBasicMaterial: LineBasicMaterial,\n  Vector3: Vector3\n};\nvar FrameTicker = _FrameTicker[\"default\"] || _FrameTicker;\nvar RingsLayerKapsule = Kapsule({\n  props: {\n    ringsData: {\n      \"default\": []\n    },\n    ringLat: {\n      \"default\": 'lat'\n    },\n    ringLng: {\n      \"default\": 'lng'\n    },\n    ringAltitude: {\n      \"default\": 1.5e-3\n    },\n    ringColor: {\n      \"default\": function _default() {\n        return '#ffffaa';\n      },\n      triggerUpdate: false\n    },\n    // single color, array of colors or color interpolation fn\n    ringResolution: {\n      \"default\": 64,\n      triggerUpdate: false\n    },\n    // how many slice segments in each circle's circumference\n    ringMaxRadius: {\n      \"default\": 2,\n      triggerUpdate: false\n    },\n    // degrees\n    ringPropagationSpeed: {\n      \"default\": 1,\n      triggerUpdate: false\n    },\n    // degrees/s\n    ringRepeatPeriod: {\n      \"default\": 700,\n      triggerUpdate: false\n    } // ms\n  },\n\n  methods: {\n    _destructor: function _destructor(state) {\n      state.ticker && state.ticker.dispose();\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n    state.ticker = new FrameTicker();\n    state.ticker.onTick.add(function (time) {\n      if (!state.ringsData.length) return;\n\n      // Data accessors\n      var colorAccessor = accessorFn(state.ringColor);\n      var altitudeAccessor = accessorFn(state.ringAltitude);\n      var maxRadiusAccessor = accessorFn(state.ringMaxRadius);\n      var propagationSpeedAccessor = accessorFn(state.ringPropagationSpeed);\n      var repeatPeriodAccessor = accessorFn(state.ringRepeatPeriod);\n      state.ringsData.filter(function (d) {\n        return d.__threeObj;\n      }).forEach(function (d) {\n        var obj = d.__threeObj;\n        if ((obj.__nextRingTime || 0) <= time) {\n          // time to add a new ring\n          var periodSecs = repeatPeriodAccessor(d) / 1000;\n          obj.__nextRingTime = time + (periodSecs <= 0 ? Infinity : periodSecs);\n          var circleObj = new THREE$3.Line(new CircleLineGeometry(1, state.ringResolution), new THREE$3.LineBasicMaterial());\n          var colors = colorAccessor(d);\n          var isMultiColor = colors instanceof Array || colors instanceof Function;\n          var colorInterpolator;\n          if (!isMultiColor) {\n            // set only once\n            circleObj.material.color = new THREE$3.Color(colorStr2Hex(colors));\n            setMaterialOpacity(circleObj.material, colorAlpha(colors));\n          } else {\n            if (colors instanceof Array) {\n              colorInterpolator = scaleLinear().domain(colors.map(function (_, idx) {\n                return idx / (colors.length - 1);\n              })) // same number of stops as colors\n              .range(colors);\n              circleObj.material.transparent = colors.some(function (c) {\n                return colorAlpha(c) < 1;\n              });\n            } else {\n              colorInterpolator = colors;\n              circleObj.material.transparent = true;\n            }\n          }\n          var curveR = GLOBE_RADIUS * (1 + altitudeAccessor(d));\n          var maxRadius = maxRadiusAccessor(d); // in degrees\n          var maxAngle = maxRadius * Math.PI / 180; // in radians\n          var propagationSpeed = propagationSpeedAccessor(d);\n          var isReverse = propagationSpeed <= 0;\n          var updateFn = function updateFn(_ref) {\n            var t = _ref.t;\n            var ang = (isReverse ? 1 - t : t) * maxAngle;\n            circleObj.scale.x = circleObj.scale.y = curveR * Math.sin(ang);\n            circleObj.position.z = curveR * (1 - Math.cos(ang));\n            if (isMultiColor) {\n              var color = colorInterpolator(t);\n              circleObj.material.color = new THREE$3.Color(colorStr2Hex(color));\n              circleObj.material.transparent && (circleObj.material.opacity = colorAlpha(color));\n            }\n          };\n          if (propagationSpeed === 0) {\n            updateFn({\n              t: 0\n            });\n            obj.add(circleObj);\n          } else {\n            var transitionTime = Math.abs(maxRadius / propagationSpeed) * 1000;\n            new TWEEN.Tween({\n              t: 0\n            }).to({\n              t: 1\n            }, transitionTime).onUpdate(updateFn).onStart(function () {\n              return obj.add(circleObj);\n            }).onComplete(function () {\n              obj.remove(circleObj);\n              deallocate(circleObj);\n            }).start();\n          }\n        }\n      });\n    });\n  },\n  update: function update(state) {\n    // Data accessors\n    var latAccessor = accessorFn(state.ringLat);\n    var lngAccessor = accessorFn(state.ringLng);\n    var altitudeAccessor = accessorFn(state.ringAltitude);\n    var globeCenter = state.scene.localToWorld(new THREE$3.Vector3(0, 0, 0)); // translate from local to world coords\n\n    threeDigest(state.ringsData, state.scene, {\n      createObj: function createObj() {\n        var obj = new THREE$3.Group();\n        obj.__globeObjType = 'ring'; // Add object type\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        var lat = latAccessor(d);\n        var lng = lngAccessor(d);\n        var alt = altitudeAccessor(d);\n\n        // position & orientate inwards\n        Object.assign(obj.position, polar2Cartesian(lat, lng, alt));\n        obj.lookAt(globeCenter);\n      }\n    }, {\n      removeDelay: 30000\n    } // wait until all rings are gone\n    );\n  }\n});\n\nvar THREE$2 = _objectSpread2(_objectSpread2({}, window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {}), {}, {\n  CSS2DObject: CSS2DObject\n});\n\n//\n\nvar HtmlElementsLayerKapsule = Kapsule({\n  props: {\n    htmlElementsData: {\n      \"default\": []\n    },\n    htmlLat: {\n      \"default\": 'lat'\n    },\n    htmlLng: {\n      \"default\": 'lng'\n    },\n    htmlAltitude: {\n      \"default\": 0\n    },\n    // in units of globe radius\n    htmlElement: {},\n    htmlTransitionDuration: {\n      \"default\": 1000,\n      triggerUpdate: false\n    },\n    // ms\n    isBehindGlobe: {\n      onChange: function onChange() {\n        this.updateObjVisibility();\n      },\n      triggerUpdate: false\n    }\n  },\n  methods: {\n    updateObjVisibility: function updateObjVisibility(state, obj) {\n      // default to all if no obj specified\n      var objs = obj ? [obj] : state.htmlElementsData.map(function (d) {\n        return d.__threeObj;\n      }).filter(function (d) {\n        return d;\n      });\n      // Hide elements on the far side of the globe\n      objs.forEach(function (obj) {\n        return obj.visible = !state.isBehindGlobe || !state.isBehindGlobe(obj.position);\n      });\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state, changedProps) {\n    var _this = this;\n    // Data accessors\n    var latAccessor = accessorFn(state.htmlLat);\n    var lngAccessor = accessorFn(state.htmlLng);\n    var altitudeAccessor = accessorFn(state.htmlAltitude);\n    var elemAccessor = accessorFn(state.htmlElement);\n    threeDigest(state.htmlElementsData, state.scene, {\n      // objs need to be recreated if this prop has changed\n      purge: changedProps.hasOwnProperty('htmlElement'),\n      createObj: function createObj(d) {\n        var elem = elemAccessor(d);\n        var obj = new THREE$2.CSS2DObject(elem);\n        obj.__globeObjType = 'html'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        var applyUpdate = function applyUpdate(td) {\n          var _obj$__currentTargetD = obj.__currentTargetD = td,\n            alt = _obj$__currentTargetD.alt,\n            lat = _obj$__currentTargetD.lat,\n            lng = _obj$__currentTargetD.lng;\n          Object.assign(obj.position, polar2Cartesian(lat, lng, alt));\n          _this.updateObjVisibility(obj);\n        };\n        var targetD = {\n          lat: +latAccessor(d),\n          lng: +lngAccessor(d),\n          alt: +altitudeAccessor(d)\n        };\n        if (!state.htmlTransitionDuration || state.htmlTransitionDuration < 0 || !obj.__currentTargetD) {\n          // set final position\n          applyUpdate(targetD);\n        } else {\n          // animate\n          new TWEEN.Tween(obj.__currentTargetD).to(targetD, state.pointsTransitionDuration).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(applyUpdate).start();\n        }\n      }\n    });\n  }\n});\n\nvar THREE$1 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Mesh: Mesh,\n  MeshLambertMaterial: MeshLambertMaterial,\n  SphereGeometry: SphereGeometry\n};\n\n//\n\nvar ObjectsLayerKapsule = Kapsule({\n  props: {\n    objectsData: {\n      \"default\": []\n    },\n    objectLat: {\n      \"default\": 'lat'\n    },\n    objectLng: {\n      \"default\": 'lng'\n    },\n    objectAltitude: {\n      \"default\": 0.01\n    },\n    // in units of globe radius\n    objectThreeObject: {\n      \"default\": new THREE$1.Mesh(\n      // default object: yellow sphere\n      new THREE$1.SphereGeometry(1, 16, 8), new THREE$1.MeshLambertMaterial({\n        color: '#ffffaa',\n        transparent: true,\n        opacity: 0.7\n      }))\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state, changedProps) {\n    // Data accessors\n    var latAccessor = accessorFn(state.objectLat);\n    var lngAccessor = accessorFn(state.objectLng);\n    var altitudeAccessor = accessorFn(state.objectAltitude);\n    var threeObjAccessor = accessorFn(state.objectThreeObject);\n    threeDigest(state.objectsData, state.scene, {\n      // objs need to be recreated if this prop has changed\n      purge: changedProps.hasOwnProperty('objectThreeObject'),\n      createObj: function createObj(d) {\n        var obj = threeObjAccessor(d);\n        if (state.objectThreeObject === obj) {\n          // clone object if it's a shared object among all points\n          obj = obj.clone();\n        }\n        obj.__globeObjType = 'object'; // Add object type\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        var lat = +latAccessor(d);\n        var lng = +lngAccessor(d);\n        var alt = +altitudeAccessor(d);\n        Object.assign(obj.position, polar2Cartesian(lat, lng, alt));\n      }\n    });\n  }\n});\n\n//\n\nvar CustomLayerKapsule = Kapsule({\n  props: {\n    customLayerData: {\n      \"default\": []\n    },\n    customThreeObject: {},\n    customThreeObjectUpdate: {\n      triggerUpdate: false\n    }\n  },\n  init: function init(threeObj, state) {\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    state.scene = threeObj;\n  },\n  update: function update(state, changedProps) {\n    if (!state.customThreeObjectUpdate) {\n      emptyObject(state.scene);\n    } // Clear the existing objects to create all new, if there's no update method (brute-force)\n\n    var customObjectAccessor = accessorFn(state.customThreeObject);\n    var customObjectUpdateAccessor = accessorFn(state.customThreeObjectUpdate);\n    threeDigest(state.customLayerData, state.scene, {\n      // objs need to be recreated if this prop has changed\n      purge: changedProps.hasOwnProperty('customThreeObject'),\n      createObj: function createObj(d) {\n        var obj = customObjectAccessor(d, GLOBE_RADIUS);\n        if (obj) {\n          if (state.customThreeObject === obj) {\n            // clone object if it's a shared object among all points\n            obj = obj.clone();\n          }\n          obj.__globeObjType = 'custom'; // Add object type\n        }\n\n        return obj;\n      },\n      updateObj: function updateObj(obj, d) {\n        return customObjectUpdateAccessor(obj, d, GLOBE_RADIUS);\n      }\n    });\n  }\n});\n\nvar THREE = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Group: Group,\n  Vector2: Vector2,\n  Vector3: Vector3\n};\n\n//\n\nvar layers = ['globeLayer', 'pointsLayer', 'arcsLayer', 'hexBinLayer', 'polygonsLayer', 'hexedPolygonsLayer', 'pathsLayer', 'tilesLayer', 'labelsLayer', 'ringsLayer', 'htmlElementsLayer', 'objectsLayer', 'customLayer'];\n\n// Expose config from layers\nvar bindGlobeLayer = linkKapsule('globeLayer', GlobeLayerKapsule);\nvar linkedGlobeLayerProps = Object.assign.apply(Object, _toConsumableArray(['globeImageUrl', 'bumpImageUrl', 'showGlobe', 'showGraticules', 'showAtmosphere', 'atmosphereColor', 'atmosphereAltitude'].map(function (p) {\n  return _defineProperty({}, p, bindGlobeLayer.linkProp(p));\n})));\nvar linkedGlobeLayerMethods = Object.assign.apply(Object, _toConsumableArray(['globeMaterial'].map(function (p) {\n  return _defineProperty({}, p, bindGlobeLayer.linkMethod(p));\n})));\nvar bindPointsLayer = linkKapsule('pointsLayer', PointsLayerKapsule);\nvar linkedPointsLayerProps = Object.assign.apply(Object, _toConsumableArray(['pointsData', 'pointLat', 'pointLng', 'pointColor', 'pointAltitude', 'pointRadius', 'pointResolution', 'pointsMerge', 'pointsTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindPointsLayer.linkProp(p));\n})));\nvar bindArcsLayer = linkKapsule('arcsLayer', ArcsLayerKapsule);\nvar linkedArcsLayerProps = Object.assign.apply(Object, _toConsumableArray(['arcsData', 'arcStartLat', 'arcStartLng', 'arcEndLat', 'arcEndLng', 'arcColor', 'arcAltitude', 'arcAltitudeAutoScale', 'arcStroke', 'arcCurveResolution', 'arcCircularResolution', 'arcDashLength', 'arcDashGap', 'arcDashInitialGap', 'arcDashAnimateTime', 'arcsTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindArcsLayer.linkProp(p));\n})));\nvar bindHexBinLayer = linkKapsule('hexBinLayer', HexBinLayerKapsule);\nvar linkedHexBinLayerProps = Object.assign.apply(Object, _toConsumableArray(['hexBinPointsData', 'hexBinPointLat', 'hexBinPointLng', 'hexBinPointWeight', 'hexBinResolution', 'hexMargin', 'hexTopCurvatureResolution', 'hexTopColor', 'hexSideColor', 'hexAltitude', 'hexBinMerge', 'hexTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindHexBinLayer.linkProp(p));\n})));\nvar bindHexedPolygonsLayer = linkKapsule('hexedPolygonsLayer', HexedPolygonsLayerKapsule);\nvar linkedHexedPolygonsLayerProps = Object.assign.apply(Object, _toConsumableArray(['hexPolygonsData', 'hexPolygonGeoJsonGeometry', 'hexPolygonColor', 'hexPolygonAltitude', 'hexPolygonResolution', 'hexPolygonMargin', 'hexPolygonCurvatureResolution', 'hexPolygonsTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindHexedPolygonsLayer.linkProp(p));\n})));\nvar bindPolygonsLayer = linkKapsule('polygonsLayer', PolygonsLayerKapsule);\nvar linkedPolygonsLayerProps = Object.assign.apply(Object, _toConsumableArray(['polygonsData', 'polygonGeoJsonGeometry', 'polygonCapColor', 'polygonCapMaterial', 'polygonSideColor', 'polygonSideMaterial', 'polygonStrokeColor', 'polygonAltitude', 'polygonCapCurvatureResolution', 'polygonsTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindPolygonsLayer.linkProp(p));\n})));\nvar bindPathsLayer = linkKapsule('pathsLayer', PathsLayerKapsule);\nvar linkedPathsLayerProps = Object.assign.apply(Object, _toConsumableArray(['pathsData', 'pathPoints', 'pathPointLat', 'pathPointLng', 'pathPointAlt', 'pathResolution', 'pathColor', 'pathStroke', 'pathDashLength', 'pathDashGap', 'pathDashInitialGap', 'pathDashAnimateTime', 'pathTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindPathsLayer.linkProp(p));\n})));\nvar bindTilesLayer = linkKapsule('tilesLayer', TilesLayerKapsule);\nvar linkedTilesLayerProps = Object.assign.apply(Object, _toConsumableArray(['tilesData', 'tileLat', 'tileLng', 'tileAltitude', 'tileWidth', 'tileHeight', 'tileUseGlobeProjection', 'tileMaterial', 'tileCurvatureResolution', 'tilesTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindTilesLayer.linkProp(p));\n})));\nvar bindLabelsLayer = linkKapsule('labelsLayer', LabelsLayerKapsule);\nvar linkedLabelsLayerProps = Object.assign.apply(Object, _toConsumableArray(['labelsData', 'labelLat', 'labelLng', 'labelAltitude', 'labelRotation', 'labelText', 'labelSize', 'labelTypeFace', 'labelColor', 'labelResolution', 'labelIncludeDot', 'labelDotRadius', 'labelDotOrientation', 'labelsTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindLabelsLayer.linkProp(p));\n})));\nvar bindRingsLayer = linkKapsule('ringsLayer', RingsLayerKapsule);\nvar linkedRingsLayerProps = Object.assign.apply(Object, _toConsumableArray(['ringsData', 'ringLat', 'ringLng', 'ringAltitude', 'ringColor', 'ringResolution', 'ringMaxRadius', 'ringPropagationSpeed', 'ringRepeatPeriod'].map(function (p) {\n  return _defineProperty({}, p, bindRingsLayer.linkProp(p));\n})));\nvar bindHtmlElementsLayer = linkKapsule('htmlElementsLayer', HtmlElementsLayerKapsule);\nvar linkedHtmlElementsLayerProps = Object.assign.apply(Object, _toConsumableArray(['htmlElementsData', 'htmlLat', 'htmlLng', 'htmlAltitude', 'htmlElement', 'htmlTransitionDuration'].map(function (p) {\n  return _defineProperty({}, p, bindHtmlElementsLayer.linkProp(p));\n})));\nvar bindObjectsLayer = linkKapsule('objectsLayer', ObjectsLayerKapsule);\nvar linkedObjectsLayerProps = Object.assign.apply(Object, _toConsumableArray(['objectsData', 'objectLat', 'objectLng', 'objectAltitude', 'objectThreeObject'].map(function (p) {\n  return _defineProperty({}, p, bindObjectsLayer.linkProp(p));\n})));\nvar bindCustomLayer = linkKapsule('customLayer', CustomLayerKapsule);\nvar linkedCustomLayerProps = Object.assign.apply(Object, _toConsumableArray(['customLayerData', 'customThreeObject', 'customThreeObjectUpdate'].map(function (p) {\n  return _defineProperty({}, p, bindCustomLayer.linkProp(p));\n})));\n\n//\n\nvar Globe = Kapsule({\n  props: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({\n    onGlobeReady: {\n      triggerUpdate: false\n    },\n    rendererSize: {\n      \"default\": new THREE.Vector2(window.innerWidth, window.innerHeight),\n      onChange: function onChange(rendererSize, state) {\n        state.pathsLayer.rendererSize(rendererSize);\n      },\n      triggerUpdate: false\n    }\n  }, linkedGlobeLayerProps), linkedPointsLayerProps), linkedArcsLayerProps), linkedHexBinLayerProps), linkedPolygonsLayerProps), linkedHexedPolygonsLayerProps), linkedPathsLayerProps), linkedTilesLayerProps), linkedLabelsLayerProps), linkedRingsLayerProps), linkedHtmlElementsLayerProps), linkedObjectsLayerProps), linkedCustomLayerProps),\n  methods: _objectSpread2({\n    getGlobeRadius: getGlobeRadius,\n    getCoords: function getCoords(state) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return polar2Cartesian.apply(void 0, args);\n    },\n    toGeoCoords: function toGeoCoords(state) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      return cartesian2Polar.apply(void 0, args);\n    },\n    setPointOfView: function setPointOfView(state, globalPov, globePos) {\n      var isBehindGlobe = undefined;\n      if (globalPov) {\n        var globeRadius = getGlobeRadius();\n        var pov = globePos ? globalPov.clone().sub(globePos) : globalPov; // convert to local vector\n\n        var povDist, povEdgeDist, povEdgeAngle;\n        isBehindGlobe = function isBehindGlobe(pos) {\n          povDist === undefined && (povDist = pov.length());\n\n          // check if it's behind plane of globe's visible area\n          // maxSurfacePosAngle === undefined && (maxSurfacePosAngle = Math.acos(globeRadius / povDist));\n          // return pov.angleTo(pos) > maxSurfacePosAngle;\n\n          // more sophisticated method that checks also pos altitude\n          povEdgeDist === undefined && (povEdgeDist = Math.sqrt(Math.pow(povDist, 2) - Math.pow(globeRadius, 2)));\n          povEdgeAngle === undefined && (povEdgeAngle = Math.acos(povEdgeDist / povDist));\n          var povPosDist = pov.distanceTo(pos);\n          if (povPosDist < povEdgeDist) return false; // pos is closer than visible edge of globe\n\n          var posDist = pos.length();\n          var povPosAngle = Math.acos((Math.pow(povDist, 2) + Math.pow(povPosDist, 2) - Math.pow(posDist, 2)) / (2 * povDist * povPosDist)); // triangle solver\n          return povPosAngle < povEdgeAngle; // pos is within globe's visible area cone\n        };\n      }\n\n      // pass behind globe checker for layers that need it\n      state.layersThatNeedBehindGlobeChecker.forEach(function (l) {\n        return l.isBehindGlobe(isBehindGlobe);\n      });\n    },\n    _destructor: function _destructor(state) {\n      cancelAnimationFrame(state.animationFrameRequestId);\n      state.destructableLayers.forEach(function (l) {\n        return l._destructor();\n      });\n    }\n  }, linkedGlobeLayerMethods),\n  stateInit: function stateInit() {\n    var layers = {\n      globeLayer: GlobeLayerKapsule(),\n      pointsLayer: PointsLayerKapsule(),\n      arcsLayer: ArcsLayerKapsule(),\n      hexBinLayer: HexBinLayerKapsule(),\n      polygonsLayer: PolygonsLayerKapsule(),\n      hexedPolygonsLayer: HexedPolygonsLayerKapsule(),\n      pathsLayer: PathsLayerKapsule(),\n      tilesLayer: TilesLayerKapsule(),\n      labelsLayer: LabelsLayerKapsule(),\n      ringsLayer: RingsLayerKapsule(),\n      htmlElementsLayer: HtmlElementsLayerKapsule(),\n      objectsLayer: ObjectsLayerKapsule(),\n      customLayer: CustomLayerKapsule()\n    };\n    return _objectSpread2(_objectSpread2({}, layers), {}, {\n      layersThatNeedBehindGlobeChecker: Object.values(layers).filter(function (l) {\n        return l.hasOwnProperty('isBehindGlobe');\n      }),\n      destructableLayers: Object.values(layers).filter(function (l) {\n        return l.hasOwnProperty('_destructor');\n      })\n    });\n  },\n  init: function init(threeObj, state, _ref15) {\n    var _ref15$animateIn = _ref15.animateIn,\n      animateIn = _ref15$animateIn === void 0 ? true : _ref15$animateIn,\n      _ref15$waitForGlobeRe = _ref15.waitForGlobeReady,\n      waitForGlobeReady = _ref15$waitForGlobeRe === void 0 ? true : _ref15$waitForGlobeRe;\n    // Clear the scene\n    emptyObject(threeObj);\n\n    // Main three object to manipulate\n    threeObj.add(state.scene = new THREE.Group());\n    state.scene.visible = false; // hide scene before globe initialization\n\n    // Add all layers groups\n    layers.forEach(function (layer) {\n      var g = new THREE.Group();\n      state.scene.add(g);\n      state[layer](g);\n    });\n    var initGlobe = function initGlobe() {\n      if (animateIn) {\n        // Animate build-in just once\n        state.scene.scale.set(1e-6, 1e-6, 1e-6);\n        new TWEEN.Tween({\n          k: 1e-6\n        }).to({\n          k: 1\n        }, 600).easing(TWEEN.Easing.Quadratic.Out).onUpdate(function (_ref16) {\n          var k = _ref16.k;\n          return state.scene.scale.set(k, k, k);\n        }).start();\n        var rotAxis = new THREE.Vector3(0, 1, 0);\n        new TWEEN.Tween({\n          rot: Math.PI * 2\n        }).to({\n          rot: 0\n        }, 1200).easing(TWEEN.Easing.Quintic.Out).onUpdate(function (_ref17) {\n          var rot = _ref17.rot;\n          return state.scene.setRotationFromAxisAngle(rotAxis, rot);\n        }).start();\n      }\n      state.scene.visible = true;\n      state.onGlobeReady && state.onGlobeReady();\n    };\n    waitForGlobeReady ? state.globeLayer.onReady(initGlobe) : initGlobe();\n\n    // run tween updates\n    (function onFrame() {\n      state.animationFrameRequestId = requestAnimationFrame(onFrame);\n      TWEEN.update();\n    })(); // IIFE\n  },\n  update: function update(state) {}\n});\n\nfunction fromKapsule (kapsule) {\n  var baseClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object;\n  var initKapsuleWithSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var FromKapsule = /*#__PURE__*/function (_baseClass) {\n    _inherits(FromKapsule, _baseClass);\n    var _super = _createSuper(FromKapsule);\n    function FromKapsule() {\n      var _this;\n      _classCallCheck(this, FromKapsule);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.__kapsuleInstance = kapsule.apply(void 0, args).apply(void 0, [].concat(_toConsumableArray(initKapsuleWithSelf ? [_assertThisInitialized(_this)] : []), args));\n      return _this;\n    }\n    return _createClass(FromKapsule);\n  }(baseClass); // attach kapsule props/methods to class prototype\n  Object.keys(kapsule()).forEach(function (m) {\n    return FromKapsule.prototype[m] = function () {\n      var _this$__kapsuleInstan;\n      var returnVal = (_this$__kapsuleInstan = this.__kapsuleInstance)[m].apply(_this$__kapsuleInstan, arguments);\n      return returnVal === this.__kapsuleInstance ? this // chain based on this class, not the kapsule obj\n      : returnVal;\n    };\n  });\n  return FromKapsule;\n}\n\nvar three = window.THREE ? window.THREE : {\n  Group: Group\n}; // Prefer consumption from global THREE, if exists\nvar threeGlobe = fromKapsule(Globe, three.Group, true);\n\nexport { threeGlobe as default };\n", "export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n", "import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n", "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n", "import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n", "export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n", "export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "export default x => () => x;\n", "import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n", "import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n", "export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n", "import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n", "export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n", "import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n", "import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n", "import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n", "var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n", "import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n", "import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n", "var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n", "import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n", "import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n", "import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n", "export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function number(x) {\n  return +x;\n}\n", "import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n", "export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n", "export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n", "export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n", "// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n", "// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n", "import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n", "export default function(x) {\n  return x;\n}\n", "import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n", "import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n", "import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n", "const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n", "import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n", "export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n", "import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n", "import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n", "import {utcFormat} from \"./defaultLocale.js\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n", "import {isoSpecifier} from \"./isoFormat.js\";\nimport {utcParse} from \"./defaultLocale.js\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n", "\nexport default function earcut(data, holeIndices, dim = 2) {\n\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    let outerNode = linkedList(data, 0, outerLen, dim, true);\n    const triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    let minX, minY, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = Infinity;\n        minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = dim; i < outerLen; i += dim) {\n            const x = data[i];\n            const y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    let last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (let i = start; i < end; i += dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    } else {\n        for (let i = end - dim; i >= start; i -= dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    let p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    let stop = ear;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        const prev = ear.prev;\n        const next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            triangles.push(prev.i, ear.i, next.i); // cut off the triangle\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    let p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles) {\n    let p = start;\n    do {\n        const a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i, p.i, b.i);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    const queue = [];\n\n    for (let i = 0, len = holeIndices.length; i < len; i++) {\n        const start = holeIndices[i] * dim;\n        const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        const list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareXYSlope);\n\n    // process holes from left to right\n    for (let i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareXYSlope(a, b) {\n    let result = a.x - b.x;\n    // when the left-most point of 2 holes meet at a vertex, sort the holes counterclockwise so that when we find\n    // the bridge to the outer shell is always the point that they meet at.\n    if (result === 0) {\n        result = a.y - b.y;\n        if (result === 0) {\n            const aSlope = (a.next.y - a.y) / (a.next.x - a.x);\n            const bSlope = (b.next.y - b.y) / (b.next.x - b.x);\n            result = aSlope - bSlope;\n        }\n    }\n    return result;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    const bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    // unless they intersect at a vertex, then choose the vertex\n    if (equals(hole, p)) return p;\n    do {\n        if (equals(hole, p.next)) return p.next;\n        else if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            const tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let numMerges;\n    let inSize = 1;\n\n    do {\n        let p = list;\n        let e;\n        list = null;\n        let tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            let q = p;\n            let pSize = 0;\n            for (let i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            let qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a point lies within a convex triangle but false if its equal to the first point of the triangle\nfunction pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, px, py) {\n    return !(ax === px && ay === py) && pointInTriangle(ax, ay, bx, by, cx, cy, px, py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = createNode(a.i, a.x, a.y),\n        b2 = createNode(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = createNode(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction createNode(i, x, y) {\n    return {\n        i, // vertex index in coordinates array\n        x, y, // vertex coordinates\n        prev: null, // previous and next vertex nodes in a polygon ring\n        next: null,\n        z: 0, // z-order curve value\n        prevZ: null, // previous and next nodes in z-order\n        nextZ: null,\n        steiner: false // indicates whether this is a steiner point\n    };\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nexport function deviation(data, holeIndices, dim, triangles) {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    let polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (let i = 0, len = holeIndices.length; i < len; i++) {\n            const start = holeIndices[i] * dim;\n            const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    let trianglesArea = 0;\n    for (let i = 0; i < triangles.length; i += 3) {\n        const a = triangles[i] * dim;\n        const b = triangles[i + 1] * dim;\n        const c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n}\n\nfunction signedArea(data, start, end, dim) {\n    let sum = 0;\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nexport function flatten(data) {\n    const vertices = [];\n    const holes = [];\n    const dimensions = data[0][0].length;\n    let holeIndex = 0;\n    let prevLen = 0;\n\n    for (const ring of data) {\n        for (const p of ring) {\n            for (let d = 0; d < dimensions; d++) vertices.push(p[d]);\n        }\n        if (prevLen) {\n            holeIndex += prevLen;\n            holes.push(holeIndex);\n        }\n        prevLen = ring.length;\n    }\n    return {vertices, holes, dimensions};\n}\n", "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n", "\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        // find the point closest to the seed\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                const d = this._dists[id];\n                if (d > d0) {\n                    hull[j++] = id;\n                    d0 = d;\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n", "import { orient2d } from 'robust-predicates';\n\nfunction pointInPolygon(p, polygon) {\n    var i;\n    var ii;\n    var k = 0;\n    var f;\n    var u1;\n    var v1;\n    var u2;\n    var v2;\n    var currentP;\n    var nextP;\n\n    var x = p[0];\n    var y = p[1];\n\n    var numContours = polygon.length;\n    for (i = 0; i < numContours; i++) {\n        ii = 0;\n        var contour = polygon[i];\n        var contourLen = contour.length - 1;\n\n        currentP = contour[0];\n        if (currentP[0] !== contour[contourLen][0] &&\n            currentP[1] !== contour[contourLen][1]) {\n            throw new Error('First and last coordinates in a ring must be the same')\n        }\n\n        u1 = currentP[0] - x;\n        v1 = currentP[1] - y;\n\n        for (ii; ii < contourLen; ii++) {\n            nextP = contour[ii + 1];\n\n            u2 = nextP[0] - x;\n            v2 = nextP[1] - y;\n\n            if (v1 === 0 && v2 === 0) {\n                if ((u2 <= 0 && u1 >= 0) || (u1 <= 0 && u2 >= 0)) { return 0 }\n            } else if ((v2 >= 0 && v1 <= 0) || (v2 <= 0 && v1 >= 0)) {\n                f = orient2d(u1, u2, v1, v2, 0, 0);\n                if (f === 0) { return 0 }\n                if ((f > 0 && v2 > 0 && v1 <= 0) || (f < 0 && v2 <= 0 && v1 > 0)) { k++; }\n            }\n            currentP = nextP;\n            v1 = v2;\n            u1 = u2;\n        }\n    }\n\n    if (k % 2 === 0) { return false }\n    return true\n}\n\nexport { pointInPolygon as default };\n", "import {\n  BBox,\n  Feature,\n  FeatureCollection,\n  Geometry,\n  GeometryCollection,\n  GeometryObject,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n  Position,\n  GeoJsonProperties,\n} from \"geojson\";\n\nimport { Id } from \"./lib/geojson.js\";\nexport * from \"./lib/geojson.js\";\n\n/**\n * @module helpers\n */\n\n// TurfJS Combined Types\nexport type Coord = Feature<Point> | Point | Position;\n\n/**\n * Linear measurement units.\n *\n * ⚠️ Warning. Be aware of the implications of using radian or degree units to\n * measure distance. The distance represented by a degree of longitude *varies*\n * depending on latitude.\n *\n * See https://www.thoughtco.com/degree-of-latitude-and-longitude-distance-4070616\n * for an illustration of this behaviour.\n *\n * @typedef\n */\nexport type Units =\n  | \"meters\"\n  | \"metres\"\n  | \"millimeters\"\n  | \"millimetres\"\n  | \"centimeters\"\n  | \"centimetres\"\n  | \"kilometers\"\n  | \"kilometres\"\n  | \"miles\"\n  | \"nauticalmiles\"\n  | \"inches\"\n  | \"yards\"\n  | \"feet\"\n  | \"radians\"\n  | \"degrees\";\n\n/**\n * Area measurement units.\n *\n * @typedef\n */\nexport type AreaUnits =\n  | Exclude<Units, \"radians\" | \"degrees\">\n  | \"acres\"\n  | \"hectares\";\n\n/**\n * Grid types.\n *\n * @typedef\n */\nexport type Grid = \"point\" | \"square\" | \"hex\" | \"triangle\";\n\n/**\n * Shorthand corner identifiers.\n *\n * @typedef\n */\nexport type Corners = \"sw\" | \"se\" | \"nw\" | \"ne\" | \"center\" | \"centroid\";\n\n/**\n * Geometries made up of lines i.e. lines and polygons.\n *\n * @typedef\n */\nexport type Lines = LineString | MultiLineString | Polygon | MultiPolygon;\n\n/**\n * Convenience type for all possible GeoJSON.\n *\n * @typedef\n */\nexport type AllGeoJSON =\n  | Feature\n  | FeatureCollection\n  | Geometry\n  | GeometryCollection;\n\n/**\n * The Earth radius in kilometers. Used by Turf modules that model the Earth as a sphere. The {@link https://en.wikipedia.org/wiki/Earth_radius#Arithmetic_mean_radius mean radius} was selected because it is {@link https://rosettacode.org/wiki/Haversine_formula#:~:text=This%20value%20is%20recommended recommended } by the Haversine formula (used by turf/distance) to reduce error.\n *\n * @constant\n */\nexport const earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors based on earthRadius.\n *\n * Keys are the name of the unit, values are the number of that unit in a single radian\n *\n * @constant\n */\nexport const factors: Record<Units, number> = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1000,\n  kilometres: earthRadius / 1000,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1000,\n  millimetres: earthRadius * 1000,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936,\n};\n\n/**\n\n * Area of measurement factors based on 1 square meter.\n *\n * @constant\n */\nexport const areaFactors: Record<AreaUnits, number> = {\n  acres: 0.000247105,\n  centimeters: 10000,\n  centimetres: 10000,\n  feet: 10.763910417,\n  hectares: 0.0001,\n  inches: 1550.003100006,\n  kilometers: 0.000001,\n  kilometres: 0.000001,\n  meters: 1,\n  metres: 1,\n  miles: 3.86e-7,\n  nauticalmiles: 2.9155334959812285e-7,\n  millimeters: 1000000,\n  millimetres: 1000000,\n  yards: 1.195990046,\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @function\n * @param {GeometryObject} geometry input geometry\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryObject, GeoJsonProperties>} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature<\n  G extends GeometryObject = Geometry,\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  geom: G | null,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<G, P> {\n  const feat: any = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @function\n * @param {(\"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\")} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(\n  type:\n    | \"Point\"\n    | \"LineString\"\n    | \"Polygon\"\n    | \"MultiPoint\"\n    | \"MultiLineString\"\n    | \"MultiPolygon\",\n  coordinates: any[],\n  _options: Record<string, never> = {}\n) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @function\n * @param {Position} coordinates longitude, latitude position (each in decimal degrees)\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point, GeoJsonProperties>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<Point, P> {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n\n  const geom: Point = {\n    type: \"Point\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @function\n * @param {Position[]} coordinates an array of Points\n * @param {GeoJsonProperties} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {Id} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<Point, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @function\n * @param {Position[][]} coordinates an array of LinearRings\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon, GeoJsonProperties>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<Polygon, P> {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      // Check if first point of Polygon contains two numbers\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom: Polygon = {\n    type: \"Polygon\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @function\n * @param {Position[][][]} coordinates an array of Polygon coordinates\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon, GeoJsonProperties>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<Polygon, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @function\n * @param {Position[]} coordinates an array of Positions\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString, GeoJsonProperties>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<LineString, P> {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom: LineString = {\n    type: \"LineString\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @function\n * @param {Position[][]} coordinates an array of LinearRings\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {Id} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString, GeoJsonProperties>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<LineString, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @function\n * @param {Array<Feature<GeometryObject, GeoJsonProperties>>} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection<GeometryObject, GeoJsonProperties>} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection<\n  G extends GeometryObject = Geometry,\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  features: Array<Feature<G, P>>,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<G, P> {\n  const fc: any = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\n\n/**\n * Creates a {@link Feature}<{@link MultiLineString}> based on a\n * coordinate array. Properties can be added optionally.\n *\n * @function\n * @param {Position[][]} coordinates an array of LineStrings\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString, GeoJsonProperties>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString<\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiLineString, P> {\n  const geom: MultiLineString = {\n    type: \"MultiLineString\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Feature}<{@link MultiPoint}> based on a\n * coordinate array. Properties can be added optionally.\n *\n * @function\n * @param {Position[]} coordinates an array of Positions\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint, GeoJsonProperties>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiPoint, P> {\n  const geom: MultiPoint = {\n    type: \"MultiPoint\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Feature}<{@link MultiPolygon}> based on a\n * coordinate array. Properties can be added optionally.\n *\n * @function\n * @param {Position[][][]} coordinates an array of Polygons\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon, GeoJsonProperties>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiPolygon, P> {\n  const geom: MultiPolygon = {\n    type: \"MultiPolygon\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a Feature<GeometryCollection> based on a\n * coordinate array. Properties can be added optionally.\n *\n * @function\n * @param {Array<Point | LineString | Polygon | MultiPoint | MultiLineString | MultiPolygon>} geometries an array of GeoJSON Geometries\n * @param {GeoJsonProperties} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {BBox} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {Id} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection, GeoJsonProperties>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection<\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  geometries: Array<\n    Point | LineString | Polygon | MultiPoint | MultiLineString | MultiPolygon\n  >,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<GeometryCollection, P> {\n  const geom: GeometryCollection = {\n    type: \"GeometryCollection\",\n    geometries,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @function\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num: number, precision = 0): number {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @function\n * @param {number} radians in radians across the sphere\n * @param {Units} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(\n  radians: number,\n  units: Units = \"kilometers\"\n): number {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @function\n * @param {number} distance in real units\n * @param {Units} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(\n  distance: number,\n  units: Units = \"kilometers\"\n): number {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @function\n * @param {number} distance in real units\n * @param {Units} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance: number, units?: Units): number {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @function\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing: number): number {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\n\n/**\n * Converts any azimuth angle from the north line direction (positive clockwise)\n * and returns an angle between -180 and +180 degrees (positive clockwise), 0 being the north line\n *\n * @function\n * @param {number} angle between 0 and 360 degrees\n * @returns {number} bearing between -180 and +180 degrees\n */\nexport function azimuthToBearing(angle: number): number {\n  // Ignore full revolutions (multiples of 360)\n  angle = angle % 360;\n\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n\n  return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @function\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians: number): number {\n  // % (2 * Math.PI) radians in case someone passes value > 2π\n  const normalisedRadians = radians % (2 * Math.PI);\n  return (normalisedRadians * 180) / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @function\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees: number): number {\n  // % 360 degrees in case someone passes value > 360\n  const normalisedDegrees = degrees % 360;\n  return (normalisedDegrees * Math.PI) / 180;\n}\n\n/**\n * Converts a length from one unit to another.\n *\n * @function\n * @param {number} length Length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] Input length unit\n * @param {Units} [finalUnit=\"kilometers\"] Returned length unit\n * @returns {number} The converted length\n */\nexport function convertLength(\n  length: number,\n  originalUnit: Units = \"kilometers\",\n  finalUnit: Units = \"kilometers\"\n): number {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n\n/**\n * Converts an area from one unit to another.\n *\n * @function\n * @param {number} area Area to be converted\n * @param {AreaUnits} [originalUnit=\"meters\"] Input area unit\n * @param {AreaUnits} [finalUnit=\"kilometers\"] Returned area unit\n * @returns {number} The converted length\n */\nexport function convertArea(\n  area: number,\n  originalUnit: AreaUnits = \"meters\",\n  finalUnit: AreaUnits = \"kilometers\"\n): number {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n\n  return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @function\n * @param {any} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num: any): boolean {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @function\n * @param {any} input variable to validate\n * @returns {boolean} true/false, including false for Arrays and Functions\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input: any): boolean {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {any} bbox BBox to validate\n * @returns {void}\n * @throws {Error} if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox: any): void {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {any} id Id to validate\n * @returns {void}\n * @throws {Error} if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id: any): void {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\n", "import {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  LineString,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"geojson\";\nimport { isNumber } from \"@turf/helpers\";\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @function\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord: Feature<Point> | Point | number[]): number[] {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n\n  if (!Array.isArray(coord)) {\n    if (\n      coord.type === \"Feature\" &&\n      coord.geometry !== null &&\n      coord.geometry.type === \"Point\"\n    ) {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (\n    Array.isArray(coord) &&\n    coord.length >= 2 &&\n    !Array.isArray(coord[0]) &&\n    !Array.isArray(coord[1])\n  ) {\n    return [...coord];\n  }\n\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @function\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords<\n  G extends\n    | Point\n    | LineString\n    | Polygon\n    | MultiPoint\n    | MultiLineString\n    | MultiPolygon,\n>(coords: any[] | Feature<G> | G): any[] {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n\n  // Feature\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    // Geometry\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @function\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates: any[]): boolean {\n  if (\n    coordinates.length > 1 &&\n    isNumber(coordinates[0]) &&\n    isNumber(coordinates[1])\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @function\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value: any, type: string, name: string): void {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        value.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @function\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature: Feature<any>, type: string, name: string): void {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        feature.geometry.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @function\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(\n  featureCollection: FeatureCollection<any>,\n  type: string,\n  name: string\n) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" +\n          name +\n          \": must be a \" +\n          type +\n          \", given \" +\n          feature.geometry.type\n      );\n    }\n  }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom<G extends Geometry>(geojson: Feature<G> | G): G {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(\n  geojson: Feature<any> | FeatureCollection<any> | Geometry,\n  _name?: string\n): string {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\n\nexport {\n  getCoord,\n  getCoords,\n  containsNumber,\n  geojsonType,\n  featureOf,\n  collectionOf,\n  getGeom,\n  getType,\n};\n// No default export!\n", "import pip from \"point-in-polygon-hao\";\nimport {\n  BBox,\n  Feature,\n  MultiPolygon,\n  Polygon,\n  GeoJsonProperties,\n} from \"geojson\";\nimport { Coord } from \"@turf/helpers\";\nimport { getCoord, getGeom } from \"@turf/invariant\";\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @function\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon<\n  G extends Polygon | MultiPolygon,\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  point: Coord,\n  polygon: Feature<G, P> | G,\n  options: {\n    ignoreBoundary?: boolean;\n  } = {}\n) {\n  // validation\n  if (!point) {\n    throw new Error(\"point is required\");\n  }\n  if (!polygon) {\n    throw new Error(\"polygon is required\");\n  }\n\n  const pt = getCoord(point);\n  const geom = getGeom(polygon);\n  const type = geom.type;\n  const bbox = polygon.bbox;\n  let polys: any[] = geom.coordinates;\n\n  // Quick elimination if point is not inside bbox\n  if (bbox && inBBox(pt, bbox) === false) {\n    return false;\n  }\n\n  if (type === \"Polygon\") {\n    polys = [polys];\n  }\n  let result = false;\n  for (var i = 0; i < polys.length; ++i) {\n    const polyResult = pip(pt, polys[i]);\n    if (polyResult === 0) return options.ignoreBoundary ? false : true;\n    else if (polyResult) result = true;\n  }\n\n  return result;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt: number[], bbox: BBox) {\n  return (\n    bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]\n  );\n}\n\nexport { booleanPointInPolygon };\nexport default booleanPointInPolygon;\n", "const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n", "export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n", "import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n", "import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n", "export const epsilon = 1e-6;\nexport const epsilon2 = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const quarterPi = pi / 4;\nexport const tau = pi * 2;\n\nexport const degrees = 180 / pi;\nexport const radians = pi / 180;\n\nexport const abs = Math.abs;\nexport const atan = Math.atan;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const ceil = Math.ceil;\nexport const exp = Math.exp;\nexport const floor = Math.floor;\nexport const log = Math.log;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const pow = Math.pow;\nexport const sin = Math.sin;\nexport const sign =\n  Math.sign ||\n  function (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  };\nexport const sqrt = Math.sqrt;\nexport const tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  const lambda = spherical[0],\n    phi = spherical[1],\n    cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0],\n  ];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  (a[0] += b[0]), (a[1] += b[1]), (a[2] += b[2]);\n}\n\nexport function cartesianAdd(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  (d[0] /= l), (d[1] /= l), (d[2] /= l);\n}\n\nexport function cartesianNormalize(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  return [d[0] / l, d[1] / l, d[2] / l];\n}\n", "import { Delaunay } from \"d3-delaunay\";\nimport { geoRotation, geoStereographic } from \"d3-geo\";\nimport { extent } from \"d3-array\";\nimport {\n  asin,\n  atan2,\n  cos,\n  degrees,\n  max,\n  min,\n  radians,\n  sign,\n  sin,\n  sqrt,\n} from \"./math.js\";\nimport {\n  cartesianNormalize as normalize,\n  cartesianCross as cross,\n  cartesianDot as dot,\n  cartesianAdd,\n} from \"./cartesian.js\";\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    atan2(cartesian[1], cartesian[0]) * degrees,\n    asin(max(-1, min(1, cartesian[2]))) * degrees,\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  const lambda = coordinates[0] * radians,\n    phi = coordinates[1] * radians,\n    cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}\n\n// Spherical excess of a triangle (in spherical coordinates)\nexport function excess(triangle) {\n  triangle = triangle.map((p) => cartesian(p));\n  return dot(triangle[0], cross(triangle[2], triangle[1]));\n}\n\nexport function geoDelaunay(points) {\n  const delaunay = geo_delaunay_from(points),\n    triangles = geo_triangles(delaunay),\n    edges = geo_edges(triangles, points),\n    neighbors = geo_neighbors(triangles, points.length),\n    find = geo_find(neighbors, points),\n    // Voronoi ; could take a center function as an argument\n    circumcenters = geo_circumcenters(triangles, points),\n    { polygons, centers } = geo_polygons(circumcenters, triangles, points),\n    mesh = geo_mesh(polygons),\n    hull = geo_hull(triangles, points),\n    // Urquhart ; returns a function that takes a distance array as argument.\n    urquhart = geo_urquhart(edges, triangles);\n  return {\n    delaunay,\n    edges,\n    triangles,\n    centers,\n    neighbors,\n    polygons,\n    mesh,\n    hull,\n    urquhart,\n    find,\n  };\n}\n\nfunction geo_find(neighbors, points) {\n  function distance2(a, b) {\n    let x = a[0] - b[0],\n      y = a[1] - b[1],\n      z = a[2] - b[2];\n    return x * x + y * y + z * z;\n  }\n\n  return function find(x, y, next) {\n    if (next === undefined) next = 0;\n    let cell,\n      dist,\n      found = next;\n    const xyz = cartesian([x, y]);\n    do {\n      cell = next;\n      next = null;\n      dist = distance2(xyz, cartesian(points[cell]));\n      neighbors[cell].forEach((i) => {\n        let ndist = distance2(xyz, cartesian(points[i]));\n        if (ndist < dist) {\n          dist = ndist;\n          next = i;\n          found = i;\n          return;\n        }\n      });\n    } while (next !== null);\n\n    return found;\n  };\n}\n\nfunction geo_delaunay_from(points) {\n  if (points.length < 2) return {};\n\n  // find a valid point to send to infinity\n  let pivot = 0;\n  while (isNaN(points[pivot][0] + points[pivot][1]) && pivot++ < points.length);\n\n  const r = geoRotation(points[pivot]),\n    projection = geoStereographic()\n      .translate([0, 0])\n      .scale(1)\n      .rotate(r.invert([180, 0]));\n  points = points.map(projection);\n\n  const zeros = [];\n  let max2 = 1;\n  for (let i = 0, n = points.length; i < n; i++) {\n    let m = points[i][0] ** 2 + points[i][1] ** 2;\n    if (!isFinite(m) || m > 1e32) zeros.push(i);\n    else if (m > max2) max2 = m;\n  }\n\n  const FAR = 1e6 * sqrt(max2);\n\n  zeros.forEach((i) => (points[i] = [FAR, 0]));\n\n  // Add infinite horizon points\n  points.push([0, FAR]);\n  points.push([-FAR, 0]);\n  points.push([0, -FAR]);\n\n  const delaunay = Delaunay.from(points);\n\n  delaunay.projection = projection;\n\n  // clean up the triangulation\n  const { triangles, halfedges, inedges } = delaunay;\n  const degenerate = [];\n  for (let i = 0, l = halfedges.length; i < l; i++) {\n    if (halfedges[i] < 0) {\n      const j = i % 3 == 2 ? i - 2 : i + 1;\n      const k = i % 3 == 0 ? i + 2 : i - 1;\n      const a = halfedges[j];\n      const b = halfedges[k];\n      halfedges[a] = b;\n      halfedges[b] = a;\n      halfedges[j] = halfedges[k] = -1;\n      triangles[i] = triangles[j] = triangles[k] = pivot;\n      inedges[triangles[a]] = a % 3 == 0 ? a + 2 : a - 1;\n      inedges[triangles[b]] = b % 3 == 0 ? b + 2 : b - 1;\n      degenerate.push(Math.min(i, j, k));\n      i += 2 - (i % 3);\n    } else if (triangles[i] > points.length - 3 - 1) {\n      triangles[i] = pivot;\n    }\n  }\n\n  // there should always be 4 degenerate triangles\n  // console.warn(degenerate);\n  return delaunay;\n}\n\nfunction geo_edges(triangles, points) {\n  const _index = new Set();\n  if (points.length === 2) return [[0, 1]];\n  triangles.forEach((tri) => {\n    if (tri[0] === tri[1]) return;\n    if (excess(tri.map((i) => points[i])) < 0) return;\n    for (let i = 0, j; i < 3; i++) {\n      j = (i + 1) % 3;\n      _index.add(extent([tri[i], tri[j]]).join(\"-\"));\n    }\n  });\n  return Array.from(_index, (d) => d.split(\"-\").map(Number));\n}\n\nfunction geo_triangles(delaunay) {\n  const { triangles } = delaunay;\n  if (!triangles) return [];\n\n  const geo_triangles = [];\n  for (let i = 0, n = triangles.length / 3; i < n; i++) {\n    const a = triangles[3 * i],\n      b = triangles[3 * i + 1],\n      c = triangles[3 * i + 2];\n    if (a !== b && b !== c) {\n      geo_triangles.push([a, c, b]);\n    }\n  }\n  return geo_triangles;\n}\n\nfunction geo_circumcenters(triangles, points) {\n  // if (!use_centroids) {\n  return triangles.map((tri) => {\n    const c = tri.map((i) => points[i]).map(cartesian),\n      V = cartesianAdd(\n        cartesianAdd(cross(c[1], c[0]), cross(c[2], c[1])),\n        cross(c[0], c[2])\n      );\n    return spherical(normalize(V));\n  });\n  /*} else {\n    return triangles.map(tri => {\n      return d3.geoCentroid({\n        type: \"MultiPoint\",\n        coordinates: tri.map(i => points[i])\n      });\n    });\n  }*/\n}\n\nfunction geo_neighbors(triangles, npoints) {\n  const neighbors = [];\n  triangles.forEach((tri) => {\n    for (let j = 0; j < 3; j++) {\n      const a = tri[j],\n        b = tri[(j + 1) % 3];\n      neighbors[a] = neighbors[a] || [];\n      neighbors[a].push(b);\n    }\n  });\n\n  // degenerate cases\n  if (triangles.length === 0) {\n    if (npoints === 2) (neighbors[0] = [1]), (neighbors[1] = [0]);\n    else if (npoints === 1) neighbors[0] = [];\n  }\n\n  return neighbors;\n}\n\nfunction geo_polygons(circumcenters, triangles, points) {\n  const polygons = [];\n\n  const centers = circumcenters.slice();\n\n  if (triangles.length === 0) {\n    if (points.length < 2) return { polygons, centers };\n    if (points.length === 2) {\n      // two hemispheres\n      const a = cartesian(points[0]),\n        b = cartesian(points[1]),\n        m = normalize(cartesianAdd(a, b)),\n        d = normalize(cross(a, b)),\n        c = cross(m, d);\n      const poly = [\n        m,\n        cross(m, c),\n        cross(cross(m, c), c),\n        cross(cross(cross(m, c), c), c),\n      ]\n        .map(spherical)\n        .map(supplement);\n      return (\n        polygons.push(poly),\n        polygons.push(poly.slice().reverse()),\n        { polygons, centers }\n      );\n    }\n  }\n\n  triangles.forEach((tri, t) => {\n    for (let j = 0; j < 3; j++) {\n      const a = tri[j],\n        b = tri[(j + 1) % 3],\n        c = tri[(j + 2) % 3];\n      polygons[a] = polygons[a] || [];\n      polygons[a].push([b, c, t, [a, b, c]]);\n    }\n  });\n\n  // reorder each polygon\n  const reordered = polygons.map((poly) => {\n    const p = [poly[0][2]]; // t\n    let k = poly[0][1]; // k = c\n    for (let i = 1; i < poly.length; i++) {\n      // look for b = k\n      for (let j = 0; j < poly.length; j++) {\n        if (poly[j][0] == k) {\n          k = poly[j][1];\n          p.push(poly[j][2]);\n          break;\n        }\n      }\n    }\n\n    if (p.length > 2) {\n      return p;\n    } else if (p.length == 2) {\n      const R0 = o_midpoint(\n          points[poly[0][3][0]],\n          points[poly[0][3][1]],\n          centers[p[0]]\n        ),\n        R1 = o_midpoint(\n          points[poly[0][3][2]],\n          points[poly[0][3][0]],\n          centers[p[0]]\n        );\n      const i0 = supplement(R0),\n        i1 = supplement(R1);\n      return [p[0], i1, p[1], i0];\n    }\n  });\n\n  function supplement(point) {\n    let f = -1;\n    centers.slice(triangles.length, Infinity).forEach((p, i) => {\n      if (p[0] === point[0] && p[1] === point[1]) f = i + triangles.length;\n    });\n    if (f < 0) (f = centers.length), centers.push(point);\n    return f;\n  }\n\n  return { polygons: reordered, centers };\n}\n\nfunction o_midpoint(a, b, c) {\n  a = cartesian(a);\n  b = cartesian(b);\n  c = cartesian(c);\n  const s = sign(dot(cross(b, a), c));\n  return spherical(normalize(cartesianAdd(a, b)).map((d) => s * d));\n}\n\nfunction geo_mesh(polygons) {\n  const mesh = [];\n  polygons.forEach((poly) => {\n    if (!poly) return;\n    let p = poly[poly.length - 1];\n    for (let q of poly) {\n      if (q > p) mesh.push([p, q]);\n      p = q;\n    }\n  });\n  return mesh;\n}\n\nfunction geo_urquhart(edges, triangles) {\n  return function (distances) {\n    const _lengths = new Map(),\n      _urquhart = new Map();\n    edges.forEach((edge, i) => {\n      const u = edge.join(\"-\");\n      _lengths.set(u, distances[i]);\n      _urquhart.set(u, true);\n    });\n\n    triangles.forEach((tri) => {\n      let l = 0,\n        remove = -1;\n      for (let j = 0; j < 3; j++) {\n        let u = extent([tri[j], tri[(j + 1) % 3]]).join(\"-\");\n        if (_lengths.get(u) > l) {\n          l = _lengths.get(u);\n          remove = u;\n        }\n      }\n      _urquhart.set(remove, false);\n    });\n\n    return edges.map((edge) => _urquhart.get(edge.join(\"-\")));\n  };\n}\n\nfunction geo_hull(triangles, points) {\n  const _hull = new Set(),\n    hull = [];\n  triangles.map((tri) => {\n    if (excess(tri.map((i) => points[i > points.length ? 0 : i])) > 1e-12)\n      return;\n    for (let i = 0; i < 3; i++) {\n      let e = [tri[i], tri[(i + 1) % 3]],\n        code = `${e[0]}-${e[1]}`;\n      if (_hull.has(code)) _hull.delete(code);\n      else _hull.add(`${e[1]}-${e[0]}`);\n    }\n  });\n\n  const _index = new Map();\n  let start;\n  _hull.forEach((e) => {\n    e = e.split(\"-\").map(Number);\n    _index.set(e[0], e[1]);\n    start = e[0];\n  });\n\n  if (start === undefined) return hull;\n\n  let next = start;\n  do {\n    hull.push(next);\n    let n = _index.get(next);\n    _index.set(next, -1);\n    next = n;\n  } while (next > -1 && next !== start);\n\n  return hull;\n}\n", "import { geoCentroid, geoDistance } from \"d3-geo\";\nimport { geoDelaunay, excess } from \"./delaunay.js\";\n\nexport function geoVoronoi(data) {\n  const v = function (data) {\n    v.delaunay = null;\n    v._data = data;\n\n    if (typeof v._data === \"object\" && v._data.type === \"FeatureCollection\") {\n      v._data = v._data.features;\n    }\n    if (typeof v._data === \"object\") {\n      const temp = v._data\n        .map((d) => [v._vx(d), v._vy(d), d])\n        .filter((d) => isFinite(d[0] + d[1]));\n      v.points = temp.map((d) => [d[0], d[1]]);\n      v.valid = temp.map((d) => d[2]);\n      v.delaunay = geoDelaunay(v.points);\n    }\n    return v;\n  };\n\n  v._vx = function (d) {\n    if (typeof d == \"object\" && \"type\" in d) {\n      return geoCentroid(d)[0];\n    }\n    if (0 in d) return d[0];\n  };\n  v._vy = function (d) {\n    if (typeof d == \"object\" && \"type\" in d) {\n      return geoCentroid(d)[1];\n    }\n    if (1 in d) return d[1];\n  };\n\n  v.x = function (f) {\n    if (!f) return v._vx;\n    v._vx = f;\n    return v;\n  };\n  v.y = function (f) {\n    if (!f) return v._vy;\n    v._vy = f;\n    return v;\n  };\n\n  v.polygons = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n\n    if (!v.delaunay) return false;\n    const coll = {\n      type: \"FeatureCollection\",\n      features: [],\n    };\n    if (v.valid.length === 0) return coll;\n    v.delaunay.polygons.forEach((poly, i) =>\n      coll.features.push({\n        type: \"Feature\",\n        geometry: !poly\n          ? null\n          : {\n              type: \"Polygon\",\n              coordinates: [\n                [...poly, poly[0]].map((i) => v.delaunay.centers[i]),\n              ],\n            },\n        properties: {\n          site: v.valid[i],\n          sitecoordinates: v.points[i],\n          neighbours: v.delaunay.neighbors[i], // not part of the public API\n        },\n      })\n    );\n    if (v.valid.length === 1)\n      coll.features.push({\n        type: \"Feature\",\n        geometry: { type: \"Sphere\" },\n        properties: {\n          site: v.valid[0],\n          sitecoordinates: v.points[0],\n          neighbours: [],\n        },\n      });\n    return coll;\n  };\n\n  v.triangles = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n\n    return {\n      type: \"FeatureCollection\",\n      features: v.delaunay.triangles\n        .map((tri, index) => {\n          tri = tri.map((i) => v.points[i]);\n          tri.center = v.delaunay.centers[index];\n          return tri;\n        })\n        .filter((tri) => excess(tri) > 0)\n        .map((tri) => ({\n          type: \"Feature\",\n          properties: {\n            circumcenter: tri.center,\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [[...tri, tri[0]]],\n          },\n        })),\n    };\n  };\n\n  v.links = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    const _distances = v.delaunay.edges.map((e) =>\n        geoDistance(v.points[e[0]], v.points[e[1]])\n      ),\n      _urquart = v.delaunay.urquhart(_distances);\n    return {\n      type: \"FeatureCollection\",\n      features: v.delaunay.edges.map((e, i) => ({\n        type: \"Feature\",\n        properties: {\n          source: v.valid[e[0]],\n          target: v.valid[e[1]],\n          length: _distances[i],\n          urquhart: !!_urquart[i],\n        },\n        geometry: {\n          type: \"LineString\",\n          coordinates: [v.points[e[0]], v.points[e[1]]],\n        },\n      })),\n    };\n  };\n\n  v.mesh = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    return {\n      type: \"MultiLineString\",\n      coordinates: v.delaunay.edges.map((e) => [\n        v.points[e[0]],\n        v.points[e[1]],\n      ]),\n    };\n  };\n\n  v.cellMesh = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    const { centers, polygons } = v.delaunay;\n    const coordinates = [];\n    for (const p of polygons) {\n      if (!p) continue;\n      for (\n        let n = p.length, p0 = p[n - 1], p1 = p[0], i = 0;\n        i < n;\n        p0 = p1, p1 = p[++i]\n      ) {\n        if (p1 > p0) {\n          coordinates.push([centers[p0], centers[p1]]);\n        }\n      }\n    }\n    return {\n      type: \"MultiLineString\",\n      coordinates,\n    };\n  };\n\n  v._found = undefined;\n  v.find = function (x, y, radius) {\n    v._found = v.delaunay.find(x, y, v._found);\n    if (!radius || geoDistance([x, y], v.points[v._found]) < radius)\n      return v._found;\n  };\n\n  v.hull = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    const hull = v.delaunay.hull,\n      points = v.points;\n    return hull.length === 0\n      ? null\n      : {\n          type: \"Polygon\",\n          coordinates: [[...hull.map((i) => points[i]), points[hull[0]]]],\n        };\n  };\n\n  return data ? v(data) : v;\n}\n", "import { BufferGeometry, Float32BufferAttribute } from 'three';\nimport { merge, extent, mean } from 'd3-array';\nimport earcut, { flatten } from 'earcut';\nimport Delaunator from 'delaunator';\nimport turfPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { geoBounds, geoContains, geoDistance, geoInterpolate } from 'd3-geo';\nimport { geoVoronoi } from 'd3-geo-voronoi';\nimport { scaleLinear } from 'd3-scale';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _createClass(e, r, t) {\n  return Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ; else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nfunction geoPolygonTriangulate(polygon) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? Infinity : _ref$resolution;\n  var contour = interpolateContourPoints(polygon, resolution);\n  var edgePoints = merge(contour);\n  var innerPoints = getInnerGeoPoints(polygon, resolution);\n  var points = [].concat(_toConsumableArray(edgePoints), _toConsumableArray(innerPoints));\n  var boundariesGeojson = {\n    type: 'Polygon',\n    coordinates: polygon\n  };\n  var _geoBounds = geoBounds(boundariesGeojson),\n    _geoBounds2 = _slicedToArray(_geoBounds, 2),\n    _geoBounds2$ = _slicedToArray(_geoBounds2[0], 2),\n    minLng = _geoBounds2$[0],\n    minLat = _geoBounds2$[1],\n    _geoBounds2$2 = _slicedToArray(_geoBounds2[1], 2),\n    maxLng = _geoBounds2$2[0],\n    maxLat = _geoBounds2$2[1];\n  var crossesPoleOrAntimeridian = minLng > maxLng // crosses antimeridian\n  || maxLat >= 89 // crosses north pole\n  || minLat <= -89; // crosses south pole\n\n  var indices = [];\n  if (crossesPoleOrAntimeridian) {\n    // Use d3-geo-voronoi. Slowest, but most accurate for polygons that cross poles or anti-meridian\n    var vt = geoVoronoi(points).triangles(); // geoDelaunay generates more triangles than needed\n    var pntMap = new Map(points.map(function (_ref2, idx) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        lng = _ref3[0],\n        lat = _ref3[1];\n      return [\"\".concat(lng, \"-\").concat(lat), idx];\n    }));\n    vt.features.forEach(function (f) {\n      var _indices;\n      var triangle = f.geometry.coordinates[0].slice(0, 3).reverse(); // reverse wound to match earcut\n\n      var inds = [];\n      triangle.forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          lng = _ref5[0],\n          lat = _ref5[1];\n        var k = \"\".concat(lng, \"-\").concat(lat);\n        pntMap.has(k) && inds.push(pntMap.get(k));\n      });\n      if (inds.length !== 3) return; // triangle malfunction\n\n      // exclude edge triangles outside polygon perimeter or through holes\n      if (inds.some(function (ind) {\n        return ind < edgePoints.length;\n      })) {\n        var triangleCentroid = f.properties.circumcenter;\n        if (!pointInside(triangleCentroid, boundariesGeojson, crossesPoleOrAntimeridian)) return;\n      }\n      (_indices = indices).push.apply(_indices, inds);\n    });\n  } else if (!innerPoints.length) {\n    // earcut triangulation slightly more performing if it's only using the polygon perimeter\n    var _earcutFlatten = flatten(contour),\n      vertices = _earcutFlatten.vertices,\n      _earcutFlatten$holes = _earcutFlatten.holes,\n      holes = _earcutFlatten$holes === void 0 ? [] : _earcutFlatten$holes;\n    indices = earcut(vertices, holes, 2);\n  } else {\n    // use delaunator\n    var delaunay = Delaunator.from(points);\n    var _loop = function _loop(i) {\n      var _indices2;\n      var inds = [2, 1, 0].map(function (idx) {\n        return delaunay.triangles[i + idx];\n      }); // reverse wound to have same orientation as earcut\n      var triangle = inds.map(function (indice) {\n        return points[indice];\n      });\n\n      // exclude edge triangles outside polygon perimeter or through holes\n      if (inds.some(function (ind) {\n        return ind < edgePoints.length;\n      })) {\n        var triangleCentroid = [0, 1].map(function (coordIdx) {\n          return mean(triangle, function (p) {\n            return p[coordIdx];\n          });\n        });\n        if (!pointInside(triangleCentroid, boundariesGeojson, crossesPoleOrAntimeridian)) return 1; // continue\n      }\n      (_indices2 = indices).push.apply(_indices2, _toConsumableArray(inds));\n    };\n    for (var i = 0, len = delaunay.triangles.length; i < len; i += 3) {\n      if (_loop(i)) continue;\n    }\n  }\n\n  // calc uvs\n  var lngUvScale = scaleLinear(extent(points, function (d) {\n    return d[0];\n  }), [0, 1]);\n  var latUvScale = scaleLinear(extent(points, function (d) {\n    return d[1];\n  }), [0, 1]);\n  var uvs = points.map(function (_ref6) {\n    var _ref7 = _slicedToArray(_ref6, 2),\n      lng = _ref7[0],\n      lat = _ref7[1];\n    return [lngUvScale(lng), latUvScale(lat)];\n  });\n  var triangles = {\n    points: points,\n    indices: indices,\n    uvs: uvs\n  };\n  return {\n    contour: contour,\n    triangles: triangles\n  };\n}\nfunction interpolateContourPoints(polygon, maxDistance) {\n  // add interpolated points for segments that are further apart than the max distance\n  return polygon.map(function (coords) {\n    var pnts = [];\n    var prevPnt;\n    coords.forEach(function (pnt) {\n      if (prevPnt) {\n        var dist = geoDistance(pnt, prevPnt) * 180 / Math.PI;\n        if (dist > maxDistance) {\n          var interpol = geoInterpolate(prevPnt, pnt);\n          var tStep = 1 / Math.ceil(dist / maxDistance);\n          var t = tStep;\n          while (t < 1) {\n            pnts.push(interpol(t));\n            t += tStep;\n          }\n        }\n      }\n      pnts.push(prevPnt = pnt);\n    });\n    return pnts;\n  });\n}\nfunction getInnerGeoPoints(polygon, maxDistance) {\n  var boundariesGeojson = {\n    type: 'Polygon',\n    coordinates: polygon\n  };\n  var _geoBounds3 = geoBounds(boundariesGeojson),\n    _geoBounds4 = _slicedToArray(_geoBounds3, 2),\n    _geoBounds4$ = _slicedToArray(_geoBounds4[0], 2),\n    minLng = _geoBounds4$[0],\n    minLat = _geoBounds4$[1],\n    _geoBounds4$2 = _slicedToArray(_geoBounds4[1], 2),\n    maxLng = _geoBounds4$2[0],\n    maxLat = _geoBounds4$2[1];\n\n  // polygon smaller than maxDistance -> no inner points\n  if (Math.min(Math.abs(maxLng - minLng), Math.abs(maxLat - minLat)) < maxDistance) return [];\n  var crossesPoleOrAntimeridian = minLng > maxLng || maxLat >= 89 || minLat <= -89;\n  return getGeoSpiralGrid(maxDistance, {\n    minLng: minLng,\n    maxLng: maxLng,\n    minLat: minLat,\n    maxLat: maxLat\n  }).filter(function (pnt) {\n    return pointInside(pnt, boundariesGeojson, crossesPoleOrAntimeridian);\n  });\n}\nfunction getGeoSpiralGrid(distanceBetweenPoints) {\n  var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    minLng = _ref8.minLng,\n    maxLng = _ref8.maxLng,\n    minLat = _ref8.minLat,\n    maxLat = _ref8.maxLat;\n  var numPoints = Math.round(Math.pow(360 / distanceBetweenPoints, 2) / Math.PI);\n\n  // https://observablehq.com/@mbostock/spherical-fibonacci-lattice\n  var phi = (1 + Math.sqrt(5)) / 2; // golden ratio\n\n  var getPntLng = function getPntLng(idx) {\n    return idx / phi * 360 % 360 - 180;\n  };\n  var getPntLat = function getPntLat(idx) {\n    return Math.acos(2 * idx / numPoints - 1) / Math.PI * 180 - 90;\n  };\n  var getPntIdx = function getPntIdx(lat) {\n    return numPoints * (Math.cos((lat + 90) * Math.PI / 180) + 1) / 2;\n  };\n  var pntIdxRange = [maxLat !== undefined ? Math.ceil(getPntIdx(maxLat)) : 0, minLat !== undefined ? Math.floor(getPntIdx(minLat)) : numPoints - 1];\n  var isLngInRange = minLng === undefined && maxLng === undefined ? function () {\n    return true;\n  } : minLng === undefined ? function (lng) {\n    return lng <= maxLng;\n  } : maxLng === undefined ? function (lng) {\n    return lng >= minLng;\n  } : maxLng >= minLng ? function (lng) {\n    return lng >= minLng && lng <= maxLng;\n  } : function (lng) {\n    return lng >= minLng || lng <= maxLng;\n  }; // for ranges that cross the anti-meridian\n\n  var pnts = [];\n  for (var i = pntIdxRange[0]; i <= pntIdxRange[1]; i++) {\n    var lng = getPntLng(i);\n    isLngInRange(lng) && pnts.push([lng, getPntLat(i)]);\n  }\n  return pnts;\n}\nfunction pointInside(pnt, polygon) {\n  var crossesPoleOrAntimeridian = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // turf method is more performing but malfunctions if polygon includes a pole (lat = 90 | -90) or crosses the antimeridian (lng = 180 | -180)\n  return crossesPoleOrAntimeridian ? geoContains(polygon, pnt) : turfPointInPolygon(pnt, polygon);\n}\n\nvar THREE = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  BufferGeometry: BufferGeometry,\n  Float32BufferAttribute: Float32BufferAttribute\n};\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nvar ConicPolygonBufferGeometry = /*#__PURE__*/function (_THREE$BufferGeometry) {\n  function ConicPolygonBufferGeometry(polygonGeoJson, startHeight, endHeight, closedBottom, closedTop, includeSides, curvatureResolution) {\n    var _this;\n    _classCallCheck(this, ConicPolygonBufferGeometry);\n    _this = _callSuper(this, ConicPolygonBufferGeometry);\n    _this.type = 'ConicPolygonBufferGeometry';\n    _this.parameters = {\n      polygonGeoJson: polygonGeoJson,\n      startHeight: startHeight,\n      endHeight: endHeight,\n      closedBottom: closedBottom,\n      closedTop: closedTop,\n      includeSides: includeSides,\n      curvatureResolution: curvatureResolution\n    };\n\n    // defaults\n    startHeight = startHeight || 0;\n    endHeight = endHeight || 1;\n    closedBottom = closedBottom !== undefined ? closedBottom : true;\n    closedTop = closedTop !== undefined ? closedTop : true;\n    includeSides = includeSides !== undefined ? includeSides : true;\n    curvatureResolution = curvatureResolution || 5; // in angular degrees\n\n    // pre-calculate contour, triangulation and UV maps\n    var _geoPolygonTriangulat = geoPolygonTriangulate(polygonGeoJson, {\n        resolution: curvatureResolution\n      }),\n      contour = _geoPolygonTriangulat.contour,\n      triangles = _geoPolygonTriangulat.triangles;\n    var flatUvs = merge(triangles.uvs);\n    var vertices = [];\n    var uvs = [];\n    var indices = [];\n    var groupCnt = 0; // add groups to apply different materials to torso / caps\n\n    var addGroup = function addGroup(groupData) {\n      var prevVertCnt = Math.round(vertices.length / 3);\n      var prevIndCnt = indices.length;\n      vertices = vertices.concat(groupData.vertices);\n      uvs = uvs.concat(groupData.uvs);\n      indices = indices.concat(!prevVertCnt ? groupData.indices : groupData.indices.map(function (ind) {\n        return ind + prevVertCnt;\n      }));\n      _this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n    };\n    includeSides && addGroup(generateTorso());\n    closedBottom && addGroup(generateCap(startHeight, false));\n    closedTop && addGroup(generateCap(endHeight, true));\n\n    // build geometry\n    _this.setIndex(indices);\n    _this[setAttributeFn]('position', new THREE.Float32BufferAttribute(vertices, 3));\n    _this[setAttributeFn]('uv', new THREE.Float32BufferAttribute(uvs, 2));\n\n    // auto-calculate normals\n    _this.computeVertexNormals();\n\n    //\n\n    function generateVertices(polygon, altitude) {\n      var coords3d = polygon.map(function (coords) {\n        return coords.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            lng = _ref2[0],\n            lat = _ref2[1];\n          return polar2Cartesian(lat, lng, altitude);\n        });\n      });\n      // returns { vertices, holes, coordinates }. Each point generates 3 vertice items (x,y,z).\n      return flatten(coords3d);\n    }\n    function generateTorso() {\n      var _generateVertices = generateVertices(contour, startHeight),\n        bottomVerts = _generateVertices.vertices,\n        holes = _generateVertices.holes;\n      var _generateVertices2 = generateVertices(contour, endHeight),\n        topVerts = _generateVertices2.vertices;\n      var vertices = merge([topVerts, bottomVerts]);\n      var numPoints = Math.round(topVerts.length / 3);\n      var holesIdx = new Set(holes);\n      var lastHoleIdx = 0;\n      var indices = [];\n      for (var v0Idx = 0; v0Idx < numPoints; v0Idx++) {\n        var v1Idx = v0Idx + 1; // next point\n        if (v1Idx === numPoints) {\n          v1Idx = lastHoleIdx; // close final loop\n        } else if (holesIdx.has(v1Idx)) {\n          var holeIdx = v1Idx;\n          v1Idx = lastHoleIdx; // close hole loop\n          lastHoleIdx = holeIdx;\n        }\n\n        // Each pair of coords generates two triangles (faces)\n        indices.push(v0Idx, v0Idx + numPoints, v1Idx + numPoints);\n        indices.push(v1Idx + numPoints, v1Idx, v0Idx);\n      }\n      var uvs = []; // wrap texture around perimeter (u), with v=1 on top\n      for (var v = 1; v >= 0; v--) for (var i = 0; i < numPoints; i += 1) uvs.push(i / (numPoints - 1), v);\n      return {\n        indices: indices,\n        vertices: vertices,\n        uvs: uvs\n      };\n    }\n    function generateCap(radius) {\n      var isTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return {\n        // need to reverse-wind the bottom triangles to make them face outwards\n        indices: isTop ? triangles.indices : triangles.indices.slice().reverse(),\n        vertices: generateVertices([triangles.points], radius).vertices,\n        uvs: flatUvs\n      };\n    }\n    return _this;\n  }\n  _inherits(ConicPolygonBufferGeometry, _THREE$BufferGeometry);\n  return _createClass(ConicPolygonBufferGeometry);\n}(THREE.BufferGeometry); //\nfunction polar2Cartesian(lat, lng) {\n  var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var phi = (90 - lat) * Math.PI / 180;\n  var theta = (90 - lng) * Math.PI / 180;\n  return [r * Math.sin(phi) * Math.cos(theta),\n  // x\n  r * Math.cos(phi),\n  // y\n  r * Math.sin(phi) * Math.sin(theta) // z\n  ];\n}\n\nexport { ConicPolygonBufferGeometry, ConicPolygonBufferGeometry as ConicPolygonGeometry };\n", "// @ts-nocheck\n\nvar libh3 = (\nfunction(libh3) {\n  libh3 = libh3 || {};\n\nvar Module=typeof libh3!==\"undefined\"?libh3:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\" && document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var GLOBAL_BASE=8;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for getValue: \"+type)}return null}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=28640,DYNAMIC_BASE=5271520,DYNAMICTOP_PTR=28608;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||33554432;if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var tempDouble;var tempI64;memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=28624;function demangle(func){return func}function demangleAll(text){var regex=/\\b__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function _emscripten_get_heap_size(){return HEAP8.length}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function emscripten_realloc_buffer(size){try{var newBuffer=new ArrayBuffer(size);if(newBuffer.byteLength!=size)return;new Int8Array(newBuffer).set(HEAP8);_emscripten_replace_memory(newBuffer);updateGlobalBufferAndViews(newBuffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=16777216;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array};var asmLibraryArg={\"a\":abort,\"b\":setTempRet0,\"c\":getTempRet0,\"d\":___assert_fail,\"e\":___setErrNo,\"f\":_emscripten_get_heap_size,\"g\":_emscripten_memcpy_big,\"h\":_emscripten_resize_heap,\"i\":abortOnCannotGrowMemory,\"j\":demangle,\"k\":demangleAll,\"l\":emscripten_realloc_buffer,\"m\":jsStackTrace,\"n\":stackTrace,\"o\":tempDoublePtr,\"p\":DYNAMICTOP_PTR};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"almost asm\";var a=new global.Int8Array(buffer),b=new global.Int32Array(buffer),c=new global.Uint8Array(buffer),d=new global.Float32Array(buffer),e=new global.Float64Array(buffer),f=env.o|0,g=env.p|0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=global.Math.floor,q=global.Math.abs,r=global.Math.sqrt,s=global.Math.pow,t=global.Math.cos,u=global.Math.sin,v=global.Math.tan,w=global.Math.acos,x=global.Math.asin,y=global.Math.atan,z=global.Math.atan2,A=global.Math.ceil,B=global.Math.imul,C=global.Math.min,D=global.Math.max,E=global.Math.clz32,F=env.a,G=env.b,H=env.c,I=env.d,J=env.e,K=env.f,L=env.g,M=env.h,N=env.i,O=env.j,P=env.k,Q=env.l,R=env.m,S=env.n,T=28640,U=5271520,V=0.0;function W(newBuffer){a=new Int8Array(newBuffer);c=new Uint8Array(newBuffer);b=new Int32Array(newBuffer);d=new Float32Array(newBuffer);e=new Float64Array(newBuffer);buffer=newBuffer;return true}\n// EMSCRIPTEN_START_FUNCS\nfunction X(a){a=a|0;var b=0;b=T;T=T+a|0;T=T+15&-16;return b|0}function Y(){return T|0}function Z(a){a=a|0;T=a}function _(a,b){a=a|0;b=b|0;T=a;U=b}function $(a,c){a=a|0;c=c|0;var d=0,e=0,f=0;if((a|0)<0){c=2;return c|0}if((a|0)>13780509){c=sc(15,c)|0;return c|0}else{d=((a|0)<0)<<31>>31;f=Kd(a|0,d|0,3,0)|0;e=H()|0;d=Ed(a|0,d|0,1,0)|0;d=Kd(f|0,e|0,d|0,H()|0)|0;d=Ed(d|0,H()|0,1,0)|0;a=H()|0;b[c>>2]=d;b[c+4>>2]=a;c=0;return c|0}return 0}function aa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ba(a,b,c,d,0)|0}function ba(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;j=T;T=T+16|0;h=j;if(!(ca(a,c,d,e,f)|0)){e=0;T=j;return e|0}do if((d|0)>=0){if((d|0)>13780509){g=sc(15,h)|0;if(g|0)break;i=h;h=b[i>>2]|0;i=b[i+4>>2]|0}else{g=((d|0)<0)<<31>>31;k=Kd(d|0,g|0,3,0)|0;i=H()|0;g=Ed(d|0,g|0,1,0)|0;g=Kd(k|0,i|0,g|0,H()|0)|0;g=Ed(g|0,H()|0,1,0)|0;i=H()|0;b[h>>2]=g;b[h+4>>2]=i;h=g}Vd(e|0,0,h<<3|0)|0;if(f|0){Vd(f|0,0,h<<2|0)|0;g=da(a,c,d,e,f,h,i,0)|0;break}g=Dd(h,4)|0;if(!g)g=13;else{k=da(a,c,d,e,g,h,i,0)|0;Cd(g);g=k}}else g=2;while(0);k=g;T=j;return k|0}function ca(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=T;T=T+16|0;o=q;p=q+8|0;n=o;b[n>>2]=a;b[n+4>>2]=c;if((d|0)<0){p=2;T=q;return p|0}g=e;b[g>>2]=a;b[g+4>>2]=c;g=(f|0)!=0;if(g)b[f>>2]=0;if(Fb(a,c)|0){p=9;T=q;return p|0}b[p>>2]=0;a:do if((d|0)>=1)if(g){l=1;k=0;m=0;n=1;g=a;while(1){if(!(k|m)){g=ea(g,c,4,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;if(Fb(g,c)|0){g=9;break a}}g=ea(g,c,b[26800+(m<<2)>>2]|0,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;a=e+(l<<3)|0;b[a>>2]=g;b[a+4>>2]=c;b[f+(l<<2)>>2]=n;a=k+1|0;h=(a|0)==(n|0);i=m+1|0;j=(i|0)==6;if(Fb(g,c)|0){g=9;break a}n=n+(j&h&1)|0;if((n|0)>(d|0)){g=0;break}else{l=l+1|0;k=h?0:a;m=h?(j?0:i):m}}}else{l=1;k=0;m=0;n=1;g=a;while(1){if(!(k|m)){g=ea(g,c,4,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;if(Fb(g,c)|0){g=9;break a}}g=ea(g,c,b[26800+(m<<2)>>2]|0,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;a=e+(l<<3)|0;b[a>>2]=g;b[a+4>>2]=c;a=k+1|0;h=(a|0)==(n|0);i=m+1|0;j=(i|0)==6;if(Fb(g,c)|0){g=9;break a}n=n+(j&h&1)|0;if((n|0)>(d|0)){g=0;break}else{l=l+1|0;k=h?0:a;m=h?(j?0:i):m}}}else g=0;while(0);p=g;T=q;return p|0}function da(a,c,d,e,f,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=T;T=T+16|0;o=q+8|0;p=q;j=Md(a|0,c|0,g|0,h|0)|0;l=H()|0;m=e+(j<<3)|0;r=m;s=b[r>>2]|0;r=b[r+4>>2]|0;k=(s|0)==(a|0)&(r|0)==(c|0);if(!((s|0)==0&(r|0)==0|k))do{j=Ed(j|0,l|0,1,0)|0;j=Ld(j|0,H()|0,g|0,h|0)|0;l=H()|0;m=e+(j<<3)|0;s=m;r=b[s>>2]|0;s=b[s+4>>2]|0;k=(r|0)==(a|0)&(s|0)==(c|0)}while(!((r|0)==0&(s|0)==0|k));j=f+(j<<2)|0;if(k?(b[j>>2]|0)<=(i|0):0){s=0;T=q;return s|0}s=m;b[s>>2]=a;b[s+4>>2]=c;b[j>>2]=i;if((i|0)>=(d|0)){s=0;T=q;return s|0}k=i+1|0;b[o>>2]=0;j=ea(a,c,2,o,p)|0;switch(j|0){case 9:{n=9;break}case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(!j)n=9;break}default:{}}a:do if((n|0)==9){b[o>>2]=0;j=ea(a,c,3,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,1,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,5,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,4,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,6,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}s=0;T=q;return s|0}while(0);s=j;T=q;return s|0}function ea(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>6){f=1;return f|0}m=(b[e>>2]|0)%6|0;b[e>>2]=m;if((m|0)>0){g=0;do{d=Za(d)|0;g=g+1|0}while((g|0)<(b[e>>2]|0))}m=Od(a|0,c|0,45)|0;H()|0;l=m&127;if(l>>>0>121){f=5;return f|0}j=Nb(a,c)|0;g=Od(a|0,c|0,52)|0;H()|0;g=g&15;a:do if(!g)k=8;else{while(1){h=(15-g|0)*3|0;i=Od(a|0,c|0,h|0)|0;H()|0;i=i&7;if((i|0)==7){c=5;break}p=(Tb(g)|0)==0;g=g+-1|0;n=Pd(7,0,h|0)|0;c=c&~(H()|0);o=Pd(b[(p?432:16)+(i*28|0)+(d<<2)>>2]|0,0,h|0)|0;h=H()|0;d=b[(p?640:224)+(i*28|0)+(d<<2)>>2]|0;a=o|a&~n;c=h|c;if(!d){d=0;break a}if(!g){k=8;break a}}return c|0}while(0);if((k|0)==8){p=b[848+(l*28|0)+(d<<2)>>2]|0;o=Pd(p|0,0,45)|0;a=o|a;c=H()|0|c&-1040385;d=b[4272+(l*28|0)+(d<<2)>>2]|0;if((p&127|0)==127){p=Pd(b[848+(l*28|0)+20>>2]|0,0,45)|0;c=H()|0|c&-1040385;d=b[4272+(l*28|0)+20>>2]|0;a=Pb(p|a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+1}}i=Od(a|0,c|0,45)|0;H()|0;i=i&127;b:do if(!(ma(i)|0)){if((d|0)>0){g=0;do{a=Pb(a,c)|0;c=H()|0;g=g+1|0}while((g|0)!=(d|0))}}else{c:do if((Nb(a,c)|0)==1){if((l|0)!=(i|0))if(sa(i,b[7696+(l*28|0)>>2]|0)|0){a=Rb(a,c)|0;h=1;c=H()|0;break}else I(27795,26864,436,26872);switch(j|0){case 3:{a=Pb(a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+1;h=0;break c}case 5:{a=Rb(a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+5;h=0;break c}case 0:{p=9;return p|0}default:{p=1;return p|0}}}else h=0;while(0);if((d|0)>0){g=0;do{a=Ob(a,c)|0;c=H()|0;g=g+1|0}while((g|0)!=(d|0))}if((l|0)!=(i|0)){if(!(na(i)|0)){if((h|0)!=0|(Nb(a,c)|0)!=5)break;b[e>>2]=(b[e>>2]|0)+1;break}switch(m&127){case 8:case 118:break b;default:{}}if((Nb(a,c)|0)!=3)b[e>>2]=(b[e>>2]|0)+1}}while(0);b[e>>2]=((b[e>>2]|0)+d|0)%6|0;p=f;b[p>>2]=a;b[p+4>>2]=c;p=0;return p|0}function fa(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=T;T=T+16|0;g=i;h=i+8|0;f=(Fb(a,c)|0)==0;f=f?1:2;while(1){b[h>>2]=0;k=(ea(a,c,f,h,g)|0)==0;j=g;if(k&((b[j>>2]|0)==(d|0)?(b[j+4>>2]|0)==(e|0):0)){a=4;break}f=f+1|0;if(f>>>0>=7){f=7;a=4;break}}if((a|0)==4){T=i;return f|0}return 0}function ga(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=T;T=T+16|0;n=p;o=p+8|0;m=n;b[m>>2]=a;b[m+4>>2]=c;if(!d){o=e;b[o>>2]=a;b[o+4>>2]=c;o=0;T=p;return o|0}b[o>>2]=0;a:do if(!(Fb(a,c)|0)){g=(d|0)>0;if(g){f=0;m=a;do{a=ea(m,c,4,o,n)|0;if(a|0)break a;c=n;m=b[c>>2]|0;c=b[c+4>>2]|0;f=f+1|0;if(Fb(m,c)|0){a=9;break a}}while((f|0)<(d|0));l=e;b[l>>2]=m;b[l+4>>2]=c;l=d+-1|0;if(g){k=0;a=1;do{f=26800+(k<<2)|0;if((k|0)==5){h=b[f>>2]|0;g=0;f=a;while(1){a=n;a=ea(b[a>>2]|0,b[a+4>>2]|0,h,o,n)|0;if(a|0)break a;if((g|0)!=(l|0)){j=n;i=b[j>>2]|0;j=b[j+4>>2]|0;a=e+(f<<3)|0;b[a>>2]=i;b[a+4>>2]=j;if(!(Fb(i,j)|0))a=f+1|0;else{a=9;break a}}else a=f;g=g+1|0;if((g|0)>=(d|0))break;else f=a}}else{h=n;j=b[f>>2]|0;i=0;f=a;g=b[h>>2]|0;h=b[h+4>>2]|0;while(1){a=ea(g,h,j,o,n)|0;if(a|0)break a;h=n;g=b[h>>2]|0;h=b[h+4>>2]|0;a=e+(f<<3)|0;b[a>>2]=g;b[a+4>>2]=h;a=f+1|0;if(Fb(g,h)|0){a=9;break a}i=i+1|0;if((i|0)>=(d|0))break;else f=a}}k=k+1|0}while(k>>>0<6);a=n;h=m;f=b[a>>2]|0;g=c;a=b[a+4>>2]|0}else{h=m;f=m;g=c;a=c}}else{h=e;b[h>>2]=a;b[h+4>>2]=c;h=a;f=a;g=c;a=c}a=(h|0)==(f|0)&(g|0)==(a|0)?0:9}else a=9;while(0);o=a;T=p;return o|0}function ha(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=T;T=T+48|0;f=i+16|0;g=i+8|0;h=i;d=Vc(d)|0;if(d|0){h=d;T=i;return h|0}k=a;j=b[k+4>>2]|0;d=g;b[d>>2]=b[k>>2];b[d+4>>2]=j;Uc(g,f);d=Fa(f,c,h)|0;if(!d){c=b[g>>2]|0;g=b[a+8>>2]|0;if((g|0)>0){f=b[a+12>>2]|0;d=0;do{c=(b[f+(d<<3)>>2]|0)+c|0;d=d+1|0}while((d|0)<(g|0))}d=h;f=b[d>>2]|0;d=b[d+4>>2]|0;g=((c|0)<0)<<31>>31;if((d|0)<(g|0)|(d|0)==(g|0)&f>>>0<c>>>0){d=h;b[d>>2]=c;b[d+4>>2]=g;d=g}else c=f;j=Ed(c|0,d|0,12,0)|0;k=H()|0;d=h;b[d>>2]=j;b[d+4>>2]=k;d=e;b[d>>2]=j;b[d+4>>2]=k;d=0}k=d;T=i;return k|0}function ia(a,c,d,f,g,h,i){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0;I=T;T=T+64|0;D=I+48|0;E=I+32|0;F=I+24|0;x=I+8|0;y=I;k=b[a>>2]|0;if((k|0)<=0){G=0;T=I;return G|0}z=a+4|0;A=D+8|0;B=E+8|0;C=x+8|0;j=0;v=0;while(1){l=b[z>>2]|0;u=l+(v<<4)|0;b[D>>2]=b[u>>2];b[D+4>>2]=b[u+4>>2];b[D+8>>2]=b[u+8>>2];b[D+12>>2]=b[u+12>>2];if((v|0)==(k+-1|0)){b[E>>2]=b[l>>2];b[E+4>>2]=b[l+4>>2];b[E+8>>2]=b[l+8>>2];b[E+12>>2]=b[l+12>>2]}else{u=l+(v+1<<4)|0;b[E>>2]=b[u>>2];b[E+4>>2]=b[u+4>>2];b[E+8>>2]=b[u+8>>2];b[E+12>>2]=b[u+12>>2]}k=Ga(D,E,f,F)|0;a:do if(!k){k=F;l=b[k>>2]|0;k=b[k+4>>2]|0;if((k|0)>0|(k|0)==0&l>>>0>0){t=0;u=0;b:while(1){K=1.0/(+(l>>>0)+4294967296.0*+(k|0));M=+e[D>>3];k=Fd(l|0,k|0,t|0,u|0)|0;L=+(k>>>0)+4294967296.0*+(H()|0);J=+(t>>>0)+4294967296.0*+(u|0);e[x>>3]=K*(M*L)+K*(+e[E>>3]*J);e[C>>3]=K*(+e[A>>3]*L)+K*(+e[B>>3]*J);k=Ub(x,f,y)|0;if(k|0){j=k;break}s=y;r=b[s>>2]|0;s=b[s+4>>2]|0;o=Md(r|0,s|0,c|0,d|0)|0;m=H()|0;k=i+(o<<3)|0;n=k;l=b[n>>2]|0;n=b[n+4>>2]|0;c:do if((l|0)==0&(n|0)==0){w=k;G=16}else{p=0;q=0;while(1){if((p|0)>(d|0)|(p|0)==(d|0)&q>>>0>c>>>0){j=1;break b}if((l|0)==(r|0)&(n|0)==(s|0))break c;k=Ed(o|0,m|0,1,0)|0;o=Ld(k|0,H()|0,c|0,d|0)|0;m=H()|0;q=Ed(q|0,p|0,1,0)|0;p=H()|0;k=i+(o<<3)|0;n=k;l=b[n>>2]|0;n=b[n+4>>2]|0;if((l|0)==0&(n|0)==0){w=k;G=16;break}}}while(0);if((G|0)==16?(G=0,!((r|0)==0&(s|0)==0)):0){q=w;b[q>>2]=r;b[q+4>>2]=s;q=h+(b[g>>2]<<3)|0;b[q>>2]=r;b[q+4>>2]=s;q=g;q=Ed(b[q>>2]|0,b[q+4>>2]|0,1,0)|0;r=H()|0;s=g;b[s>>2]=q;b[s+4>>2]=r}t=Ed(t|0,u|0,1,0)|0;u=H()|0;k=F;l=b[k>>2]|0;k=b[k+4>>2]|0;if(!((k|0)>(u|0)|(k|0)==(u|0)&l>>>0>t>>>0)){l=1;break a}}l=0}else l=1}else{l=0;j=k}while(0);v=v+1|0;if(!l){G=21;break}k=b[a>>2]|0;if((v|0)>=(k|0)){j=0;G=21;break}}if((G|0)==21){T=I;return j|0}return 0}function ja(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0;K=T;T=T+112|0;F=K+80|0;j=K+72|0;G=K;I=K+56|0;f=Vc(d)|0;if(f|0){J=f;T=K;return J|0}k=a+8|0;J=Bd((b[k>>2]<<5)+32|0)|0;if(!J){J=13;T=K;return J|0}Wc(a,J);f=Vc(d)|0;if(!f){D=a;E=b[D+4>>2]|0;f=j;b[f>>2]=b[D>>2];b[f+4>>2]=E;Uc(j,F);f=Fa(F,c,G)|0;if(!f){f=b[j>>2]|0;g=b[k>>2]|0;if((g|0)>0){h=b[a+12>>2]|0;d=0;do{f=(b[h+(d<<3)>>2]|0)+f|0;d=d+1|0}while((d|0)!=(g|0));d=f}else d=f;f=G;g=b[f>>2]|0;f=b[f+4>>2]|0;h=((d|0)<0)<<31>>31;if((f|0)<(h|0)|(f|0)==(h|0)&g>>>0<d>>>0){f=G;b[f>>2]=d;b[f+4>>2]=h;f=h}else d=g;D=Ed(d|0,f|0,12,0)|0;E=H()|0;f=G;b[f>>2]=D;b[f+4>>2]=E;f=0}else{D=0;E=0}if(!f){d=Dd(D,8)|0;if(!d){Cd(J);J=13;T=K;return J|0}i=Dd(D,8)|0;if(!i){Cd(J);Cd(d);J=13;T=K;return J|0}B=F;b[B>>2]=0;b[B+4>>2]=0;B=a;C=b[B+4>>2]|0;f=j;b[f>>2]=b[B>>2];b[f+4>>2]=C;f=ia(j,D,E,c,F,d,i)|0;a:do if(!f){b:do if((b[k>>2]|0)>0){h=a+12|0;g=0;while(1){f=ia((b[h>>2]|0)+(g<<3)|0,D,E,c,F,d,i)|0;g=g+1|0;if(f|0)break;if((g|0)>=(b[k>>2]|0))break b}Cd(d);Cd(i);Cd(J);break a}while(0);if((E|0)>0|(E|0)==0&D>>>0>0)Vd(i|0,0,D<<3|0)|0;C=F;B=b[C+4>>2]|0;c:do if((B|0)>0|(B|0)==0&(b[C>>2]|0)>>>0>0){y=d;z=i;A=d;B=i;C=d;f=d;v=d;w=i;x=i;d=i;d:while(1){r=0;s=0;t=0;u=0;g=0;h=0;while(1){i=G;j=i+56|0;do{b[i>>2]=0;i=i+4|0}while((i|0)<(j|0));c=y+(r<<3)|0;k=b[c>>2]|0;c=b[c+4>>2]|0;if(ca(k,c,1,G,0)|0){i=G;j=i+56|0;do{b[i>>2]=0;i=i+4|0}while((i|0)<(j|0));i=Dd(7,4)|0;if(i|0){da(k,c,1,G,i,7,0,0)|0;Cd(i)}}q=0;while(1){p=G+(q<<3)|0;o=b[p>>2]|0;p=b[p+4>>2]|0;e:do if((o|0)==0&(p|0)==0){i=g;j=h}else{l=Md(o|0,p|0,D|0,E|0)|0;k=H()|0;i=e+(l<<3)|0;c=i;j=b[c>>2]|0;c=b[c+4>>2]|0;if(!((j|0)==0&(c|0)==0)){m=0;n=0;do{if((m|0)>(E|0)|(m|0)==(E|0)&n>>>0>D>>>0)break d;if((j|0)==(o|0)&(c|0)==(p|0)){i=g;j=h;break e}i=Ed(l|0,k|0,1,0)|0;l=Ld(i|0,H()|0,D|0,E|0)|0;k=H()|0;n=Ed(n|0,m|0,1,0)|0;m=H()|0;i=e+(l<<3)|0;c=i;j=b[c>>2]|0;c=b[c+4>>2]|0}while(!((j|0)==0&(c|0)==0))}if((o|0)==0&(p|0)==0){i=g;j=h;break}Xb(o,p,I)|0;if(Xc(a,J,I)|0){n=Ed(g|0,h|0,1,0)|0;h=H()|0;m=i;b[m>>2]=o;b[m+4>>2]=p;g=z+(g<<3)|0;b[g>>2]=o;b[g+4>>2]=p;g=n}i=g;j=h}while(0);q=q+1|0;if(q>>>0>=7)break;else{g=i;h=j}}r=Ed(r|0,s|0,1,0)|0;s=H()|0;t=Ed(t|0,u|0,1,0)|0;u=H()|0;h=F;g=b[h>>2]|0;h=b[h+4>>2]|0;if(!((u|0)<(h|0)|(u|0)==(h|0)&t>>>0<g>>>0))break;else{g=i;h=j}}if((h|0)>0|(h|0)==0&g>>>0>0){g=0;h=0;do{u=y+(g<<3)|0;b[u>>2]=0;b[u+4>>2]=0;g=Ed(g|0,h|0,1,0)|0;h=H()|0;u=F;t=b[u+4>>2]|0}while((h|0)<(t|0)|((h|0)==(t|0)?g>>>0<(b[u>>2]|0)>>>0:0))}u=F;b[u>>2]=i;b[u+4>>2]=j;if((j|0)>0|(j|0)==0&i>>>0>0){q=d;r=x;s=C;t=w;u=z;d=v;x=f;w=A;v=q;f=r;C=B;B=s;A=t;z=y;y=u}else break c}Cd(A);Cd(B);Cd(J);f=1;break a}else f=i;while(0);Cd(J);Cd(d);Cd(f);f=0}else{Cd(d);Cd(i);Cd(J)}while(0);J=f;T=K;return J|0}}Cd(J);J=f;T=K;return J|0}function ka(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=T;T=T+176|0;j=l;if((c|0)<1){sd(d,0,0);k=0;T=l;return k|0}i=a;i=Od(b[i>>2]|0,b[i+4>>2]|0,52)|0;H()|0;sd(d,(c|0)>6?c:6,i&15);i=0;while(1){e=a+(i<<3)|0;e=Yb(b[e>>2]|0,b[e+4>>2]|0,j)|0;if(e|0)break;e=b[j>>2]|0;if((e|0)>0){h=0;do{g=j+8+(h<<4)|0;h=h+1|0;e=j+8+(((h|0)%(e|0)|0)<<4)|0;f=xd(d,e,g)|0;if(!f)wd(d,g,e)|0;else vd(d,f)|0;e=b[j>>2]|0}while((h|0)<(e|0))}i=i+1|0;if((i|0)>=(c|0)){e=0;k=13;break}}if((k|0)==13){T=l;return e|0}td(d);k=e;T=l;return k|0}function la(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=T;T=T+32|0;e=g;f=g+16|0;a=ka(a,c,f)|0;if(a|0){d=a;T=g;return d|0}b[d>>2]=0;b[d+4>>2]=0;b[d+8>>2]=0;a=ud(f)|0;if(a|0)do{c=Ac(d)|0;do{Bc(c,a)|0;h=a+16|0;b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];b[e+12>>2]=b[h+12>>2];vd(f,a)|0;a=yd(f,e)|0}while((a|0)!=0);a=ud(f)|0}while((a|0)!=0);td(f);a=Dc(d)|0;if(!a){h=0;T=g;return h|0}Cc(d);h=a;T=g;return h|0}function ma(a){a=a|0;if(a>>>0>121){a=0;return a|0}a=b[7696+(a*28|0)+16>>2]|0;return a|0}function na(a){a=a|0;return (a|0)==4|(a|0)==117|0}function oa(a){a=a|0;return b[11120+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)>>2]|0}function pa(a){a=a|0;return b[11120+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)+4>>2]|0}function qa(a,c){a=a|0;c=c|0;a=7696+(a*28|0)|0;b[c>>2]=b[a>>2];b[c+4>>2]=b[a+4>>2];b[c+8>>2]=b[a+8>>2];b[c+12>>2]=b[a+12>>2];return}function ra(a,c){a=a|0;c=c|0;var d=0,e=0;if(c>>>0>20){c=-1;return c|0}do if((b[11120+(c*216|0)>>2]|0)!=(a|0))if((b[11120+(c*216|0)+8>>2]|0)!=(a|0))if((b[11120+(c*216|0)+16>>2]|0)!=(a|0))if((b[11120+(c*216|0)+24>>2]|0)!=(a|0))if((b[11120+(c*216|0)+32>>2]|0)!=(a|0))if((b[11120+(c*216|0)+40>>2]|0)!=(a|0))if((b[11120+(c*216|0)+48>>2]|0)!=(a|0))if((b[11120+(c*216|0)+56>>2]|0)!=(a|0))if((b[11120+(c*216|0)+64>>2]|0)!=(a|0))if((b[11120+(c*216|0)+72>>2]|0)!=(a|0))if((b[11120+(c*216|0)+80>>2]|0)!=(a|0))if((b[11120+(c*216|0)+88>>2]|0)!=(a|0))if((b[11120+(c*216|0)+96>>2]|0)!=(a|0))if((b[11120+(c*216|0)+104>>2]|0)!=(a|0))if((b[11120+(c*216|0)+112>>2]|0)!=(a|0))if((b[11120+(c*216|0)+120>>2]|0)!=(a|0))if((b[11120+(c*216|0)+128>>2]|0)!=(a|0))if((b[11120+(c*216|0)+136>>2]|0)==(a|0)){a=2;d=1;e=2}else{if((b[11120+(c*216|0)+144>>2]|0)==(a|0)){a=0;d=2;e=0;break}if((b[11120+(c*216|0)+152>>2]|0)==(a|0)){a=0;d=2;e=1;break}if((b[11120+(c*216|0)+160>>2]|0)==(a|0)){a=0;d=2;e=2;break}if((b[11120+(c*216|0)+168>>2]|0)==(a|0)){a=1;d=2;e=0;break}if((b[11120+(c*216|0)+176>>2]|0)==(a|0)){a=1;d=2;e=1;break}if((b[11120+(c*216|0)+184>>2]|0)==(a|0)){a=1;d=2;e=2;break}if((b[11120+(c*216|0)+192>>2]|0)==(a|0)){a=2;d=2;e=0;break}if((b[11120+(c*216|0)+200>>2]|0)==(a|0)){a=2;d=2;e=1;break}if((b[11120+(c*216|0)+208>>2]|0)==(a|0)){a=2;d=2;e=2;break}else a=-1;return a|0}else{a=2;d=1;e=1}else{a=2;d=1;e=0}else{a=1;d=1;e=2}else{a=1;d=1;e=1}else{a=1;d=1;e=0}else{a=0;d=1;e=2}else{a=0;d=1;e=1}else{a=0;d=1;e=0}else{a=2;d=0;e=2}else{a=2;d=0;e=1}else{a=2;d=0;e=0}else{a=1;d=0;e=2}else{a=1;d=0;e=1}else{a=1;d=0;e=0}else{a=0;d=0;e=2}else{a=0;d=0;e=1}else{a=0;d=0;e=0}while(0);c=b[11120+(c*216|0)+(d*72|0)+(a*24|0)+(e<<3)+4>>2]|0;return c|0}function sa(a,c){a=a|0;c=c|0;if((b[7696+(a*28|0)+20>>2]|0)==(c|0)){c=1;return c|0}c=(b[7696+(a*28|0)+24>>2]|0)==(c|0);return c|0}function ta(a,c){a=a|0;c=c|0;return b[848+(a*28|0)+(c<<2)>>2]|0}function ua(a,c){a=a|0;c=c|0;if((b[848+(a*28|0)>>2]|0)==(c|0)){c=0;return c|0}if((b[848+(a*28|0)+4>>2]|0)==(c|0)){c=1;return c|0}if((b[848+(a*28|0)+8>>2]|0)==(c|0)){c=2;return c|0}if((b[848+(a*28|0)+12>>2]|0)==(c|0)){c=3;return c|0}if((b[848+(a*28|0)+16>>2]|0)==(c|0)){c=4;return c|0}if((b[848+(a*28|0)+20>>2]|0)==(c|0)){c=5;return c|0}else return ((b[848+(a*28|0)+24>>2]|0)==(c|0)?6:7)|0;return 0}function va(){return 122}function wa(a){a=a|0;var c=0,d=0,e=0;c=0;do{Pd(c|0,0,45)|0;e=H()|0|134225919;d=a+(c<<3)|0;b[d>>2]=-1;b[d+4>>2]=e;c=c+1|0}while((c|0)!=122);return 0}function xa(a){a=a|0;var b=0.0,c=0.0,d=0.0;d=+e[a+16>>3];c=+e[a+24>>3];b=d-c;return +(d<c?b+6.283185307179586:b)}function ya(a){a=a|0;return +e[a+16>>3]<+e[a+24>>3]|0}function za(a){a=a|0;return +(+e[a>>3]-+e[a+8>>3])}function Aa(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[b>>3];if(!(c>=+e[a+8>>3])){b=0;return b|0}if(!(c<=+e[a>>3])){b=0;return b|0}d=+e[a+16>>3];c=+e[a+24>>3];f=+e[b+8>>3];b=f>=c;a=f<=d&1;if(d<c){if(b)a=1}else if(!b)a=0;b=(a|0)!=0;return b|0}function Ba(a,b){a=a|0;b=b|0;var c=0,d=0,f=0,g=0.0,h=0,i=0,j=0.0,k=0.0,l=0.0;if(+e[a>>3]<+e[b+8>>3]){d=0;return d|0}if(+e[a+8>>3]>+e[b>>3]){d=0;return d|0}g=+e[a+16>>3];c=a+24|0;l=+e[c>>3];h=g<l;d=b+16|0;k=+e[d>>3];f=b+24|0;j=+e[f>>3];i=k<j;b=l-k<j-g;a=h?(i|b?1:2):0;b=i?(h?1:b?2:1):0;g=+ic(g,a);if(g<+ic(+e[f>>3],b)){i=0;return i|0}l=+ic(+e[c>>3],a);if(l>+ic(+e[d>>3],b)){i=0;return i|0}i=1;return i|0}function Ca(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0,h=0.0,i=0.0,j=0.0,k=0.0;h=+e[a+16>>3];k=+e[a+24>>3];a=h<k;j=+e[c+16>>3];i=+e[c+24>>3];g=j<i;c=k-j<i-h;b[d>>2]=a?(g|c?1:2):0;b[f>>2]=g?(a?1:c?2:1):0;return}function Da(a,b){a=a|0;b=b|0;var c=0,d=0,f=0,g=0.0,h=0,i=0,j=0.0,k=0.0,l=0.0;if(+e[a>>3]<+e[b>>3]){d=0;return d|0}if(+e[a+8>>3]>+e[b+8>>3]){d=0;return d|0}d=a+16|0;j=+e[d>>3];g=+e[a+24>>3];h=j<g;c=b+16|0;l=+e[c>>3];f=b+24|0;k=+e[f>>3];i=l<k;b=g-l<k-j;a=h?(i|b?1:2):0;b=i?(h?1:b?2:1):0;g=+ic(g,a);if(!(g<=+ic(+e[f>>3],b))){i=0;return i|0}l=+ic(+e[d>>3],a);i=l>=+ic(+e[c>>3],b);return i|0}function Ea(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0.0,i=0.0,j=0.0;g=T;T=T+176|0;f=g;b[f>>2]=4;j=+e[c>>3];e[f+8>>3]=j;h=+e[c+16>>3];e[f+16>>3]=h;e[f+24>>3]=j;j=+e[c+24>>3];e[f+32>>3]=j;i=+e[c+8>>3];e[f+40>>3]=i;e[f+48>>3]=j;e[f+56>>3]=i;e[f+64>>3]=h;c=f+72|0;d=c+96|0;do{b[c>>2]=0;c=c+4|0}while((c|0)<(d|0));Ud(a|0,f|0,168)|0;T=g;return}function Fa(a,c,d){a=a|0;c=c|0;d=d|0;var g=0.0,h=0.0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0,r=0,s=0,t=0,u=0.0,v=0.0;t=T;T=T+288|0;n=t+264|0;o=t+96|0;m=t;k=m;l=k+96|0;do{b[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c=ac(c,m)|0;if(c|0){s=c;T=t;return s|0}l=m;m=b[l>>2]|0;l=b[l+4>>2]|0;Xb(m,l,n)|0;Yb(m,l,o)|0;j=+kc(n,o+8|0);e[n>>3]=+e[a>>3];l=n+8|0;e[l>>3]=+e[a+16>>3];e[o>>3]=+e[a+8>>3];m=o+8|0;e[m>>3]=+e[a+24>>3];h=+kc(n,o);v=+e[l>>3]-+e[m>>3];i=+q(+v);u=+e[n>>3]-+e[o>>3];g=+q(+u);if(!(v==0.0|u==0.0)?(v=+Rd(+i,+g),v=+A(+(h*h/+Sd(+(v/+Sd(+i,+g)),3.0)/(j*(j*2.59807621135)*.8))),e[f>>3]=v,r=~~v>>>0,s=+q(v)>=1.0?(v>0.0?~~+C(+p(v/4294967296.0),4294967295.0)>>>0:~~+A((v-+(~~v>>>0))/4294967296.0)>>>0):0,!(0==0?(b[f+4>>2]&2146435072|0)==2146435072:0)):0){o=(r|0)==0&(s|0)==0;c=d;b[c>>2]=o?1:r;b[c+4>>2]=o?0:s;c=0}else c=1;s=c;T=t;return s|0}function Ga(a,c,d,g){a=a|0;c=c|0;d=d|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0.0;m=T;T=T+288|0;j=m+264|0;k=m+96|0;l=m;h=l;i=h+96|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(i|0));d=ac(d,l)|0;if(d|0){g=d;T=m;return g|0}d=l;h=b[d>>2]|0;d=b[d+4>>2]|0;Xb(h,d,j)|0;Yb(h,d,k)|0;n=+kc(j,k+8|0);n=+A(+(+kc(a,c)/(n*2.0)));e[f>>3]=n;d=~~n>>>0;h=+q(n)>=1.0?(n>0.0?~~+C(+p(n/4294967296.0),4294967295.0)>>>0:~~+A((n-+(~~n>>>0))/4294967296.0)>>>0):0;if(0==0?(b[f+4>>2]&2146435072|0)==2146435072:0){g=1;T=m;return g|0}l=(d|0)==0&(h|0)==0;b[g>>2]=l?1:d;b[g+4>>2]=l?0:h;g=0;T=m;return g|0}function Ha(a,b){a=a|0;b=+b;var c=0,d=0.0,f=0.0,g=0,h=0.0,i=0,j=0.0,k=0.0,l=0.0;g=a+16|0;h=+e[g>>3];c=a+24|0;f=+e[c>>3];d=h-f;d=h<f?d+6.283185307179586:d;k=+e[a>>3];i=a+8|0;j=+e[i>>3];l=k-j;d=(d*b-d)*.5;b=(l*b-l)*.5;k=k+b;e[a>>3]=k>1.5707963267948966?1.5707963267948966:k;b=j-b;e[i>>3]=b<-1.5707963267948966?-1.5707963267948966:b;b=h+d;b=b>3.141592653589793?b+-6.283185307179586:b;e[g>>3]=b<-3.141592653589793?b+6.283185307179586:b;b=f-d;b=b>3.141592653589793?b+-6.283185307179586:b;e[c>>3]=b<-3.141592653589793?b+6.283185307179586:b;return}function Ia(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;b[a>>2]=c;b[a+4>>2]=d;b[a+8>>2]=e;return}function Ja(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0;n=c+8|0;b[n>>2]=0;k=+e[a>>3];i=+q(+k);l=+e[a+8>>3];j=+q(+l)*1.1547005383792515;i=i+j*.5;d=~~i;a=~~j;i=i-+(d|0);j=j-+(a|0);do if(i<.5)if(i<.3333333333333333){b[c>>2]=d;if(j<(i+1.0)*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}else{o=1.0-i;a=(!(j<o)&1)+a|0;b[c+4>>2]=a;if(o<=j&j<i*2.0){d=d+1|0;b[c>>2]=d;break}else{b[c>>2]=d;break}}else{if(!(i<.6666666666666666)){d=d+1|0;b[c>>2]=d;if(j<i*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}if(j<1.0-i){b[c+4>>2]=a;if(i*2.0+-1.0<j){b[c>>2]=d;break}}else{a=a+1|0;b[c+4>>2]=a}d=d+1|0;b[c>>2]=d}while(0);do if(k<0.0)if(!(a&1)){m=(a|0)/2|0;m=Fd(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-(+(m>>>0)+4294967296.0*+(H()|0))*2.0);b[c>>2]=d;break}else{m=(a+1|0)/2|0;m=Fd(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-((+(m>>>0)+4294967296.0*+(H()|0))*2.0+1.0));b[c>>2]=d;break}while(0);m=c+4|0;if(l<0.0){d=d-((a<<1|1|0)/2|0)|0;b[c>>2]=d;a=0-a|0;b[m>>2]=a}f=a-d|0;if((d|0)<0){g=0-d|0;b[m>>2]=f;b[n>>2]=g;b[c>>2]=0;a=f;d=0}else g=0;if((a|0)<0){d=d-a|0;b[c>>2]=d;g=g-a|0;b[n>>2]=g;b[m>>2]=0;a=0}h=d-g|0;f=a-g|0;if((g|0)<0){b[c>>2]=h;b[m>>2]=f;b[n>>2]=0;a=f;d=h;g=0}f=(a|0)<(d|0)?a:d;f=(g|0)<(f|0)?g:f;if((f|0)<=0)return;b[c>>2]=d-f;b[m>>2]=a-f;b[n>>2]=g-f;return}function Ka(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;if((c|0)<0){d=d-c|0;b[h>>2]=d;g=a+8|0;b[g>>2]=(b[g>>2]|0)-c;b[a>>2]=0;c=0}if((d|0)<0){c=c-d|0;b[a>>2]=c;g=a+8|0;f=(b[g>>2]|0)-d|0;b[g>>2]=f;b[h>>2]=0;d=0}else{f=a+8|0;g=f;f=b[f>>2]|0}if((f|0)<0){c=c-f|0;b[a>>2]=c;d=d-f|0;b[h>>2]=d;b[g>>2]=0;f=0}e=(d|0)<(c|0)?d:c;e=(f|0)<(e|0)?f:e;if((e|0)<=0)return;b[a>>2]=c-e;b[h>>2]=d-e;b[g>>2]=f-e;return}function La(a,c){a=a|0;c=c|0;var d=0.0,f=0;f=b[a+8>>2]|0;d=+((b[a+4>>2]|0)-f|0);e[c>>3]=+((b[a>>2]|0)-f|0)-d*.5;e[c+8>>3]=d*.8660254037844386;return}function Ma(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[c>>2]|0)+(b[a>>2]|0);b[d+4>>2]=(b[c+4>>2]|0)+(b[a+4>>2]|0);b[d+8>>2]=(b[c+8>>2]|0)+(b[a+8>>2]|0);return}function Na(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[a>>2]|0)-(b[c>>2]|0);b[d+4>>2]=(b[a+4>>2]|0)-(b[c+4>>2]|0);b[d+8>>2]=(b[a+8>>2]|0)-(b[c+8>>2]|0);return}function Oa(a,c){a=a|0;c=c|0;var d=0,e=0;d=B(b[a>>2]|0,c)|0;b[a>>2]=d;d=a+4|0;e=B(b[d>>2]|0,c)|0;b[d>>2]=e;a=a+8|0;c=B(b[a>>2]|0,c)|0;b[a>>2]=c;return}function Pa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=b[a>>2]|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(g?0-e|0:0)+((b[a+8>>2]|0)-(i?h:0))|0;d=(f|0)<0;a=d?0:f;c=(g?0:e)-(d?f:0)|0;f=(i?0:h)-(g?e:0)-(d?f:0)|0;d=(c|0)<(f|0)?c:f;d=(a|0)<(d|0)?a:d;e=(d|0)>0;a=a-(e?d:0)|0;c=c-(e?d:0)|0;a:do switch(f-(e?d:0)|0){case 0:switch(c|0){case 0:{i=(a|0)==0?0:(a|0)==1?1:7;return i|0}case 1:{i=(a|0)==0?2:(a|0)==1?3:7;return i|0}default:break a}case 1:switch(c|0){case 0:{i=(a|0)==0?4:(a|0)==1?5:7;return i|0}case 1:{if(!a)a=6;else break a;return a|0}default:break a}default:{}}while(0);i=7;return i|0}function Qa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;j=a+8|0;h=b[j>>2]|0;i=(b[a>>2]|0)-h|0;k=a+4|0;h=(b[k>>2]|0)-h|0;if(i>>>0>715827881|h>>>0>715827881){e=(i|0)>0;f=2147483647-i|0;g=-2147483648-i|0;if(e?(f|0)<(i|0):(g|0)>(i|0)){k=1;return k|0}d=i<<1;if(e?(2147483647-d|0)<(i|0):(-2147483648-d|0)>(i|0)){k=1;return k|0}if((h|0)>0?(2147483647-h|0)<(h|0):(-2147483648-h|0)>(h|0)){k=1;return k|0}c=i*3|0;d=h<<1;if((e?(f|0)<(d|0):(g|0)>(d|0))?1:(i|0)>-1?(c|-2147483648|0)>=(h|0):(c^-2147483648|0)<(h|0)){k=1;return k|0}}else{d=h<<1;c=i*3|0}e=Ad(+(c-h|0)*.14285714285714285)|0;b[a>>2]=e;f=Ad(+(d+i|0)*.14285714285714285)|0;b[k>>2]=f;b[j>>2]=0;d=(f|0)<(e|0);c=d?e:f;d=d?f:e;if((d|0)<0){if((d|0)==-2147483648?1:(c|0)>0?(2147483647-c|0)<(d|0):(-2147483648-c|0)>(d|0))I(27795,26892,354,26903);if((c|0)>-1?(c|-2147483648|0)>=(d|0):(c^-2147483648|0)<(d|0))I(27795,26892,354,26903)}c=f-e|0;if((e|0)<0){d=0-e|0;b[k>>2]=c;b[j>>2]=d;b[a>>2]=0;e=0}else{c=f;d=0}if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[j>>2]=d;b[k>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[k>>2]=f;b[j>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){k=0;return k|0}b[a>>2]=f-e;b[k>>2]=c-e;b[j>>2]=d-e;k=0;return k|0}function Ra(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;h=a+8|0;f=b[h>>2]|0;g=(b[a>>2]|0)-f|0;i=a+4|0;f=(b[i>>2]|0)-f|0;if(g>>>0>715827881|f>>>0>715827881){d=(g|0)>0;if(d?(2147483647-g|0)<(g|0):(-2147483648-g|0)>(g|0)){i=1;return i|0}c=g<<1;e=(f|0)>0;if(e?(2147483647-f|0)<(f|0):(-2147483648-f|0)>(f|0)){i=1;return i|0}j=f<<1;if(e?(2147483647-j|0)<(f|0):(-2147483648-j|0)>(f|0)){j=1;return j|0}if(d?(2147483647-c|0)<(f|0):(-2147483648-c|0)>(f|0)){j=1;return j|0}d=f*3|0;if((f|0)>-1?(d|-2147483648|0)>=(g|0):(d^-2147483648|0)<(g|0)){j=1;return j|0}}else{d=f*3|0;c=g<<1}e=Ad(+(c+f|0)*.14285714285714285)|0;b[a>>2]=e;f=Ad(+(d-g|0)*.14285714285714285)|0;b[i>>2]=f;b[h>>2]=0;d=(f|0)<(e|0);c=d?e:f;d=d?f:e;if((d|0)<0){if((d|0)==-2147483648?1:(c|0)>0?(2147483647-c|0)<(d|0):(-2147483648-c|0)>(d|0))I(27795,26892,402,26917);if((c|0)>-1?(c|-2147483648|0)>=(d|0):(c^-2147483648|0)<(d|0))I(27795,26892,402,26917)}c=f-e|0;if((e|0)<0){d=0-e|0;b[i>>2]=c;b[h>>2]=d;b[a>>2]=0;e=0}else{c=f;d=0}if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){j=0;return j|0}b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;j=0;return j|0}function Sa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=Ad(+((c*3|0)-d|0)*.14285714285714285)|0;b[a>>2]=e;c=Ad(+((d<<1)+c|0)*.14285714285714285)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Ta(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=Ad(+((c<<1)+d|0)*.14285714285714285)|0;b[a>>2]=e;c=Ad(+((d*3|0)-c|0)*.14285714285714285)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Ua(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c*3|0)|0;b[a>>2]=f;d=e+(d*3|0)|0;b[h>>2]=d;c=(e*3|0)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Va(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c*3|0)+f|0;f=d+(f*3|0)|0;b[a>>2]=f;b[h>>2]=e;c=(d*3|0)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function Wa(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;if((c+-1|0)>>>0>=6)return;f=(b[15440+(c*12|0)>>2]|0)+(b[a>>2]|0)|0;b[a>>2]=f;i=a+4|0;e=(b[15440+(c*12|0)+4>>2]|0)+(b[i>>2]|0)|0;b[i>>2]=e;h=a+8|0;c=(b[15440+(c*12|0)+8>>2]|0)+(b[h>>2]|0)|0;b[h>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[i>>2]=d;b[h>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[h>>2]=c;b[i>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[i>>2]=f-d;b[h>>2]=c-d;return}function Xa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=c+f|0;f=d+f|0;b[a>>2]=f;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Ya(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;e=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;f=e+c|0;b[a>>2]=f;e=d+e|0;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Za(a){a=a|0;switch(a|0){case 1:{a=5;break}case 5:{a=4;break}case 4:{a=6;break}case 6:{a=2;break}case 2:{a=3;break}case 3:{a=1;break}default:{}}return a|0}function _a(a){a=a|0;switch(a|0){case 1:{a=3;break}case 3:{a=2;break}case 2:{a=6;break}case 6:{a=4;break}case 4:{a=5;break}case 5:{a=1;break}default:{}}return a|0}function $a(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c<<1)|0;b[a>>2]=f;d=e+(d<<1)|0;b[h>>2]=d;c=(e<<1)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function ab(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c<<1)+f|0;f=d+(f<<1)|0;b[a>>2]=f;b[h>>2]=e;c=(d<<1)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function bb(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;h=(b[a>>2]|0)-(b[c>>2]|0)|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(b[c+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(i?0-h|0:0)+(b[a+8>>2]|0)-(b[c+8>>2]|0)+(g?0-e|0:0)|0;a=(f|0)<0;c=a?0:f;d=(g?0:e)-(a?f:0)|0;f=(i?0:h)-(g?e:0)-(a?f:0)|0;a=(d|0)<(f|0)?d:f;a=(c|0)<(a|0)?c:a;e=(a|0)>0;c=c-(e?a:0)|0;d=d-(e?a:0)|0;a=f-(e?a:0)|0;a=(a|0)>-1?a:0-a|0;d=(d|0)>-1?d:0-d|0;c=(c|0)>-1?c:0-c|0;c=(d|0)>(c|0)?d:c;return ((a|0)>(c|0)?a:c)|0}function cb(a,c){a=a|0;c=c|0;var d=0;d=b[a+8>>2]|0;b[c>>2]=(b[a>>2]|0)-d;b[c+4>>2]=(b[a+4>>2]|0)-d;return}function db(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;e=b[a>>2]|0;b[c>>2]=e;f=b[a+4>>2]|0;h=c+4|0;b[h>>2]=f;i=c+8|0;b[i>>2]=0;d=(f|0)<(e|0);a=d?e:f;d=d?f:e;if((d|0)<0){if((d|0)==-2147483648?1:(a|0)>0?(2147483647-a|0)<(d|0):(-2147483648-a|0)>(d|0)){c=1;return c|0}if((a|0)>-1?(a|-2147483648|0)>=(d|0):(a^-2147483648|0)<(d|0)){c=1;return c|0}}a=f-e|0;if((e|0)<0){d=0-e|0;b[h>>2]=a;b[i>>2]=d;b[c>>2]=0;e=0}else{a=f;d=0}if((a|0)<0){e=e-a|0;b[c>>2]=e;d=d-a|0;b[i>>2]=d;b[h>>2]=0;a=0}g=e-d|0;f=a-d|0;if((d|0)<0){b[c>>2]=g;b[h>>2]=f;b[i>>2]=0;a=f;f=g;d=0}else f=e;e=(a|0)<(f|0)?a:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){c=0;return c|0}b[c>>2]=f-e;b[h>>2]=a-e;b[i>>2]=d-e;c=0;return c|0}function eb(a){a=a|0;var c=0,d=0,e=0,f=0;c=a+8|0;f=b[c>>2]|0;d=f-(b[a>>2]|0)|0;b[a>>2]=d;e=a+4|0;a=(b[e>>2]|0)-f|0;b[e>>2]=a;b[c>>2]=0-(a+d);return}function fb(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=b[a>>2]|0;c=0-d|0;b[a>>2]=c;h=a+8|0;b[h>>2]=0;i=a+4|0;e=b[i>>2]|0;f=e+d|0;if((d|0)>0){b[i>>2]=f;b[h>>2]=d;b[a>>2]=0;c=0;e=f}else d=0;if((e|0)<0){g=c-e|0;b[a>>2]=g;d=d-e|0;b[h>>2]=d;b[i>>2]=0;f=g-d|0;c=0-d|0;if((d|0)<0){b[a>>2]=f;b[i>>2]=c;b[h>>2]=0;e=c;d=0}else{e=0;f=g}}else f=c;c=(e|0)<(f|0)?e:f;c=(d|0)<(c|0)?d:c;if((c|0)<=0)return;b[a>>2]=f-c;b[i>>2]=e-c;b[h>>2]=d-c;return}function gb(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=T;T=T+64|0;l=m;i=m+56|0;if(!(0==0&(c&2013265920|0)==134217728&(0==0&(e&2013265920|0)==134217728))){f=5;T=m;return f|0}if((a|0)==(d|0)&(c|0)==(e|0)){b[f>>2]=0;f=0;T=m;return f|0}h=Od(a|0,c|0,52)|0;H()|0;h=h&15;k=Od(d|0,e|0,52)|0;H()|0;if((h|0)!=(k&15|0)){f=12;T=m;return f|0}g=h+-1|0;if(h>>>0>1){Db(a,c,g,l)|0;Db(d,e,g,i)|0;k=l;j=b[k>>2]|0;k=b[k+4>>2]|0;a:do if((j|0)==(b[i>>2]|0)?(k|0)==(b[i+4>>2]|0):0){h=(h^15)*3|0;g=Od(a|0,c|0,h|0)|0;H()|0;g=g&7;h=Od(d|0,e|0,h|0)|0;H()|0;h=h&7;do if(!((g|0)==0|(h|0)==0))if((g|0)==7)g=5;else{if((g|0)==1|(h|0)==1?Fb(j,k)|0:0){g=5;break}if((b[15536+(g<<2)>>2]|0)!=(h|0)?(b[15568+(g<<2)>>2]|0)!=(h|0):0)break a;b[f>>2]=1;g=0}else{b[f>>2]=1;g=0}while(0);f=g;T=m;return f|0}while(0)}g=l;h=g+56|0;do{b[g>>2]=0;g=g+4|0}while((g|0)<(h|0));aa(a,c,1,l)|0;c=l;if(((((!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)?(c=l+8|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+16|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+24|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+32|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+40|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0){g=l+48|0;g=((b[g>>2]|0)==(d|0)?(b[g+4>>2]|0)==(e|0):0)&1}else g=1;b[f>>2]=g;f=0;T=m;return f|0}function hb(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;d=fa(a,c,d,e)|0;if((d|0)==7){f=11;return f|0}e=Pd(d|0,0,56)|0;c=c&-2130706433|(H()|0)|268435456;b[f>>2]=a|e;b[f+4>>2]=c;f=0;return f|0}function ib(a,c,d){a=a|0;c=c|0;d=d|0;if(!(0==0&(c&2013265920|0)==268435456)){d=6;return d|0}b[d>>2]=a;b[d+4>>2]=c&-2130706433|134217728;d=0;return d|0}function jb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=T;T=T+16|0;e=f;b[e>>2]=0;if(!(0==0&(c&2013265920|0)==268435456)){e=6;T=f;return e|0}g=Od(a|0,c|0,56)|0;H()|0;e=ea(a,c&-2130706433|134217728,g&7,e,d)|0;T=f;return e|0}function kb(a,b){a=a|0;b=b|0;var c=0;c=Od(a|0,b|0,56)|0;H()|0;switch(c&7){case 0:case 7:{c=0;return c|0}default:{}}c=b&-2130706433|134217728;if(!(0==0&(b&2013265920|0)==268435456)){c=0;return c|0}if(0==0&(b&117440512|0)==16777216&(Fb(a,c)|0)!=0){c=0;return c|0}c=Bb(a,c)|0;return c|0}function lb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=T;T=T+16|0;e=f;if(!(0==0&(c&2013265920|0)==268435456)){e=6;T=f;return e|0}g=c&-2130706433|134217728;h=d;b[h>>2]=a;b[h+4>>2]=g;b[e>>2]=0;c=Od(a|0,c|0,56)|0;H()|0;e=ea(a,g,c&7,e,d+8|0)|0;T=f;return e|0}function mb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=(Fb(a,c)|0)==0;c=c&-2130706433;e=d;b[e>>2]=f?a:0;b[e+4>>2]=f?c|285212672:0;e=d+8|0;b[e>>2]=a;b[e+4>>2]=c|301989888;e=d+16|0;b[e>>2]=a;b[e+4>>2]=c|318767104;e=d+24|0;b[e>>2]=a;b[e+4>>2]=c|335544320;e=d+32|0;b[e>>2]=a;b[e+4>>2]=c|352321536;d=d+40|0;b[d>>2]=a;b[d+4>>2]=c|369098752;return 0}function nb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=T;T=T+16|0;f=h;g=c&-2130706433|134217728;if(!(0==0&(c&2013265920|0)==268435456)){g=6;T=h;return g|0}e=Od(a|0,c|0,56)|0;H()|0;e=md(a,g,e&7)|0;if((e|0)==-1){b[d>>2]=0;g=6;T=h;return g|0}if(Wb(a,g,f)|0)I(27795,26932,282,26947);c=Od(a|0,c|0,52)|0;H()|0;c=c&15;if(!(Fb(a,g)|0))xb(f,c,e,2,d);else tb(f,c,e,2,d);g=0;T=h;return g|0}function ob(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=T;T=T+16|0;e=d;pb(a,b,c,e);Ja(e,c+4|0);T=d;return}function pb(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0,k=0;j=T;T=T+16|0;k=j;qb(a,d,k);h=+w(+(1.0-+e[k>>3]*.5));if(h<1.0e-16){b[f>>2]=0;b[f+4>>2]=0;b[f+8>>2]=0;b[f+12>>2]=0;T=j;return}k=b[d>>2]|0;g=+e[15920+(k*24|0)>>3];g=+gc(g-+gc(+mc(15600+(k<<4)|0,a)));if(!(Tb(c)|0))i=g;else i=+gc(g+-.3334731722518321);g=+v(+h)*2.618033988749896;if((c|0)>0){a=0;do{g=g*2.6457513110645907;a=a+1|0}while((a|0)!=(c|0))}h=+t(+i)*g;e[f>>3]=h;i=+u(+i)*g;e[f+8>>3]=i;T=j;return}function qb(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0,h=0;h=T;T=T+32|0;g=h;ld(a,g);b[c>>2]=0;e[d>>3]=5.0;f=+kd(16400,g);if(f<+e[d>>3]){b[c>>2]=0;e[d>>3]=f}f=+kd(16424,g);if(f<+e[d>>3]){b[c>>2]=1;e[d>>3]=f}f=+kd(16448,g);if(f<+e[d>>3]){b[c>>2]=2;e[d>>3]=f}f=+kd(16472,g);if(f<+e[d>>3]){b[c>>2]=3;e[d>>3]=f}f=+kd(16496,g);if(f<+e[d>>3]){b[c>>2]=4;e[d>>3]=f}f=+kd(16520,g);if(f<+e[d>>3]){b[c>>2]=5;e[d>>3]=f}f=+kd(16544,g);if(f<+e[d>>3]){b[c>>2]=6;e[d>>3]=f}f=+kd(16568,g);if(f<+e[d>>3]){b[c>>2]=7;e[d>>3]=f}f=+kd(16592,g);if(f<+e[d>>3]){b[c>>2]=8;e[d>>3]=f}f=+kd(16616,g);if(f<+e[d>>3]){b[c>>2]=9;e[d>>3]=f}f=+kd(16640,g);if(f<+e[d>>3]){b[c>>2]=10;e[d>>3]=f}f=+kd(16664,g);if(f<+e[d>>3]){b[c>>2]=11;e[d>>3]=f}f=+kd(16688,g);if(f<+e[d>>3]){b[c>>2]=12;e[d>>3]=f}f=+kd(16712,g);if(f<+e[d>>3]){b[c>>2]=13;e[d>>3]=f}f=+kd(16736,g);if(f<+e[d>>3]){b[c>>2]=14;e[d>>3]=f}f=+kd(16760,g);if(f<+e[d>>3]){b[c>>2]=15;e[d>>3]=f}f=+kd(16784,g);if(f<+e[d>>3]){b[c>>2]=16;e[d>>3]=f}f=+kd(16808,g);if(f<+e[d>>3]){b[c>>2]=17;e[d>>3]=f}f=+kd(16832,g);if(f<+e[d>>3]){b[c>>2]=18;e[d>>3]=f}f=+kd(16856,g);if(!(f<+e[d>>3])){T=h;return}b[c>>2]=19;e[d>>3]=f;T=h;return}function rb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0.0,i=0.0,j=0.0;h=+hd(a);if(h<1.0e-16){c=15600+(c<<4)|0;b[g>>2]=b[c>>2];b[g+4>>2]=b[c+4>>2];b[g+8>>2]=b[c+8>>2];b[g+12>>2]=b[c+12>>2];return}i=+z(+(+e[a+8>>3]),+(+e[a>>3]));if((d|0)>0){a=0;do{h=h*.37796447300922725;a=a+1|0}while((a|0)!=(d|0))}j=h*.3333333333333333;if(!f){h=+y(+(h*.381966011250105));if(Tb(d)|0)i=+gc(i+.3334731722518321)}else{d=(Tb(d)|0)==0;h=+y(+((d?j:j*.37796447300922725)*.381966011250105))}nc(15600+(c<<4)|0,+gc(+e[15920+(c*24|0)>>3]-i),h,g);return}function sb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;e=T;T=T+16|0;f=e;La(a+4|0,f);rb(f,b[a>>2]|0,c,0,d);T=e;return}function tb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,J=0.0;G=T;T=T+272|0;h=G+256|0;u=G+240|0;D=G;E=G+224|0;F=G+208|0;v=G+176|0;w=G+160|0;x=G+192|0;y=G+144|0;z=G+128|0;A=G+112|0;B=G+96|0;C=G+80|0;b[h>>2]=c;b[u>>2]=b[a>>2];b[u+4>>2]=b[a+4>>2];b[u+8>>2]=b[a+8>>2];b[u+12>>2]=b[a+12>>2];ub(u,h,D);b[g>>2]=0;u=f+d+((f|0)==5&1)|0;if((u|0)<=(d|0)){T=G;return}k=b[h>>2]|0;l=E+4|0;m=v+4|0;n=d+5|0;o=16880+(k<<2)|0;p=16960+(k<<2)|0;q=z+8|0;r=A+8|0;s=B+8|0;t=F+4|0;j=d;a:while(1){i=D+(((j|0)%5|0)<<4)|0;b[F>>2]=b[i>>2];b[F+4>>2]=b[i+4>>2];b[F+8>>2]=b[i+8>>2];b[F+12>>2]=b[i+12>>2];do{}while((vb(F,k,0,1)|0)==2);if((j|0)>(d|0)&(Tb(c)|0)!=0){b[v>>2]=b[F>>2];b[v+4>>2]=b[F+4>>2];b[v+8>>2]=b[F+8>>2];b[v+12>>2]=b[F+12>>2];La(l,w);f=b[v>>2]|0;h=b[17040+(f*80|0)+(b[E>>2]<<2)>>2]|0;b[v>>2]=b[18640+(f*80|0)+(h*20|0)>>2];i=b[18640+(f*80|0)+(h*20|0)+16>>2]|0;if((i|0)>0){a=0;do{Xa(m);a=a+1|0}while((a|0)<(i|0))}i=18640+(f*80|0)+(h*20|0)+4|0;b[x>>2]=b[i>>2];b[x+4>>2]=b[i+4>>2];b[x+8>>2]=b[i+8>>2];Oa(x,(b[o>>2]|0)*3|0);Ma(m,x,m);Ka(m);La(m,y);H=+(b[p>>2]|0);e[z>>3]=H*3.0;e[q>>3]=0.0;J=H*-1.5;e[A>>3]=J;e[r>>3]=H*2.598076211353316;e[B>>3]=J;e[s>>3]=H*-2.598076211353316;switch(b[17040+((b[v>>2]|0)*80|0)+(b[F>>2]<<2)>>2]|0){case 1:{a=A;f=z;break}case 3:{a=B;f=A;break}case 2:{a=z;f=B;break}default:{a=12;break a}}id(w,y,f,a,C);rb(C,b[v>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}if((j|0)<(n|0)){La(t,v);rb(v,b[F>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1};b[E>>2]=b[F>>2];b[E+4>>2]=b[F+4>>2];b[E+8>>2]=b[F+8>>2];b[E+12>>2]=b[F+12>>2];j=j+1|0;if((j|0)>=(u|0)){a=3;break}}if((a|0)==3){T=G;return}else if((a|0)==12)I(26970,27017,572,27027)}function ub(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+128|0;e=j+64|0;f=j;g=e;h=20240;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20304;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Tb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;$a(f);ab(f);if(Tb(b[c>>2]|0)|0){Va(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Ma(f,e,c);Ka(c);b[d+16>>2]=b[a>>2];c=d+20|0;Ma(f,e+12|0,c);Ka(c);b[d+32>>2]=b[a>>2];c=d+36|0;Ma(f,e+24|0,c);Ka(c);b[d+48>>2]=b[a>>2];c=d+52|0;Ma(f,e+36|0,c);Ka(c);b[d+64>>2]=b[a>>2];d=d+68|0;Ma(f,e+48|0,d);Ka(d);T=j;return}function vb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=T;T=T+32|0;n=p+12|0;i=p;o=a+4|0;m=b[16960+(c<<2)>>2]|0;l=(e|0)!=0;m=l?m*3|0:m;f=b[o>>2]|0;k=a+8|0;h=b[k>>2]|0;if(l){g=a+12|0;e=b[g>>2]|0;f=h+f+e|0;if((f|0)==(m|0)){o=1;T=p;return o|0}else j=g}else{j=a+12|0;e=b[j>>2]|0;f=h+f+e|0}if((f|0)<=(m|0)){o=0;T=p;return o|0}do if((e|0)>0){e=b[a>>2]|0;if((h|0)>0){g=18640+(e*80|0)+60|0;e=a;break}e=18640+(e*80|0)+40|0;if(!d){g=e;e=a}else{Ia(n,m,0,0);Na(o,n,i);Ya(i);Ma(i,n,o);g=e;e=a}}else{g=18640+((b[a>>2]|0)*80|0)+20|0;e=a}while(0);b[e>>2]=b[g>>2];f=g+16|0;if((b[f>>2]|0)>0){e=0;do{Xa(o);e=e+1|0}while((e|0)<(b[f>>2]|0))}a=g+4|0;b[n>>2]=b[a>>2];b[n+4>>2]=b[a+4>>2];b[n+8>>2]=b[a+8>>2];c=b[16880+(c<<2)>>2]|0;Oa(n,l?c*3|0:c);Ma(o,n,o);Ka(o);if(l)e=((b[k>>2]|0)+(b[o>>2]|0)+(b[j>>2]|0)|0)==(m|0)?1:2;else e=2;o=e;T=p;return o|0}function wb(a,b){a=a|0;b=b|0;var c=0;do c=vb(a,b,0,1)|0;while((c|0)==2);return c|0}function xb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0;B=T;T=T+240|0;h=B+224|0;x=B+208|0;y=B;z=B+192|0;A=B+176|0;s=B+160|0;t=B+144|0;u=B+128|0;v=B+112|0;w=B+96|0;b[h>>2]=c;b[x>>2]=b[a>>2];b[x+4>>2]=b[a+4>>2];b[x+8>>2]=b[a+8>>2];b[x+12>>2]=b[a+12>>2];yb(x,h,y);b[g>>2]=0;r=f+d+((f|0)==6&1)|0;if((r|0)<=(d|0)){T=B;return}k=b[h>>2]|0;l=d+6|0;m=16960+(k<<2)|0;n=t+8|0;o=u+8|0;p=v+8|0;q=z+4|0;i=0;j=d;f=-1;a:while(1){h=(j|0)%6|0;a=y+(h<<4)|0;b[z>>2]=b[a>>2];b[z+4>>2]=b[a+4>>2];b[z+8>>2]=b[a+8>>2];b[z+12>>2]=b[a+12>>2];a=i;i=vb(z,k,0,1)|0;if((j|0)>(d|0)&(Tb(c)|0)!=0?((a|0)!=1?(b[z>>2]|0)!=(f|0):0):0){La(y+(((h+5|0)%6|0)<<4)+4|0,A);La(y+(h<<4)+4|0,s);C=+(b[m>>2]|0);e[t>>3]=C*3.0;e[n>>3]=0.0;D=C*-1.5;e[u>>3]=D;e[o>>3]=C*2.598076211353316;e[v>>3]=D;e[p>>3]=C*-2.598076211353316;h=b[x>>2]|0;switch(b[17040+(h*80|0)+(((f|0)==(h|0)?b[z>>2]|0:f)<<2)>>2]|0){case 1:{a=u;f=t;break}case 3:{a=v;f=u;break}case 2:{a=t;f=v;break}default:{a=8;break a}}id(A,s,f,a,w);if(!(jd(A,w)|0)?!(jd(s,w)|0):0){rb(w,b[x>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}}if((j|0)<(l|0)){La(q,A);rb(A,b[z>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}j=j+1|0;if((j|0)>=(r|0)){a=3;break}else f=b[z>>2]|0}if((a|0)==3){T=B;return}else if((a|0)==8)I(27054,27017,737,27099)}function yb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+160|0;e=j+80|0;f=j;g=e;h=20368;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20448;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Tb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;$a(f);ab(f);if(Tb(b[c>>2]|0)|0){Va(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Ma(f,e,c);Ka(c);b[d+16>>2]=b[a>>2];c=d+20|0;Ma(f,e+12|0,c);Ka(c);b[d+32>>2]=b[a>>2];c=d+36|0;Ma(f,e+24|0,c);Ka(c);b[d+48>>2]=b[a>>2];c=d+52|0;Ma(f,e+36|0,c);Ka(c);b[d+64>>2]=b[a>>2];c=d+68|0;Ma(f,e+48|0,c);Ka(c);b[d+80>>2]=b[a>>2];d=d+84|0;Ma(f,e+60|0,d);Ka(d);T=j;return}function zb(a,b){a=a|0;b=b|0;b=Od(a|0,b|0,52)|0;H()|0;return b&15|0}function Ab(a,b){a=a|0;b=b|0;b=Od(a|0,b|0,45)|0;H()|0;return b&127|0}function Bb(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if(!(0==0&(c&-16777216|0)==134217728)){b=0;return b|0}e=Od(b|0,c|0,52)|0;H()|0;e=e&15;d=Od(b|0,c|0,45)|0;H()|0;d=d&127;if(d>>>0>121){b=0;return b|0}h=(e^15)*3|0;f=Od(b|0,c|0,h|0)|0;h=Pd(f|0,H()|0,h|0)|0;f=H()|0;g=Fd(-1227133514,-1171,h|0,f|0)|0;if(!((h&613566756&g|0)==0&(f&4681&(H()|0)|0)==0)){h=0;return h|0}h=(e*3|0)+19|0;g=Pd(~b|0,~c|0,h|0)|0;h=Od(g|0,H()|0,h|0)|0;if(!((e|0)==15|(h|0)==0&(H()|0)==0)){h=0;return h|0}if(!(a[20528+d>>0]|0)){h=1;return h|0}c=c&8191;if((b|0)==0&(c|0)==0){h=1;return h|0}else{h=Qd(b|0,c|0,0)|0;H()|0;return ((63-h|0)%3|0|0)!=0|0}return 0}function Cb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=Pd(c|0,0,52)|0;g=H()|0;d=Pd(d|0,0,45)|0;d=g|(H()|0)|134225919;if((c|0)<1){g=-1;e=d;c=a;b[c>>2]=g;a=a+4|0;b[a>>2]=e;return}g=1;f=-1;while(1){h=(15-g|0)*3|0;i=Pd(7,0,h|0)|0;d=d&~(H()|0);h=Pd(e|0,0,h|0)|0;f=f&~i|h;d=d|(H()|0);if((g|0)==(c|0))break;else g=g+1|0}i=a;h=i;b[h>>2]=f;i=i+4|0;b[i>>2]=d;return}function Db(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=Od(a|0,c|0,52)|0;H()|0;g=g&15;if(d>>>0>15){e=4;return e|0}if((g|0)<(d|0)){e=12;return e|0}if((g|0)==(d|0)){b[e>>2]=a;b[e+4>>2]=c;e=0;return e|0}f=Pd(d|0,0,52)|0;f=f|a;a=H()|0|c&-15728641;if((g|0)>(d|0))do{c=Pd(7,0,(14-d|0)*3|0)|0;d=d+1|0;f=c|f;a=H()|0|a}while((d|0)<(g|0));b[e>>2]=f;b[e+4>>2]=a;e=0;return e|0}function Eb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=Od(a|0,c|0,52)|0;H()|0;g=g&15;if(!((d|0)<16&(g|0)<=(d|0))){e=4;return e|0}f=d-g|0;d=Od(a|0,c|0,45)|0;H()|0;a:do if(!(ma(d&127)|0)){d=Mc(7,0,f,((f|0)<0)<<31>>31)|0;f=H()|0}else{b:do if(g|0){d=1;while(1){h=Pd(7,0,(15-d|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&c|0)==0))break;if(d>>>0<g>>>0)d=d+1|0;else break b}d=Mc(7,0,f,((f|0)<0)<<31>>31)|0;f=H()|0;break a}while(0);d=Mc(7,0,f,((f|0)<0)<<31>>31)|0;d=Kd(d|0,H()|0,5,0)|0;d=Ed(d|0,H()|0,-5,-1)|0;d=Id(d|0,H()|0,6,0)|0;d=Ed(d|0,H()|0,1,0)|0;f=H()|0}while(0);h=e;b[h>>2]=d;b[h+4>>2]=f;h=0;return h|0}function Fb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=Od(a|0,b|0,45)|0;H()|0;if(!(ma(e&127)|0)){e=0;return e|0}e=Od(a|0,b|0,52)|0;H()|0;e=e&15;a:do if(!e)c=0;else{d=1;while(1){c=Od(a|0,b|0,(15-d|0)*3|0)|0;H()|0;c=c&7;if(c|0)break a;if(d>>>0<e>>>0)d=d+1|0;else{c=0;break}}}while(0);e=(c|0)==0&1;return e|0}function Gb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=T;T=T+16|0;g=h;dc(g,a,c,d);c=g;a=b[c>>2]|0;c=b[c+4>>2]|0;if((a|0)==0&(c|0)==0){T=h;return 0}f=0;d=0;do{i=e+(f<<3)|0;b[i>>2]=a;b[i+4>>2]=c;f=Ed(f|0,d|0,1,0)|0;d=H()|0;fc(g);i=g;a=b[i>>2]|0;c=b[i+4>>2]|0}while(!((a|0)==0&(c|0)==0));T=h;return 0}function Hb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)<(c|0)){c=b;d=a;G(c|0);return d|0}c=Pd(-1,-1,((d-c|0)*3|0)+3|0)|0;d=Pd(~c|0,~(H()|0)|0,(15-d|0)*3|0)|0;c=~(H()|0)&b;d=~d&a;G(c|0);return d|0}function Ib(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0;f=Od(a|0,c|0,52)|0;H()|0;f=f&15;if(!((d|0)<16&(f|0)<=(d|0))){e=4;return e|0}if((f|0)<(d|0)){f=Pd(-1,-1,((d+-1-f|0)*3|0)+3|0)|0;f=Pd(~f|0,~(H()|0)|0,(15-d|0)*3|0)|0;c=~(H()|0)&c;a=~f&a}f=Pd(d|0,0,52)|0;d=c&-15728641|(H()|0);b[e>>2]=a|f;b[e+4>>2]=d;e=0;return e|0}function Jb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;if((d|0)==0&(e|0)==0){E=0;return E|0}f=a;g=b[f>>2]|0;f=b[f+4>>2]|0;if(0==0&(f&15728640|0)==0){if(!((e|0)>0|(e|0)==0&d>>>0>0)){E=0;return E|0}E=c;b[E>>2]=g;b[E+4>>2]=f;if((d|0)==1&(e|0)==0){E=0;return E|0}f=1;g=0;do{C=a+(f<<3)|0;D=b[C+4>>2]|0;E=c+(f<<3)|0;b[E>>2]=b[C>>2];b[E+4>>2]=D;f=Ed(f|0,g|0,1,0)|0;g=H()|0}while((g|0)<(e|0)|(g|0)==(e|0)&f>>>0<d>>>0);f=0;return f|0}B=d<<3;D=Bd(B)|0;if(!D){E=13;return E|0}Ud(D|0,a|0,B|0)|0;C=Dd(d,8)|0;if(!C){Cd(D);E=13;return E|0}a:while(1){f=D;k=b[f>>2]|0;f=b[f+4>>2]|0;z=Od(k|0,f|0,52)|0;H()|0;z=z&15;A=z+-1|0;y=(z|0)!=0;x=(e|0)>0|(e|0)==0&d>>>0>0;b:do if(y&x){t=Pd(A|0,0,52)|0;u=H()|0;if(A>>>0>15){if(!((k|0)==0&(f|0)==0)){E=16;break a}g=0;a=0;while(1){g=Ed(g|0,a|0,1,0)|0;a=H()|0;if(!((a|0)<(e|0)|(a|0)==(e|0)&g>>>0<d>>>0))break b;h=D+(g<<3)|0;w=b[h>>2]|0;h=b[h+4>>2]|0;if(!((w|0)==0&(h|0)==0)){f=h;E=16;break a}}}i=k;a=f;g=0;h=0;while(1){if(!((i|0)==0&(a|0)==0)){if(!(0==0&(a&117440512|0)==0)){E=21;break a}l=Od(i|0,a|0,52)|0;H()|0;l=l&15;if((l|0)<(A|0)){f=12;E=27;break a}if((l|0)!=(A|0)){i=i|t;a=a&-15728641|u;if(l>>>0>=z>>>0){j=A;do{w=Pd(7,0,(14-j|0)*3|0)|0;j=j+1|0;i=w|i;a=H()|0|a}while(j>>>0<l>>>0)}}n=Md(i|0,a|0,d|0,e|0)|0;o=H()|0;j=C+(n<<3)|0;l=j;m=b[l>>2]|0;l=b[l+4>>2]|0;if(!((m|0)==0&(l|0)==0)){r=0;s=0;do{if((r|0)>(e|0)|(r|0)==(e|0)&s>>>0>d>>>0){E=31;break a}if((m|0)==(i|0)&(l&-117440513|0)==(a|0)){p=Od(m|0,l|0,56)|0;H()|0;p=p&7;q=p+1|0;w=Od(m|0,l|0,45)|0;H()|0;c:do if(!(ma(w&127)|0))l=7;else{m=Od(m|0,l|0,52)|0;H()|0;m=m&15;if(!m){l=6;break}l=1;while(1){w=Pd(7,0,(15-l|0)*3|0)|0;if(!((w&i|0)==0&((H()|0)&a|0)==0)){l=7;break c}if(l>>>0<m>>>0)l=l+1|0;else{l=6;break}}}while(0);if((p+2|0)>>>0>l>>>0){E=41;break a}w=Pd(q|0,0,56)|0;a=H()|0|a&-117440513;v=j;b[v>>2]=0;b[v+4>>2]=0;i=w|i}else{n=Ed(n|0,o|0,1,0)|0;n=Ld(n|0,H()|0,d|0,e|0)|0;o=H()|0}s=Ed(s|0,r|0,1,0)|0;r=H()|0;j=C+(n<<3)|0;l=j;m=b[l>>2]|0;l=b[l+4>>2]|0}while(!((m|0)==0&(l|0)==0))}w=j;b[w>>2]=i;b[w+4>>2]=a}g=Ed(g|0,h|0,1,0)|0;h=H()|0;if(!((h|0)<(e|0)|(h|0)==(e|0)&g>>>0<d>>>0))break b;a=D+(g<<3)|0;i=b[a>>2]|0;a=b[a+4>>2]|0}}while(0);w=Ed(d|0,e|0,5,0)|0;v=H()|0;if(v>>>0<0|(v|0)==0&w>>>0<11){E=85;break}w=Id(d|0,e|0,6,0)|0;H()|0;w=Dd(w,8)|0;if(!w){E=48;break}do if(x){q=0;a=0;p=0;r=0;while(1){l=C+(q<<3)|0;h=l;g=b[h>>2]|0;h=b[h+4>>2]|0;if(!((g|0)==0&(h|0)==0)){m=Od(g|0,h|0,56)|0;H()|0;m=m&7;i=m+1|0;n=h&-117440513;v=Od(g|0,h|0,45)|0;H()|0;d:do if(ma(v&127)|0){o=Od(g|0,h|0,52)|0;H()|0;o=o&15;if(o|0){j=1;while(1){v=Pd(7,0,(15-j|0)*3|0)|0;if(!((g&v|0)==0&(n&(H()|0)|0)==0))break d;if(j>>>0<o>>>0)j=j+1|0;else break}}h=Pd(i|0,0,56)|0;g=h|g;h=H()|0|n;i=l;b[i>>2]=g;b[i+4>>2]=h;i=m+2|0}while(0);if((i|0)==7){v=w+(a<<3)|0;b[v>>2]=g;b[v+4>>2]=h&-117440513;a=Ed(a|0,p|0,1,0)|0;v=H()|0}else v=p}else v=p;q=Ed(q|0,r|0,1,0)|0;r=H()|0;if(!((r|0)<(e|0)|(r|0)==(e|0)&q>>>0<d>>>0))break;else p=v}if(x){s=A>>>0>15;t=Pd(A|0,0,52)|0;u=H()|0;if(!y){g=0;j=0;i=0;h=0;while(1){if(!((k|0)==0&(f|0)==0)){A=c+(g<<3)|0;b[A>>2]=k;b[A+4>>2]=f;g=Ed(g|0,j|0,1,0)|0;j=H()|0}i=Ed(i|0,h|0,1,0)|0;h=H()|0;if(!((h|0)<(e|0)|(h|0)==(e|0)&i>>>0<d>>>0))break;f=D+(i<<3)|0;k=b[f>>2]|0;f=b[f+4>>2]|0}f=v;break}g=0;j=0;h=0;i=0;while(1){do if(!((k|0)==0&(f|0)==0)){o=Od(k|0,f|0,52)|0;H()|0;o=o&15;if(s|(o|0)<(A|0)){E=80;break a}if((o|0)!=(A|0)){l=k|t;m=f&-15728641|u;if(o>>>0>=z>>>0){n=A;do{y=Pd(7,0,(14-n|0)*3|0)|0;n=n+1|0;l=y|l;m=H()|0|m}while(n>>>0<o>>>0)}}else{l=k;m=f}p=Md(l|0,m|0,d|0,e|0)|0;n=0;o=0;r=H()|0;do{if((n|0)>(e|0)|(n|0)==(e|0)&o>>>0>d>>>0){E=81;break a}y=C+(p<<3)|0;q=b[y+4>>2]|0;if((q&-117440513|0)==(m|0)?(b[y>>2]|0)==(l|0):0){E=65;break}y=Ed(p|0,r|0,1,0)|0;p=Ld(y|0,H()|0,d|0,e|0)|0;r=H()|0;o=Ed(o|0,n|0,1,0)|0;n=H()|0;y=C+(p<<3)|0}while(!((b[y>>2]|0)==(l|0)?(b[y+4>>2]|0)==(m|0):0));if((E|0)==65?(E=0,0==0&(q&117440512|0)==100663296):0)break;y=c+(g<<3)|0;b[y>>2]=k;b[y+4>>2]=f;g=Ed(g|0,j|0,1,0)|0;j=H()|0}while(0);h=Ed(h|0,i|0,1,0)|0;i=H()|0;if(!((i|0)<(e|0)|(i|0)==(e|0)&h>>>0<d>>>0))break;f=D+(h<<3)|0;k=b[f>>2]|0;f=b[f+4>>2]|0}f=v}else{g=0;f=v}}else{g=0;a=0;f=0}while(0);Vd(C|0,0,B|0)|0;Ud(D|0,w|0,a<<3|0)|0;Cd(w);if((a|0)==0&(f|0)==0){E=89;break}else{c=c+(g<<3)|0;e=f;d=a}}if((E|0)==16)if(0==0&(f&117440512|0)==0){f=4;E=27}else E=21;else if((E|0)==31)I(27795,27122,529,27132);else if((E|0)==41){Cd(D);Cd(C);E=10;return E|0}else if((E|0)==48){Cd(D);Cd(C);E=13;return E|0}else if((E|0)==80)I(27795,27122,620,27132);else if((E|0)==81)I(27795,27122,632,27132);else if((E|0)==85){Ud(c|0,D|0,d<<3|0)|0;E=89}if((E|0)==21){Cd(D);Cd(C);E=5;return E|0}else if((E|0)==27){Cd(D);Cd(C);E=f;return E|0}else if((E|0)==89){Cd(D);Cd(C);E=0;return E|0}return 0}function Kb(a,c,d,e,f,g,h){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=T;T=T+16|0;p=q;if(!((d|0)>0|(d|0)==0&c>>>0>0)){p=0;T=q;return p|0}if((h|0)>=16){p=12;T=q;return p|0}n=0;o=0;m=0;i=0;a:while(1){k=a+(n<<3)|0;j=b[k>>2]|0;k=b[k+4>>2]|0;l=Od(j|0,k|0,52)|0;H()|0;if((l&15|0)>(h|0)){i=12;j=11;break}dc(p,j,k,h);l=p;k=b[l>>2]|0;l=b[l+4>>2]|0;if((k|0)==0&(l|0)==0)j=m;else{j=m;do{if(!((i|0)<(g|0)|(i|0)==(g|0)&j>>>0<f>>>0)){j=10;break a}m=e+(j<<3)|0;b[m>>2]=k;b[m+4>>2]=l;j=Ed(j|0,i|0,1,0)|0;i=H()|0;fc(p);m=p;k=b[m>>2]|0;l=b[m+4>>2]|0}while(!((k|0)==0&(l|0)==0))}n=Ed(n|0,o|0,1,0)|0;o=H()|0;if(!((o|0)<(d|0)|(o|0)==(d|0)&n>>>0<c>>>0)){i=0;j=11;break}else m=j}if((j|0)==10){p=14;T=q;return p|0}else if((j|0)==11){T=q;return i|0}return 0}function Lb(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=T;T=T+16|0;m=n;a:do if((d|0)>0|(d|0)==0&c>>>0>0){k=0;h=0;g=0;l=0;while(1){j=a+(k<<3)|0;i=b[j>>2]|0;j=b[j+4>>2]|0;if(!((i|0)==0&(j|0)==0)){j=(Eb(i,j,e,m)|0)==0;i=m;h=Ed(b[i>>2]|0,b[i+4>>2]|0,h|0,g|0)|0;g=H()|0;if(!j){g=12;break}}k=Ed(k|0,l|0,1,0)|0;l=H()|0;if(!((l|0)<(d|0)|(l|0)==(d|0)&k>>>0<c>>>0))break a}T=n;return g|0}else{h=0;g=0}while(0);b[f>>2]=h;b[f+4>>2]=g;f=0;T=n;return f|0}function Mb(a,b){a=a|0;b=b|0;b=Od(a|0,b|0,52)|0;H()|0;return b&1|0}function Nb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=Od(a|0,b|0,52)|0;H()|0;e=e&15;if(!e){e=0;return e|0}d=1;while(1){c=Od(a|0,b|0,(15-d|0)*3|0)|0;H()|0;c=c&7;if(c|0){d=5;break}if(d>>>0<e>>>0)d=d+1|0;else{c=0;d=5;break}}if((d|0)==5)return c|0;return 0}function Ob(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=Od(a|0,b|0,52)|0;H()|0;i=i&15;if(!i){h=b;i=a;G(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=Pd(7,0,f|0)|0;e=H()|0;g=Od(a|0,b|0,f|0)|0;H()|0;f=Pd(Za(g&7)|0,0,f|0)|0;g=H()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=Od(a|0,b|0,52)|0;H()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=Od(a|0,b|0,(15-c|0)*3|0)|0;H()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){g=(15-c|0)*3|0;e=Od(a|0,b|0,g|0)|0;H()|0;f=Pd(7,0,g|0)|0;b=b&~(H()|0);g=Pd(Za(e&7)|0,0,g|0)|0;a=a&~f|g;b=b|(H()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}G(b|0);return a|0}function Pb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=Od(a|0,b|0,52)|0;H()|0;d=d&15;if(!d){c=b;d=a;G(c|0);return d|0}c=1;while(1){f=(15-c|0)*3|0;g=Od(a|0,b|0,f|0)|0;H()|0;e=Pd(7,0,f|0)|0;b=b&~(H()|0);f=Pd(Za(g&7)|0,0,f|0)|0;a=f|a&~e;b=H()|0|b;if(c>>>0<d>>>0)c=c+1|0;else break}G(b|0);return a|0}function Qb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=Od(a|0,b|0,52)|0;H()|0;i=i&15;if(!i){h=b;i=a;G(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=Pd(7,0,f|0)|0;e=H()|0;g=Od(a|0,b|0,f|0)|0;H()|0;f=Pd(_a(g&7)|0,0,f|0)|0;g=H()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=Od(a|0,b|0,52)|0;H()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=Od(a|0,b|0,(15-c|0)*3|0)|0;H()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){e=(15-c|0)*3|0;f=Pd(7,0,e|0)|0;g=b&~(H()|0);b=Od(a|0,b|0,e|0)|0;H()|0;b=Pd(_a(b&7)|0,0,e|0)|0;a=a&~f|b;b=g|(H()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}G(b|0);return a|0}function Rb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=Od(a|0,b|0,52)|0;H()|0;d=d&15;if(!d){c=b;d=a;G(c|0);return d|0}c=1;while(1){g=(15-c|0)*3|0;f=Pd(7,0,g|0)|0;e=b&~(H()|0);b=Od(a|0,b|0,g|0)|0;H()|0;b=Pd(_a(b&7)|0,0,g|0)|0;a=b|a&~f;b=H()|0|e;if(c>>>0<d>>>0)c=c+1|0;else break}G(b|0);return a|0}function Sb(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;j=T;T=T+64|0;i=j+40|0;e=j+24|0;f=j+12|0;g=j;Pd(c|0,0,52)|0;d=H()|0|134225919;if(!c){if((b[a+4>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}if((b[a+8>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}if((b[a+12>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}Pd(oa(a)|0,0,45)|0;h=H()|0|d;i=-1;G(h|0);T=j;return i|0};b[i>>2]=b[a>>2];b[i+4>>2]=b[a+4>>2];b[i+8>>2]=b[a+8>>2];b[i+12>>2]=b[a+12>>2];h=i+4|0;if((c|0)>0){a=-1;while(1){b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];if(!(c&1)){Ta(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];Va(f)}else{Sa(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];Ua(f)}Na(e,f,g);Ka(g);l=(15-c|0)*3|0;k=Pd(7,0,l|0)|0;d=d&~(H()|0);l=Pd(Pa(g)|0,0,l|0)|0;a=l|a&~k;d=H()|0|d;if((c|0)>1)c=c+-1|0;else break}}else a=-1;a:do if(((b[h>>2]|0)<=2?(b[i+8>>2]|0)<=2:0)?(b[i+12>>2]|0)<=2:0){e=oa(i)|0;c=Pd(e|0,0,45)|0;c=c|a;a=H()|0|d&-1040385;g=pa(i)|0;if(!(ma(e)|0)){if((g|0)<=0)break;f=0;while(1){e=Od(c|0,a|0,52)|0;H()|0;e=e&15;if(e){d=1;while(1){l=(15-d|0)*3|0;i=Od(c|0,a|0,l|0)|0;H()|0;k=Pd(7,0,l|0)|0;a=a&~(H()|0);l=Pd(Za(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(H()|0);if(d>>>0<e>>>0)d=d+1|0;else break}}f=f+1|0;if((f|0)==(g|0))break a}}f=Od(c|0,a|0,52)|0;H()|0;f=f&15;b:do if(f){d=1;c:while(1){l=Od(c|0,a|0,(15-d|0)*3|0)|0;H()|0;switch(l&7){case 1:break c;case 0:break;default:break b}if(d>>>0<f>>>0)d=d+1|0;else break b}if(sa(e,b[i>>2]|0)|0){d=1;while(1){i=(15-d|0)*3|0;k=Pd(7,0,i|0)|0;l=a&~(H()|0);a=Od(c|0,a|0,i|0)|0;H()|0;a=Pd(_a(a&7)|0,0,i|0)|0;c=c&~k|a;a=l|(H()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}else{d=1;while(1){l=(15-d|0)*3|0;i=Od(c|0,a|0,l|0)|0;H()|0;k=Pd(7,0,l|0)|0;a=a&~(H()|0);l=Pd(Za(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(H()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}}while(0);if((g|0)>0){d=0;do{c=Ob(c,a)|0;a=H()|0;d=d+1|0}while((d|0)!=(g|0))}}else{c=0;a=0}while(0);k=a;l=c;G(k|0);T=j;return l|0}function Tb(a){a=a|0;return (a|0)%2|0|0}function Ub(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=T;T=T+16|0;e=f;if(c>>>0>15){e=4;T=f;return e|0}if(0==0?(b[a+4>>2]&2146435072|0)==2146435072:0){e=3;T=f;return e|0}if(0==0?(b[a+8+4>>2]&2146435072|0)==2146435072:0){e=3;T=f;return e|0}ob(a,c,e);c=Sb(e,c)|0;e=H()|0;b[d>>2]=c;b[d+4>>2]=e;if((c|0)==0&(e|0)==0)I(27795,27122,959,27145);e=0;T=f;return e|0}function Vb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=d+4|0;g=Od(a|0,c|0,52)|0;H()|0;g=g&15;h=Od(a|0,c|0,45)|0;H()|0;e=(g|0)==0;if(!(ma(h&127)|0)){if(e){h=0;return h|0}if((b[f>>2]|0)==0?(b[d+8>>2]|0)==0:0)e=(b[d+12>>2]|0)!=0&1;else e=1}else if(e){h=1;return h|0}else e=1;d=1;while(1){if(!(d&1))Va(f);else Ua(f);h=Od(a|0,c|0,(15-d|0)*3|0)|0;H()|0;Wa(f,h&7);if(d>>>0<g>>>0)d=d+1|0;else break}return e|0}function Wb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=T;T=T+16|0;j=l;k=Od(a|0,c|0,45)|0;H()|0;k=k&127;if(k>>>0>121){b[d>>2]=0;b[d+4>>2]=0;b[d+8>>2]=0;b[d+12>>2]=0;k=5;T=l;return k|0}a:do if((ma(k)|0)!=0?(g=Od(a|0,c|0,52)|0,H()|0,g=g&15,(g|0)!=0):0){e=1;b:while(1){i=Od(a|0,c|0,(15-e|0)*3|0)|0;H()|0;switch(i&7){case 5:break b;case 0:break;default:{e=c;break a}}if(e>>>0<g>>>0)e=e+1|0;else{e=c;break a}}f=1;e=c;while(1){c=(15-f|0)*3|0;h=Pd(7,0,c|0)|0;i=e&~(H()|0);e=Od(a|0,e|0,c|0)|0;H()|0;e=Pd(_a(e&7)|0,0,c|0)|0;a=a&~h|e;e=i|(H()|0);if(f>>>0<g>>>0)f=f+1|0;else break}}else e=c;while(0);i=7696+(k*28|0)|0;b[d>>2]=b[i>>2];b[d+4>>2]=b[i+4>>2];b[d+8>>2]=b[i+8>>2];b[d+12>>2]=b[i+12>>2];if(!(Vb(a,e,d)|0)){k=0;T=l;return k|0}h=d+4|0;b[j>>2]=b[h>>2];b[j+4>>2]=b[h+4>>2];b[j+8>>2]=b[h+8>>2];g=Od(a|0,e|0,52)|0;H()|0;i=g&15;if(!(g&1))g=i;else{Va(h);g=i+1|0}if(!(ma(k)|0))e=0;else{c:do if(!i)e=0;else{c=1;while(1){f=Od(a|0,e|0,(15-c|0)*3|0)|0;H()|0;f=f&7;if(f|0){e=f;break c}if(c>>>0<i>>>0)c=c+1|0;else{e=0;break}}}while(0);e=(e|0)==4&1}if(!(vb(d,g,e,0)|0)){if((g|0)!=(i|0)){b[h>>2]=b[j>>2];b[h+4>>2]=b[j+4>>2];b[h+8>>2]=b[j+8>>2]}}else{if(ma(k)|0)do{}while((vb(d,g,0,0)|0)!=0);if((g|0)!=(i|0))Ta(h)}k=0;T=l;return k|0}function Xb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=T;T=T+16|0;d=f;e=Wb(a,b,d)|0;if(e|0){T=f;return e|0}e=Od(a|0,b|0,52)|0;H()|0;sb(d,e&15,c);e=0;T=f;return e|0}function Yb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=T;T=T+16|0;f=g;d=Wb(a,b,f)|0;if(d|0){f=d;T=g;return f|0}d=Od(a|0,b|0,45)|0;H()|0;d=(ma(d&127)|0)==0;e=Od(a|0,b|0,52)|0;H()|0;e=e&15;a:do if(!d){if(e|0){d=1;while(1){h=Pd(7,0,(15-d|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&b|0)==0))break a;if(d>>>0<e>>>0)d=d+1|0;else break}}tb(f,e,0,5,c);h=0;T=g;return h|0}while(0);xb(f,e,0,6,c);h=0;T=g;return h|0}function Zb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=Od(a|0,c|0,45)|0;H()|0;if(!(ma(f&127)|0)){f=2;b[d>>2]=f;return 0}f=Od(a|0,c|0,52)|0;H()|0;f=f&15;if(!f){f=5;b[d>>2]=f;return 0}e=1;while(1){g=Pd(7,0,(15-e|0)*3|0)|0;if(!((g&a|0)==0&((H()|0)&c|0)==0)){e=2;a=6;break}if(e>>>0<f>>>0)e=e+1|0;else{e=5;a=6;break}}if((a|0)==6){b[d>>2]=e;return 0}return 0}function _b(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=T;T=T+128|0;k=m+112|0;g=m+96|0;l=m;f=Od(a|0,c|0,52)|0;H()|0;i=f&15;b[k>>2]=i;h=Od(a|0,c|0,45)|0;H()|0;h=h&127;a:do if(ma(h)|0){if(i|0){e=1;while(1){j=Pd(7,0,(15-e|0)*3|0)|0;if(!((j&a|0)==0&((H()|0)&c|0)==0)){f=0;break a}if(e>>>0<i>>>0)e=e+1|0;else break}}if(!(f&1)){j=Pd(i+1|0,0,52)|0;l=H()|0|c&-15728641;k=Pd(7,0,(14-i|0)*3|0)|0;l=_b((j|a)&~k,l&~(H()|0),d)|0;T=m;return l|0}else f=1}else f=0;while(0);e=Wb(a,c,g)|0;if(!e){if(f){ub(g,k,l);j=5}else{yb(g,k,l);j=6}b:do if(ma(h)|0)if(!i)a=5;else{e=1;while(1){h=Pd(7,0,(15-e|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&c|0)==0)){a=2;break b}if(e>>>0<i>>>0)e=e+1|0;else{a=5;break}}}else a=2;while(0);Vd(d|0,-1,a<<2|0)|0;c:do if(f){g=0;while(1){h=l+(g<<4)|0;wb(h,b[k>>2]|0)|0;h=b[h>>2]|0;i=b[d>>2]|0;if((i|0)==-1|(i|0)==(h|0))e=d;else{f=0;do{f=f+1|0;if(f>>>0>=a>>>0){e=1;break c}e=d+(f<<2)|0;i=b[e>>2]|0}while(!((i|0)==-1|(i|0)==(h|0)))}b[e>>2]=h;g=g+1|0;if(g>>>0>=j>>>0){e=0;break}}}else{g=0;while(1){h=l+(g<<4)|0;vb(h,b[k>>2]|0,0,1)|0;h=b[h>>2]|0;i=b[d>>2]|0;if((i|0)==-1|(i|0)==(h|0))e=d;else{f=0;do{f=f+1|0;if(f>>>0>=a>>>0){e=1;break c}e=d+(f<<2)|0;i=b[e>>2]|0}while(!((i|0)==-1|(i|0)==(h|0)))}b[e>>2]=h;g=g+1|0;if(g>>>0>=j>>>0){e=0;break}}}while(0)}l=e;T=m;return l|0}function $b(){return 12}function ac(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(a>>>0>15){i=4;return i|0}Pd(a|0,0,52)|0;i=H()|0|134225919;if(!a){d=0;e=0;do{if(ma(e)|0){Pd(e|0,0,45)|0;h=i|(H()|0);a=c+(d<<3)|0;b[a>>2]=-1;b[a+4>>2]=h;d=d+1|0}e=e+1|0}while((e|0)!=122);d=0;return d|0}d=0;h=0;do{if(ma(h)|0){Pd(h|0,0,45)|0;e=1;f=-1;g=i|(H()|0);while(1){j=Pd(7,0,(15-e|0)*3|0)|0;f=f&~j;g=g&~(H()|0);if((e|0)==(a|0))break;else e=e+1|0}j=c+(d<<3)|0;b[j>>2]=f;b[j+4>>2]=g;d=d+1|0}h=h+1|0}while((h|0)!=122);d=0;return d|0}function bc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=T;T=T+16|0;r=t;s=Od(a|0,c|0,52)|0;H()|0;s=s&15;if(d>>>0>15){s=4;T=t;return s|0}if((s|0)<(d|0)){s=12;T=t;return s|0}if((s|0)!=(d|0)){g=Pd(d|0,0,52)|0;g=g|a;i=H()|0|c&-15728641;if((s|0)>(d|0)){j=d;do{q=Pd(7,0,(14-j|0)*3|0)|0;j=j+1|0;g=q|g;i=H()|0|i}while((j|0)<(s|0));q=g}else q=g}else{q=a;i=c}p=Od(q|0,i|0,45)|0;H()|0;a:do if(ma(p&127)|0){j=Od(q|0,i|0,52)|0;H()|0;j=j&15;if(j|0){g=1;while(1){p=Pd(7,0,(15-g|0)*3|0)|0;if(!((p&q|0)==0&((H()|0)&i|0)==0)){k=33;break a}if(g>>>0<j>>>0)g=g+1|0;else break}}p=e;b[p>>2]=0;b[p+4>>2]=0;if((s|0)>(d|0)){p=c&-15728641;o=s;while(1){n=o;o=o+-1|0;if(o>>>0>15|(s|0)<(o|0)){k=19;break}if((s|0)!=(o|0)){g=Pd(o|0,0,52)|0;g=g|a;j=H()|0|p;if((s|0)<(n|0))m=g;else{k=o;do{m=Pd(7,0,(14-k|0)*3|0)|0;k=k+1|0;g=m|g;j=H()|0|j}while((k|0)<(s|0));m=g}}else{m=a;j=c}l=Od(m|0,j|0,45)|0;H()|0;if(!(ma(l&127)|0))g=0;else{l=Od(m|0,j|0,52)|0;H()|0;l=l&15;b:do if(!l)g=0;else{k=1;while(1){g=Od(m|0,j|0,(15-k|0)*3|0)|0;H()|0;g=g&7;if(g|0)break b;if(k>>>0<l>>>0)k=k+1|0;else{g=0;break}}}while(0);g=(g|0)==0&1}j=Od(a|0,c|0,(15-n|0)*3|0)|0;H()|0;j=j&7;if((j|0)==7){f=5;k=42;break}g=(g|0)!=0;if((j|0)==1&g){f=5;k=42;break}m=j+(((j|0)!=0&g)<<31>>31)|0;if(m|0){k=s-n|0;k=Mc(7,0,k,((k|0)<0)<<31>>31)|0;l=H()|0;if(g){g=Kd(k|0,l|0,5,0)|0;g=Ed(g|0,H()|0,-5,-1)|0;g=Id(g|0,H()|0,6,0)|0;g=Ed(g|0,H()|0,1,0)|0;j=H()|0}else{g=k;j=l}n=m+-1|0;n=Kd(k|0,l|0,n|0,((n|0)<0)<<31>>31|0)|0;n=Ed(g|0,j|0,n|0,H()|0)|0;m=H()|0;l=e;l=Ed(n|0,m|0,b[l>>2]|0,b[l+4>>2]|0)|0;m=H()|0;n=e;b[n>>2]=l;b[n+4>>2]=m}if((o|0)<=(d|0)){k=37;break}}if((k|0)==19)I(27795,27122,1276,27158);else if((k|0)==37){h=e;f=b[h+4>>2]|0;h=b[h>>2]|0;break}else if((k|0)==42){T=t;return f|0}}else{f=0;h=0}}else k=33;while(0);c:do if((k|0)==33){p=e;b[p>>2]=0;b[p+4>>2]=0;if((s|0)>(d|0)){g=s;while(1){f=Od(a|0,c|0,(15-g|0)*3|0)|0;H()|0;f=f&7;if((f|0)==7){f=5;break}h=s-g|0;h=Mc(7,0,h,((h|0)<0)<<31>>31)|0;f=Kd(h|0,H()|0,f|0,0)|0;h=H()|0;p=e;h=Ed(b[p>>2]|0,b[p+4>>2]|0,f|0,h|0)|0;f=H()|0;p=e;b[p>>2]=h;b[p+4>>2]=f;g=g+-1|0;if((g|0)<=(d|0))break c}T=t;return f|0}else{f=0;h=0}}while(0);if(Eb(q,i,s,r)|0)I(27795,27122,1236,27173);s=r;r=b[s+4>>2]|0;if(((f|0)>-1|(f|0)==-1&h>>>0>4294967295)&((r|0)>(f|0)|((r|0)==(f|0)?(b[s>>2]|0)>>>0>h>>>0:0))){s=0;T=t;return s|0}else I(27795,27122,1316,27158);return 0}function cc(a,c,d,e,f,g){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;m=T;T=T+16|0;h=m;if(f>>>0>15){g=4;T=m;return g|0}i=Od(d|0,e|0,52)|0;H()|0;i=i&15;if((i|0)>(f|0)){g=12;T=m;return g|0}if(Eb(d,e,f,h)|0)I(27795,27122,1236,27173);l=h;k=b[l+4>>2]|0;if(!(((c|0)>-1|(c|0)==-1&a>>>0>4294967295)&((k|0)>(c|0)|((k|0)==(c|0)?(b[l>>2]|0)>>>0>a>>>0:0)))){g=2;T=m;return g|0}l=f-i|0;f=Pd(f|0,0,52)|0;j=H()|0|e&-15728641;k=g;b[k>>2]=f|d;b[k+4>>2]=j;k=Od(d|0,e|0,45)|0;H()|0;a:do if(ma(k&127)|0){if(i|0){h=1;while(1){k=Pd(7,0,(15-h|0)*3|0)|0;if(!((k&d|0)==0&((H()|0)&e|0)==0))break a;if(h>>>0<i>>>0)h=h+1|0;else break}}if((l|0)<1){g=0;T=m;return g|0}k=i^15;e=-1;j=1;h=1;while(1){i=l-j|0;i=Mc(7,0,i,((i|0)<0)<<31>>31)|0;d=H()|0;do if(h){h=Kd(i|0,d|0,5,0)|0;h=Ed(h|0,H()|0,-5,-1)|0;h=Id(h|0,H()|0,6,0)|0;f=H()|0;if((c|0)>(f|0)|(c|0)==(f|0)&a>>>0>h>>>0){c=Ed(a|0,c|0,-1,-1)|0;c=Fd(c|0,H()|0,h|0,f|0)|0;h=H()|0;n=g;p=b[n>>2]|0;n=b[n+4>>2]|0;q=(k+e|0)*3|0;o=Pd(7,0,q|0)|0;n=n&~(H()|0);e=Id(c|0,h|0,i|0,d|0)|0;a=H()|0;f=Ed(e|0,a|0,2,0)|0;q=Pd(f|0,H()|0,q|0)|0;n=H()|0|n;f=g;b[f>>2]=q|p&~o;b[f+4>>2]=n;a=Kd(e|0,a|0,i|0,d|0)|0;a=Fd(c|0,h|0,a|0,H()|0)|0;h=0;c=H()|0;break}else{q=g;o=b[q>>2]|0;q=b[q+4>>2]|0;p=Pd(7,0,(k+e|0)*3|0)|0;q=q&~(H()|0);h=g;b[h>>2]=o&~p;b[h+4>>2]=q;h=1;break}}else{o=g;f=b[o>>2]|0;o=b[o+4>>2]|0;e=(k+e|0)*3|0;n=Pd(7,0,e|0)|0;o=o&~(H()|0);q=Id(a|0,c|0,i|0,d|0)|0;h=H()|0;e=Pd(q|0,h|0,e|0)|0;o=H()|0|o;p=g;b[p>>2]=e|f&~n;b[p+4>>2]=o;h=Kd(q|0,h|0,i|0,d|0)|0;a=Fd(a|0,c|0,h|0,H()|0)|0;h=0;c=H()|0}while(0);if((l|0)>(j|0)){e=~j;j=j+1|0}else{c=0;break}}T=m;return c|0}while(0);if((l|0)<1){q=0;T=m;return q|0}f=i^15;h=1;while(1){p=l-h|0;p=Mc(7,0,p,((p|0)<0)<<31>>31)|0;q=H()|0;j=g;d=b[j>>2]|0;j=b[j+4>>2]|0;i=(f-h|0)*3|0;e=Pd(7,0,i|0)|0;j=j&~(H()|0);n=Id(a|0,c|0,p|0,q|0)|0;o=H()|0;i=Pd(n|0,o|0,i|0)|0;j=H()|0|j;k=g;b[k>>2]=i|d&~e;b[k+4>>2]=j;q=Kd(n|0,o|0,p|0,q|0)|0;a=Fd(a|0,c|0,q|0,H()|0)|0;c=H()|0;if((l|0)<=(h|0)){c=0;break}else h=h+1|0}T=m;return c|0}function dc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=Od(c|0,d|0,52)|0;H()|0;f=f&15;if((c|0)==0&(d|0)==0|((e|0)>15|(f|0)>(e|0))){g=-1;c=-1;d=0;f=0}else{c=Hb(c,d,f+1|0,e)|0;h=(H()|0)&-15728641;d=Pd(e|0,0,52)|0;d=c|d;h=h|(H()|0);c=(Fb(d,h)|0)==0;g=f;c=c?-1:e;f=h}h=a;b[h>>2]=d;b[h+4>>2]=f;b[a+8>>2]=g;b[a+12>>2]=c;return}function ec(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=Od(a|0,c|0,52)|0;H()|0;f=f&15;g=e+8|0;b[g>>2]=f;if((a|0)==0&(c|0)==0|((d|0)>15|(f|0)>(d|0))){d=e;b[d>>2]=0;b[d+4>>2]=0;b[g>>2]=-1;b[e+12>>2]=-1;return}a=Hb(a,c,f+1|0,d)|0;g=(H()|0)&-15728641;f=Pd(d|0,0,52)|0;f=a|f;g=g|(H()|0);a=e;b[a>>2]=f;b[a+4>>2]=g;a=e+12|0;if(!(Fb(f,g)|0)){b[a>>2]=-1;return}else{b[a>>2]=d;return}}function fc(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a;c=b[d>>2]|0;d=b[d+4>>2]|0;if((c|0)==0&(d|0)==0)return;e=Od(c|0,d|0,52)|0;H()|0;e=e&15;i=Pd(1,0,(e^15)*3|0)|0;c=Ed(i|0,H()|0,c|0,d|0)|0;d=H()|0;i=a;b[i>>2]=c;b[i+4>>2]=d;i=a+8|0;h=b[i>>2]|0;if((e|0)<(h|0))return;j=a+12|0;g=e;while(1){if((g|0)==(h|0)){e=5;break}k=(g|0)==(b[j>>2]|0);f=(15-g|0)*3|0;e=Od(c|0,d|0,f|0)|0;H()|0;e=e&7;if(k&((e|0)==1&0==0)){e=7;break}if(!((e|0)==7&0==0)){e=10;break}k=Pd(1,0,f|0)|0;c=Ed(c|0,d|0,k|0,H()|0)|0;d=H()|0;k=a;b[k>>2]=c;b[k+4>>2]=d;if((g|0)>(h|0))g=g+-1|0;else{e=10;break}}if((e|0)==5){k=a;b[k>>2]=0;b[k+4>>2]=0;b[i>>2]=-1;b[j>>2]=-1;return}else if((e|0)==7){h=Pd(1,0,f|0)|0;h=Ed(c|0,d|0,h|0,H()|0)|0;i=H()|0;k=a;b[k>>2]=h;b[k+4>>2]=i;b[j>>2]=g+-1;return}else if((e|0)==10)return}function gc(a){a=+a;var b=0.0;b=a<0.0?a+6.283185307179586:a;return +(!(a>=6.283185307179586)?b:b+-6.283185307179586)}function hc(a,b){a=a|0;b=b|0;if(!(+q(+(+e[a>>3]-+e[b>>3]))<1.7453292519943298e-11)){b=0;return b|0}b=+q(+(+e[a+8>>3]-+e[b+8>>3]))<1.7453292519943298e-11;return b|0}function ic(a,b){a=+a;b=b|0;switch(b|0){case 1:{a=a<0.0?a+6.283185307179586:a;break}case 2:{a=a>0.0?a+-6.283185307179586:a;break}default:{}}return +a}function jc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0)}function kc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475)}function lc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475*1.0e3)}function mc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0,h=0.0;g=+e[b>>3];d=+t(+g);f=+e[b+8>>3]-+e[a+8>>3];h=d*+u(+f);c=+e[a>>3];return +(+z(+h,+(+u(+g)*+t(+c)-+t(+f)*(d*+u(+c)))))}function nc(a,c,d,f){a=a|0;c=+c;d=+d;f=f|0;var g=0,h=0.0,i=0.0,j=0.0;if(d<1.0e-16){b[f>>2]=b[a>>2];b[f+4>>2]=b[a+4>>2];b[f+8>>2]=b[a+8>>2];b[f+12>>2]=b[a+12>>2];return}h=c<0.0?c+6.283185307179586:c;h=!(c>=6.283185307179586)?h:h+-6.283185307179586;do if(h<1.0e-16){c=+e[a>>3]+d;e[f>>3]=c;g=f}else{g=+q(+(h+-3.141592653589793))<1.0e-16;c=+e[a>>3];if(g){c=c-d;e[f>>3]=c;g=f;break}i=+t(+d);d=+u(+d);c=i*+u(+c)+ +t(+h)*(d*+t(+c));c=c>1.0?1.0:c;c=+x(+(c<-1.0?-1.0:c));e[f>>3]=c;if(+q(+(c+-1.5707963267948966))<1.0e-16){e[f>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[f>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}j=1.0/+t(+c);h=d*+u(+h)*j;d=+e[a>>3];c=j*((i-+u(+c)*+u(+d))/+t(+d));i=h>1.0?1.0:h;c=c>1.0?1.0:c;c=+e[a+8>>3]+ +z(+(i<-1.0?-1.0:i),+(c<-1.0?-1.0:c));if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}while(0);if(+q(+(c+-1.5707963267948966))<1.0e-16){e[g>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[g>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}c=+e[a+8>>3];if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}function oc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20656+(a<<3)>>3];b=0;return b|0}function pc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20784+(a<<3)>>3];b=0;return b|0}function qc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20912+(a<<3)>>3];b=0;return b|0}function rc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[21040+(a<<3)>>3];b=0;return b|0}function sc(a,c){a=a|0;c=c|0;var d=0;if(a>>>0>15){c=4;return c|0}d=Mc(7,0,a,((a|0)<0)<<31>>31)|0;d=Kd(d|0,H()|0,120,0)|0;a=H()|0;b[c>>2]=d|2;b[c+4>>2]=a;c=0;return c|0}function tc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+e[b>>3];l=+e[a>>3];j=+u(+((n-l)*.5));g=+e[b+8>>3];k=+e[a+8>>3];h=+u(+((g-k)*.5));i=+t(+l);m=+t(+n);h=j*j+h*(m*i*h);h=+z(+(+r(+h)),+(+r(+(1.0-h))))*2.0;j=+e[c>>3];n=+u(+((j-n)*.5));d=+e[c+8>>3];g=+u(+((d-g)*.5));f=+t(+j);g=n*n+g*(m*f*g);g=+z(+(+r(+g)),+(+r(+(1.0-g))))*2.0;j=+u(+((l-j)*.5));d=+u(+((k-d)*.5));d=j*j+d*(i*f*d);d=+z(+(+r(+d)),+(+r(+(1.0-d))))*2.0;f=(h+g+d)*.5;return +(+y(+(+r(+(+v(+(f*.5))*+v(+((f-h)*.5))*+v(+((f-g)*.5))*+v(+((f-d)*.5))))))*4.0)}function uc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0,h=0,i=0,j=0;j=T;T=T+192|0;h=j+168|0;i=j;g=Xb(a,c,h)|0;if(g|0){d=g;T=j;return d|0}if(Yb(a,c,i)|0)I(27795,27190,415,27199);c=b[i>>2]|0;if((c|0)>0){f=+tc(i+8|0,i+8+(((c|0)!=1&1)<<4)|0,h)+0.0;if((c|0)!=1){a=1;do{g=a;a=a+1|0;f=f+ +tc(i+8+(g<<4)|0,i+8+(((a|0)%(c|0)|0)<<4)|0,h)}while((a|0)<(c|0))}}else f=0.0;e[d>>3]=f;d=0;T=j;return d|0}function vc(a,b,c){a=a|0;b=b|0;c=c|0;a=uc(a,b,c)|0;if(a|0)return a|0;e[c>>3]=+e[c>>3]*6371.007180918475*6371.007180918475;return a|0}function wc(a,b,c){a=a|0;b=b|0;c=c|0;a=uc(a,b,c)|0;if(a|0)return a|0;e[c>>3]=+e[c>>3]*6371.007180918475*6371.007180918475*1.0e3*1.0e3;return a|0}function xc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=nb(a,c,i)|0;if(a|0){i=a;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+f)*+t(+l)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)<(c|0));e[d>>3]=h;i=0;T=j;return i|0}function yc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=nb(a,c,i)|0;if(a|0){i=a;h=+e[d>>3];h=h*6371.007180918475;e[d>>3]=h;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;h=0.0;h=h*6371.007180918475;e[d>>3]=h;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+l)*+t(+f)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)!=(c|0));e[d>>3]=h;i=0;m=h;m=m*6371.007180918475;e[d>>3]=m;T=j;return i|0}function zc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=nb(a,c,i)|0;if(a|0){i=a;h=+e[d>>3];h=h*6371.007180918475;h=h*1.0e3;e[d>>3]=h;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;h=0.0;h=h*6371.007180918475;h=h*1.0e3;e[d>>3]=h;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+l)*+t(+f)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)!=(c|0));e[d>>3]=h;i=0;m=h;m=m*6371.007180918475;m=m*1.0e3;e[d>>3]=m;T=j;return i|0}function Ac(a){a=a|0;var c=0,d=0,e=0;c=Dd(1,12)|0;if(!c)I(27280,27235,49,27293);d=a+4|0;e=b[d>>2]|0;if(e|0){e=e+8|0;b[e>>2]=c;b[d>>2]=c;return c|0}if(b[a>>2]|0)I(27310,27235,61,27333);e=a;b[e>>2]=c;b[d>>2]=c;return c|0}function Bc(a,c){a=a|0;c=c|0;var d=0,e=0;e=Bd(24)|0;if(!e)I(27347,27235,78,27361);b[e>>2]=b[c>>2];b[e+4>>2]=b[c+4>>2];b[e+8>>2]=b[c+8>>2];b[e+12>>2]=b[c+12>>2];b[e+16>>2]=0;c=a+4|0;d=b[c>>2]|0;if(d|0){b[d+16>>2]=e;b[c>>2]=e;return e|0}if(b[a>>2]|0)I(27376,27235,82,27361);b[a>>2]=e;b[c>>2]=e;return e|0}function Cc(a){a=a|0;var c=0,d=0,e=0,f=0;if(!a)return;e=1;while(1){c=b[a>>2]|0;if(c|0)do{d=b[c>>2]|0;if(d|0)do{f=d;d=b[d+16>>2]|0;Cd(f)}while((d|0)!=0);f=c;c=b[c+8>>2]|0;Cd(f)}while((c|0)!=0);c=a;a=b[a+8>>2]|0;if(!e)Cd(c);if(!a)break;else e=0}return}function Dc(a){a=a|0;var c=0,d=0,f=0,g=0,h=0.0,i=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0;g=a+8|0;if(b[g>>2]|0){K=1;return K|0}f=b[a>>2]|0;if(!f){K=0;return K|0}c=f;d=0;do{d=d+1|0;c=b[c+8>>2]|0}while((c|0)!=0);if(d>>>0<2){K=0;return K|0}H=Bd(d<<2)|0;if(!H)I(27396,27235,317,27415);G=Bd(d<<5)|0;if(!G)I(27437,27235,321,27415);b[a>>2]=0;z=a+4|0;b[z>>2]=0;b[g>>2]=0;d=0;F=0;y=0;n=0;a:while(1){m=b[f>>2]|0;if(m){h=0.0;i=m;do{k=+e[i+8>>3];c=i;i=b[i+16>>2]|0;l=(i|0)==0;g=l?m:i;j=+e[g+8>>3];if(+q(+(k-j))>3.141592653589793){K=14;break}h=h+(j-k)*(+e[c>>3]+ +e[g>>3])}while(!l);if((K|0)==14){K=0;h=0.0;c=m;do{x=+e[c+8>>3];E=c+16|0;D=b[E>>2]|0;D=(D|0)==0?m:D;w=+e[D+8>>3];h=h+(+e[c>>3]+ +e[D>>3])*((w<0.0?w+6.283185307179586:w)-(x<0.0?x+6.283185307179586:x));c=b[((c|0)==0?f:E)>>2]|0}while((c|0)!=0)}if(h>0.0){b[H+(F<<2)>>2]=f;F=F+1|0;g=y;c=n}else K=19}else K=19;if((K|0)==19){K=0;do if(!d)if(!n)if(!(b[a>>2]|0)){g=z;i=a;c=f;d=a;break}else{K=27;break a}else{g=z;i=n+8|0;c=f;d=a;break}else{c=d+8|0;if(b[c>>2]|0){K=21;break a}d=Dd(1,12)|0;if(!d){K=23;break a}b[c>>2]=d;g=d+4|0;i=d;c=n}while(0);b[i>>2]=f;b[g>>2]=f;i=G+(y<<5)|0;l=b[f>>2]|0;if(l){m=G+(y<<5)+8|0;e[m>>3]=1797693134862315708145274.0e284;n=G+(y<<5)+24|0;e[n>>3]=1797693134862315708145274.0e284;e[i>>3]=-1797693134862315708145274.0e284;o=G+(y<<5)+16|0;e[o>>3]=-1797693134862315708145274.0e284;u=1797693134862315708145274.0e284;v=-1797693134862315708145274.0e284;g=0;p=l;k=1797693134862315708145274.0e284;s=1797693134862315708145274.0e284;t=-1797693134862315708145274.0e284;j=-1797693134862315708145274.0e284;while(1){h=+e[p>>3];x=+e[p+8>>3];p=b[p+16>>2]|0;r=(p|0)==0;w=+e[(r?l:p)+8>>3];if(h<k){e[m>>3]=h;k=h}if(x<s){e[n>>3]=x;s=x}if(h>t)e[i>>3]=h;else h=t;if(x>j){e[o>>3]=x;j=x}u=x>0.0&x<u?x:u;v=x<0.0&x>v?x:v;g=g|+q(+(x-w))>3.141592653589793;if(r)break;else t=h}if(g){e[o>>3]=v;e[n>>3]=u}}else{b[i>>2]=0;b[i+4>>2]=0;b[i+8>>2]=0;b[i+12>>2]=0;b[i+16>>2]=0;b[i+20>>2]=0;b[i+24>>2]=0;b[i+28>>2]=0}g=y+1|0}E=f+8|0;f=b[E>>2]|0;b[E>>2]=0;if(!f){K=45;break}else{y=g;n=c}}if((K|0)==21)I(27213,27235,35,27247);else if((K|0)==23)I(27267,27235,37,27247);else if((K|0)==27)I(27310,27235,61,27333);else if((K|0)==45){b:do if((F|0)>0){E=(g|0)==0;C=g<<2;D=(a|0)==0;B=0;c=0;while(1){A=b[H+(B<<2)>>2]|0;if(!E){y=Bd(C)|0;if(!y){K=50;break}z=Bd(C)|0;if(!z){K=52;break}c:do if(!D){g=0;d=0;i=a;while(1){f=G+(g<<5)|0;if(Ec(b[i>>2]|0,f,b[A>>2]|0)|0){b[y+(d<<2)>>2]=i;b[z+(d<<2)>>2]=f;r=d+1|0}else r=d;i=b[i+8>>2]|0;if(!i)break;else{g=g+1|0;d=r}}if((r|0)>0){f=b[y>>2]|0;if((r|0)==1)d=f;else{o=0;p=-1;d=f;n=f;while(1){l=b[n>>2]|0;f=0;i=0;while(1){g=b[b[y+(i<<2)>>2]>>2]|0;if((g|0)==(l|0))m=f;else m=f+((Ec(g,b[z+(i<<2)>>2]|0,b[l>>2]|0)|0)&1)|0;i=i+1|0;if((i|0)==(r|0))break;else f=m}g=(m|0)>(p|0);d=g?n:d;f=o+1|0;if((f|0)==(r|0))break c;o=f;p=g?m:p;n=b[y+(f<<2)>>2]|0}}}else d=0}else d=0;while(0);Cd(y);Cd(z);if(d){g=d+4|0;f=b[g>>2]|0;if(!f){if(b[d>>2]|0){K=70;break}}else d=f+8|0;b[d>>2]=A;b[g>>2]=A}else K=73}else K=73;if((K|0)==73){K=0;c=b[A>>2]|0;if(c|0)do{z=c;c=b[c+16>>2]|0;Cd(z)}while((c|0)!=0);Cd(A);c=1}B=B+1|0;if((B|0)>=(F|0)){J=c;break b}}if((K|0)==50)I(27452,27235,249,27471);else if((K|0)==52)I(27490,27235,252,27471);else if((K|0)==70)I(27310,27235,61,27333)}else J=0;while(0);Cd(H);Cd(G);K=J;return K|0}return 0}function Ec(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if(!(Aa(c,d)|0)){a=0;return a|0}c=ya(c)|0;f=+e[d>>3];g=+e[d+8>>3];g=c&g<0.0?g+6.283185307179586:g;a=b[a>>2]|0;if(!a){a=0;return a|0}if(c){c=0;l=g;d=a;a:while(1){while(1){i=+e[d>>3];g=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];j=+e[m+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=b[d>>2]|0;if(!d){d=22;break a}}j=i<0.0?i+6.283185307179586:i;i=g<0.0?g+6.283185307179586:g;l=j==l|i==l?l+-2.220446049250313e-16:l;k=j+(i-j)*((f-h)/(k-h));if((k<0.0?k+6.283185307179586:k)>l)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}else{c=0;l=g;d=a;b:while(1){while(1){i=+e[d>>3];g=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];j=+e[m+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=b[d>>2]|0;if(!d){d=22;break b}}l=i==l|g==l?l+-2.220446049250313e-16:l;if(i+(g-i)*((f-h)/(k-h))>l)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}return 0}function Fc(c,d,e,f,g){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=T;T=T+32|0;t=u+16|0;s=u;h=Od(c|0,d|0,52)|0;H()|0;h=h&15;p=Od(e|0,f|0,52)|0;H()|0;if((h|0)!=(p&15|0)){t=12;T=u;return t|0}l=Od(c|0,d|0,45)|0;H()|0;l=l&127;m=Od(e|0,f|0,45)|0;H()|0;m=m&127;if(l>>>0>121|m>>>0>121){t=5;T=u;return t|0}p=(l|0)!=(m|0);if(p){j=ua(l,m)|0;if((j|0)==7){t=1;T=u;return t|0}k=ua(m,l)|0;if((k|0)==7)I(27514,27538,161,27548);else{q=j;i=k}}else{q=0;i=0}n=ma(l)|0;o=ma(m)|0;b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;do if(!q){Vb(e,f,t)|0;if((n|0)!=0&(o|0)!=0){if((m|0)!=(l|0))I(27621,27538,261,27548);i=Nb(c,d)|0;h=Nb(e,f)|0;if(!((i|0)==7|(h|0)==7))if(!(a[22e3+(i*7|0)+h>>0]|0)){i=b[21168+(i*28|0)+(h<<2)>>2]|0;if((i|0)>0){j=t+4|0;h=0;do{Ya(j);h=h+1|0}while((h|0)!=(i|0));r=51}else r=51}else h=1;else h=5}else r=51}else{m=b[4272+(l*28|0)+(q<<2)>>2]|0;j=(m|0)>0;if(!o)if(j){l=0;k=e;j=f;do{k=Rb(k,j)|0;j=H()|0;i=_a(i)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}else if(j){l=0;k=e;j=f;do{k=Qb(k,j)|0;j=H()|0;i=_a(i)|0;if((i|0)==1)i=_a(1)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}Vb(l,k,t)|0;if(!p)I(27563,27538,191,27548);j=(n|0)!=0;i=(o|0)!=0;if(j&i)I(27590,27538,192,27548);if(!j)if(i){i=Nb(l,k)|0;if((i|0)==7){h=5;break}if(a[22e3+(i*7|0)+m>>0]|0){h=1;break}l=0;k=b[21168+(m*28|0)+(i<<2)>>2]|0}else{l=0;k=0}else{i=Nb(c,d)|0;if((i|0)==7){h=5;break}if(a[22e3+(i*7|0)+q>>0]|0){h=1;break}k=b[21168+(i*28|0)+(q<<2)>>2]|0;l=k}if((l|k|0)<0)h=5;else{if((k|0)>0){j=t+4|0;i=0;do{Ya(j);i=i+1|0}while((i|0)!=(k|0))};b[s>>2]=0;b[s+4>>2]=0;b[s+8>>2]=0;Wa(s,q);if(h|0)while(1){if(!(Tb(h)|0))Va(s);else Ua(s);if((h|0)>1)h=h+-1|0;else break}if((l|0)>0){h=0;do{Ya(s);h=h+1|0}while((h|0)!=(l|0))}r=t+4|0;Ma(r,s,r);Ka(r);r=51}}while(0);if((r|0)==51){h=t+4|0;b[g>>2]=b[h>>2];b[g+4>>2]=b[h+4>>2];b[g+8>>2]=b[h+8>>2];h=0}t=h;T=u;return t|0}function Gc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;q=T;T=T+48|0;k=q+36|0;h=q+24|0;i=q+12|0;j=q;f=Od(a|0,c|0,52)|0;H()|0;f=f&15;n=Od(a|0,c|0,45)|0;H()|0;n=n&127;if(n>>>0>121){e=5;T=q;return e|0}l=ma(n)|0;Pd(f|0,0,52)|0;r=H()|0|134225919;g=e;b[g>>2]=-1;b[g+4>>2]=r;if(!f){f=Pa(d)|0;if((f|0)==7){r=1;T=q;return r|0}f=ta(n,f)|0;if((f|0)==127){r=1;T=q;return r|0}o=Pd(f|0,0,45)|0;p=H()|0;n=e;p=b[n+4>>2]&-1040385|p;r=e;b[r>>2]=b[n>>2]|o;b[r+4>>2]=p;r=0;T=q;return r|0};b[k>>2]=b[d>>2];b[k+4>>2]=b[d+4>>2];b[k+8>>2]=b[d+8>>2];d=f;while(1){g=d;d=d+-1|0;b[h>>2]=b[k>>2];b[h+4>>2]=b[k+4>>2];b[h+8>>2]=b[k+8>>2];if(!(Tb(g)|0)){f=Ra(k)|0;if(f|0){d=13;break};b[i>>2]=b[k>>2];b[i+4>>2]=b[k+4>>2];b[i+8>>2]=b[k+8>>2];Va(i)}else{f=Qa(k)|0;if(f|0){d=13;break};b[i>>2]=b[k>>2];b[i+4>>2]=b[k+4>>2];b[i+8>>2]=b[k+8>>2];Ua(i)}Na(h,i,j);Ka(j);f=e;t=b[f>>2]|0;f=b[f+4>>2]|0;u=(15-g|0)*3|0;s=Pd(7,0,u|0)|0;f=f&~(H()|0);u=Pd(Pa(j)|0,0,u|0)|0;f=H()|0|f;r=e;b[r>>2]=u|t&~s;b[r+4>>2]=f;if((g|0)<=1){d=14;break}}a:do if((d|0)!=13)if((d|0)==14)if(((b[k>>2]|0)<=1?(b[k+4>>2]|0)<=1:0)?(b[k+8>>2]|0)<=1:0){d=Pa(k)|0;f=ta(n,d)|0;if((f|0)==127)j=0;else j=ma(f)|0;b:do if(!d)if((l|0)!=0&(j|0)!=0){d=Nb(a,c)|0;g=e;g=Nb(b[g>>2]|0,b[g+4>>2]|0)|0;if((d|0)==7|(g|0)==7){f=5;break a}g=b[21376+(d*28|0)+(g<<2)>>2]|0;if((g|0)<0){f=5;break a}if(!g)d=59;else{i=e;d=0;h=b[i>>2]|0;i=b[i+4>>2]|0;do{h=Pb(h,i)|0;i=H()|0;u=e;b[u>>2]=h;b[u+4>>2]=i;d=d+1|0}while((d|0)<(g|0));d=58}}else d=58;else{if(l){f=Nb(a,c)|0;if((f|0)==7){f=5;break a}g=b[21376+(f*28|0)+(d<<2)>>2]|0;if((g|0)>0){f=d;d=0;do{f=Za(f)|0;d=d+1|0}while((d|0)!=(g|0))}else f=d;if((f|0)==1){f=9;break a}d=ta(n,f)|0;if((d|0)==127)I(27648,27538,411,27678);if(!(ma(d)|0)){p=d;o=g;m=f}else I(27693,27538,412,27678)}else{p=f;o=0;m=d}i=b[4272+(n*28|0)+(m<<2)>>2]|0;if((i|0)<=-1)I(27724,27538,419,27678);if(!j){if((o|0)<0){f=5;break a}if(o|0){g=e;f=0;d=b[g>>2]|0;g=b[g+4>>2]|0;do{d=Pb(d,g)|0;g=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=g;f=f+1|0}while((f|0)<(o|0))}if((i|0)<=0){f=p;d=58;break}g=e;f=0;d=b[g>>2]|0;g=b[g+4>>2]|0;while(1){d=Pb(d,g)|0;g=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=g;f=f+1|0;if((f|0)==(i|0)){f=p;d=58;break b}}}h=ua(p,n)|0;if((h|0)==7)I(27514,27538,428,27678);f=e;d=b[f>>2]|0;f=b[f+4>>2]|0;if((i|0)>0){g=0;do{d=Pb(d,f)|0;f=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=f;g=g+1|0}while((g|0)!=(i|0))}f=Nb(d,f)|0;if((f|0)==7)I(27795,27538,440,27678);d=na(p)|0;d=b[(d?21792:21584)+(h*28|0)+(f<<2)>>2]|0;if((d|0)<0)I(27795,27538,454,27678);if(!d){f=p;d=58}else{h=e;f=0;g=b[h>>2]|0;h=b[h+4>>2]|0;do{g=Ob(g,h)|0;h=H()|0;u=e;b[u>>2]=g;b[u+4>>2]=h;f=f+1|0}while((f|0)<(d|0));f=p;d=58}}while(0);if((d|0)==58)if(j)d=59;if((d|0)==59){u=e;if((Nb(b[u>>2]|0,b[u+4>>2]|0)|0)==1){f=9;break}}u=e;s=b[u>>2]|0;u=b[u+4>>2]&-1040385;t=Pd(f|0,0,45)|0;u=u|(H()|0);f=e;b[f>>2]=s|t;b[f+4>>2]=u;f=0}else f=1;while(0);u=f;T=q;return u|0}function Hc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=T;T=T+16|0;g=h;if(!e){a=Fc(a,b,c,d,g)|0;if(!a){cb(g,f);a=0}}else a=15;T=h;return a|0}function Ic(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=T;T=T+16|0;f=g;if(!d){c=db(c,f)|0;if(!c)c=Gc(a,b,f,e)|0}else c=15;T=g;return c|0}function Jc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=T;T=T+32|0;h=j+12|0;i=j;g=Fc(a,c,a,c,h)|0;if(g|0){i=g;T=j;return i|0}a=Fc(a,c,d,e,i)|0;if(a|0){i=a;T=j;return i|0}h=bb(h,i)|0;i=f;b[i>>2]=h;b[i+4>>2]=((h|0)<0)<<31>>31;i=0;T=j;return i|0}function Kc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=T;T=T+32|0;h=j+12|0;i=j;g=Fc(a,c,a,c,h)|0;if(!g){g=Fc(a,c,d,e,i)|0;if(!g){e=bb(h,i)|0;e=Ed(e|0,((e|0)<0)<<31>>31|0,1,0)|0;h=H()|0;i=f;b[i>>2]=e;b[i+4>>2]=h;i=0;T=j;return i|0}}i=g;T=j;return i|0}function Lc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0.0,k=0,l=0.0,m=0,n=0,o=0,p=0,r=0.0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0;z=T;T=T+48|0;x=z+24|0;h=z+12|0;y=z;g=Fc(a,c,a,c,x)|0;if(!g){g=Fc(a,c,d,e,h)|0;if(!g){v=bb(x,h)|0;w=((v|0)<0)<<31>>31;b[x>>2]=0;b[x+4>>2]=0;b[x+8>>2]=0;b[h>>2]=0;b[h+4>>2]=0;b[h+8>>2]=0;if(Fc(a,c,a,c,x)|0)I(27795,27538,692,27747);if(Fc(a,c,d,e,h)|0)I(27795,27538,697,27747);eb(x);eb(h);l=(v|0)==0?0.0:1.0/+(v|0);d=b[x>>2]|0;r=l*+((b[h>>2]|0)-d|0);s=x+4|0;e=b[s>>2]|0;t=l*+((b[h+4>>2]|0)-e|0);u=x+8|0;g=b[u>>2]|0;l=l*+((b[h+8>>2]|0)-g|0);b[y>>2]=d;m=y+4|0;b[m>>2]=e;n=y+8|0;b[n>>2]=g;a:do if((v|0)<0)g=0;else{o=0;p=0;while(1){j=+(p>>>0)+4294967296.0*+(o|0);A=r*j+ +(d|0);i=t*j+ +(e|0);j=l*j+ +(g|0);d=~~+Td(+A);h=~~+Td(+i);g=~~+Td(+j);A=+q(+(+(d|0)-A));i=+q(+(+(h|0)-i));j=+q(+(+(g|0)-j));do if(!(A>i&A>j)){k=0-d|0;if(i>j){e=k-g|0;break}else{e=h;g=k-h|0;break}}else{d=0-(h+g)|0;e=h}while(0);b[y>>2]=d;b[m>>2]=e;b[n>>2]=g;fb(y);g=Gc(a,c,y,f+(p<<3)|0)|0;if(g|0)break a;if(!((o|0)<(w|0)|(o|0)==(w|0)&p>>>0<v>>>0)){g=0;break a}d=Ed(p|0,o|0,1,0)|0;e=H()|0;o=e;p=d;d=b[x>>2]|0;e=b[s>>2]|0;g=b[u>>2]|0}}while(0);y=g;T=z;return y|0}}y=g;T=z;return y|0}function Mc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;if((c|0)==0&(d|0)==0){e=0;f=1;G(e|0);return f|0}f=a;e=b;a=1;b=0;do{g=(c&1|0)==0&0==0;a=Kd((g?1:f)|0,(g?0:e)|0,a|0,b|0)|0;b=H()|0;c=Nd(c|0,d|0,1)|0;d=H()|0;f=Kd(f|0,e|0,f|0,e|0)|0;e=H()|0}while(!((c|0)==0&(d|0)==0));G(b|0);return a|0}function Nc(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+16|0;h=j;i=Od(a|0,c|0,52)|0;H()|0;i=i&15;do if(!i){g=Od(a|0,c|0,45)|0;H()|0;g=g&127;if(g>>>0>121){i=5;T=j;return i|0}else{h=22064+(g<<5)|0;b[d>>2]=b[h>>2];b[d+4>>2]=b[h+4>>2];b[d+8>>2]=b[h+8>>2];b[d+12>>2]=b[h+12>>2];b[d+16>>2]=b[h+16>>2];b[d+20>>2]=b[h+20>>2];b[d+24>>2]=b[h+24>>2];b[d+28>>2]=b[h+28>>2];break}}else{g=Xb(a,c,h)|0;if(!g){l=+e[h>>3];k=1.0/+t(+l);m=+e[25968+(i<<3)>>3];e[d>>3]=l+m;e[d+8>>3]=l-m;l=+e[h+8>>3];k=m*k;e[d+16>>3]=k+l;e[d+24>>3]=l-k;break}i=g;T=j;return i|0}while(0);Ha(d,f?1.4:1.1);f=26096+(i<<3)|0;if((b[f>>2]|0)==(a|0)?(b[f+4>>2]|0)==(c|0):0)e[d>>3]=1.5707963267948966;i=26224+(i<<3)|0;if((b[i>>2]|0)==(a|0)?(b[i+4>>2]|0)==(c|0):0)e[d+8>>3]=-1.5707963267948966;if(!(+e[d>>3]==1.5707963267948966)?!(+e[d+8>>3]==-1.5707963267948966):0){i=0;T=j;return i|0}e[d+16>>3]=3.141592653589793;e[d+24>>3]=-3.141592653589793;i=0;T=j;return i|0}function Oc(c,d,e,f){c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=T;T=T+48|0;i=l+32|0;h=l+40|0;j=l;Cb(i,0,0,0);k=b[i>>2]|0;i=b[i+4>>2]|0;do if(e>>>0<=15){g=Vc(f)|0;if(g|0){f=j;b[f>>2]=0;b[f+4>>2]=0;b[j+8>>2]=g;b[j+12>>2]=-1;f=j+16|0;k=j+29|0;b[f>>2]=0;b[f+4>>2]=0;b[f+8>>2]=0;a[f+12>>0]=0;a[k>>0]=a[h>>0]|0;a[k+1>>0]=a[h+1>>0]|0;a[k+2>>0]=a[h+2>>0]|0;break}g=Dd((b[d+8>>2]|0)+1|0,32)|0;if(!g){f=j;b[f>>2]=0;b[f+4>>2]=0;b[j+8>>2]=13;b[j+12>>2]=-1;f=j+16|0;k=j+29|0;b[f>>2]=0;b[f+4>>2]=0;b[f+8>>2]=0;a[f+12>>0]=0;a[k>>0]=a[h>>0]|0;a[k+1>>0]=a[h+1>>0]|0;a[k+2>>0]=a[h+2>>0]|0;break}else{Wc(d,g);m=j;b[m>>2]=k;b[m+4>>2]=i;b[j+8>>2]=0;b[j+12>>2]=e;b[j+16>>2]=f;b[j+20>>2]=d;b[j+24>>2]=g;a[j+28>>0]=0;k=j+29|0;a[k>>0]=a[h>>0]|0;a[k+1>>0]=a[h+1>>0]|0;a[k+2>>0]=a[h+2>>0]|0;break}}else{k=j;b[k>>2]=0;b[k+4>>2]=0;b[j+8>>2]=4;b[j+12>>2]=-1;k=j+16|0;m=j+29|0;b[k>>2]=0;b[k+4>>2]=0;b[k+8>>2]=0;a[k+12>>0]=0;a[m>>0]=a[h>>0]|0;a[m+1>>0]=a[h+1>>0]|0;a[m+2>>0]=a[h+2>>0]|0}while(0);Pc(j);b[c>>2]=b[j>>2];b[c+4>>2]=b[j+4>>2];b[c+8>>2]=b[j+8>>2];b[c+12>>2]=b[j+12>>2];b[c+16>>2]=b[j+16>>2];b[c+20>>2]=b[j+20>>2];b[c+24>>2]=b[j+24>>2];b[c+28>>2]=b[j+28>>2];T=l;return}function Pc(c){c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=T;T=T+336|0;p=w+168|0;q=w;f=c;e=b[f>>2]|0;f=b[f+4>>2]|0;if((e|0)==0&(f|0)==0){T=w;return}d=c+28|0;if(!(a[d>>0]|0))a[d>>0]=1;else{e=Qc(e,f)|0;f=H()|0}v=c+20|0;if(!(b[b[v>>2]>>2]|0)){d=c+24|0;e=b[d>>2]|0;if(e|0)Cd(e);u=c;b[u>>2]=0;b[u+4>>2]=0;b[c+8>>2]=0;b[v>>2]=0;b[c+12>>2]=-1;b[c+16>>2]=0;b[d>>2]=0;T=w;return}u=c+16|0;d=b[u>>2]|0;g=d&15;a:do if(!((e|0)==0&(f|0)==0)){r=c+12|0;n=(g|0)==3;m=d&255;k=(g|1|0)==3;o=c+24|0;l=(g+-1|0)>>>0<3;i=(g|2|0)==3;j=q+8|0;b:while(1){h=Od(e|0,f|0,52)|0;H()|0;h=h&15;if((h|0)==(b[r>>2]|0)){switch(m&15){case 0:case 2:case 3:{g=Xb(e,f,p)|0;if(g|0){s=15;break b}if(Xc(b[v>>2]|0,b[o>>2]|0,p)|0){s=19;break b}break}default:{}}if(k?(g=b[(b[v>>2]|0)+4>>2]|0,b[p>>2]=b[g>>2],b[p+4>>2]=b[g+4>>2],b[p+8>>2]=b[g+8>>2],b[p+12>>2]=b[g+12>>2],Aa(26832,p)|0):0){if(Ub(b[(b[v>>2]|0)+4>>2]|0,h,q)|0){s=25;break}g=q;if((b[g>>2]|0)==(e|0)?(b[g+4>>2]|0)==(f|0):0){s=29;break}}if(l){g=Yb(e,f,p)|0;if(g|0){s=32;break}if(Nc(e,f,q,0)|0){s=36;break}if(i?Yc(b[v>>2]|0,b[o>>2]|0,p,q)|0:0){s=42;break}if(k?_c(b[v>>2]|0,b[o>>2]|0,p,q)|0:0){s=42;break}}if(n){d=Nc(e,f,p,1)|0;g=b[o>>2]|0;if(d|0){s=45;break}if(Ba(g,p)|0){Ea(q,p);if(Da(p,b[o>>2]|0)|0){s=53;break}if(Xc(b[v>>2]|0,b[o>>2]|0,j)|0){s=53;break}if(_c(b[v>>2]|0,b[o>>2]|0,q,p)|0){s=53;break}}}}do if((h|0)<(b[r>>2]|0)){d=Nc(e,f,p,1)|0;g=b[o>>2]|0;if(d|0){s=58;break b}if(!(Ba(g,p)|0)){s=73;break}if(Da(b[o>>2]|0,p)|0?(Ea(q,p),Yc(b[v>>2]|0,b[o>>2]|0,q,p)|0):0){s=65;break b}e=Ib(e,f,h+1|0,q)|0;if(e|0){s=67;break b}f=q;e=b[f>>2]|0;f=b[f+4>>2]|0}else s=73;while(0);if((s|0)==73){s=0;e=Qc(e,f)|0;f=H()|0}if((e|0)==0&(f|0)==0){t=o;break a}}switch(s|0){case 15:{d=b[o>>2]|0;if(d|0)Cd(d);s=c;b[s>>2]=0;b[s+4>>2]=0;b[v>>2]=0;b[r>>2]=-1;b[u>>2]=0;b[o>>2]=0;b[c+8>>2]=g;s=20;break}case 19:{b[c>>2]=e;b[c+4>>2]=f;s=20;break}case 25:{I(27795,27761,470,27772);break}case 29:{b[c>>2]=e;b[c+4>>2]=f;T=w;return}case 32:{d=b[o>>2]|0;if(d|0)Cd(d);t=c;b[t>>2]=0;b[t+4>>2]=0;b[v>>2]=0;b[r>>2]=-1;b[u>>2]=0;b[o>>2]=0;b[c+8>>2]=g;T=w;return}case 36:{I(27795,27761,493,27772);break}case 42:{b[c>>2]=e;b[c+4>>2]=f;T=w;return}case 45:{if(g|0)Cd(g);s=c;b[s>>2]=0;b[s+4>>2]=0;b[v>>2]=0;b[r>>2]=-1;b[u>>2]=0;b[o>>2]=0;b[c+8>>2]=d;s=55;break}case 53:{b[c>>2]=e;b[c+4>>2]=f;s=55;break}case 58:{if(g|0)Cd(g);s=c;b[s>>2]=0;b[s+4>>2]=0;b[v>>2]=0;b[r>>2]=-1;b[u>>2]=0;b[o>>2]=0;b[c+8>>2]=d;s=71;break}case 65:{b[c>>2]=e;b[c+4>>2]=f;s=71;break}case 67:{d=b[o>>2]|0;if(d|0)Cd(d);t=c;b[t>>2]=0;b[t+4>>2]=0;b[v>>2]=0;b[r>>2]=-1;b[u>>2]=0;b[o>>2]=0;b[c+8>>2]=e;T=w;return}}if((s|0)==20){T=w;return}else if((s|0)==55){T=w;return}else if((s|0)==71){T=w;return}}else t=c+24|0;while(0);d=b[t>>2]|0;if(d|0)Cd(d);s=c;b[s>>2]=0;b[s+4>>2]=0;b[c+8>>2]=0;b[v>>2]=0;b[c+12>>2]=-1;b[u>>2]=0;b[t>>2]=0;T=w;return}function Qc(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=T;T=T+16|0;l=m;e=Od(a|0,c|0,52)|0;H()|0;e=e&15;d=Od(a|0,c|0,45)|0;H()|0;do if(e){while(1){d=Pd(e+4095|0,0,52)|0;f=H()|0|c&-15728641;g=(15-e|0)*3|0;h=Pd(7,0,g|0)|0;i=H()|0;d=d|a|h;f=f|i;j=Od(a|0,c|0,g|0)|0;H()|0;j=j&7;e=e+-1|0;if(j>>>0<6)break;if(!e){k=4;break}else{c=f;a=d}}if((k|0)==4){d=Od(d|0,f|0,45)|0;H()|0;break}l=(j|0)==0&(Fb(d,f)|0)!=0;l=Pd((l?2:1)+j|0,0,g|0)|0;k=H()|0|c&~i;l=l|a&~h;G(k|0);T=m;return l|0}while(0);d=d&127;if(d>>>0>120){k=0;l=0;G(k|0);T=m;return l|0}Cb(l,0,d+1|0,0);k=b[l+4>>2]|0;l=b[l>>2]|0;G(k|0);T=m;return l|0}function Rc(a,c,d,e,f,g){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=T;T=T+160|0;m=r+80|0;i=r+64|0;n=r+112|0;q=r;Oc(m,a,c,d);k=m;dc(i,b[k>>2]|0,b[k+4>>2]|0,c);k=i;j=b[k>>2]|0;k=b[k+4>>2]|0;h=b[m+8>>2]|0;o=n+4|0;b[o>>2]=b[m>>2];b[o+4>>2]=b[m+4>>2];b[o+8>>2]=b[m+8>>2];b[o+12>>2]=b[m+12>>2];b[o+16>>2]=b[m+16>>2];b[o+20>>2]=b[m+20>>2];b[o+24>>2]=b[m+24>>2];b[o+28>>2]=b[m+28>>2];o=q;b[o>>2]=j;b[o+4>>2]=k;o=q+8|0;b[o>>2]=h;a=q+12|0;c=n;d=a+36|0;do{b[a>>2]=b[c>>2];a=a+4|0;c=c+4|0}while((a|0)<(d|0));n=q+48|0;b[n>>2]=b[i>>2];b[n+4>>2]=b[i+4>>2];b[n+8>>2]=b[i+8>>2];b[n+12>>2]=b[i+12>>2];if((j|0)==0&(k|0)==0){q=h;T=r;return q|0}d=q+16|0;l=q+24|0;m=q+28|0;h=0;i=0;c=j;a=k;do{if(!((h|0)<(f|0)|(h|0)==(f|0)&i>>>0<e>>>0)){p=4;break}k=i;i=Ed(i|0,h|0,1,0)|0;h=H()|0;k=g+(k<<3)|0;b[k>>2]=c;b[k+4>>2]=a;fc(n);a=n;c=b[a>>2]|0;a=b[a+4>>2]|0;if((c|0)==0&(a|0)==0){Pc(d);c=d;a=b[c>>2]|0;c=b[c+4>>2]|0;if((a|0)==0&(c|0)==0){p=10;break}ec(a,c,b[m>>2]|0,n);a=n;c=b[a>>2]|0;a=b[a+4>>2]|0}k=q;b[k>>2]=c;b[k+4>>2]=a}while(!((c|0)==0&(a|0)==0));if((p|0)==4){a=q+40|0;c=b[a>>2]|0;if(c|0)Cd(c);p=q+16|0;b[p>>2]=0;b[p+4>>2]=0;b[l>>2]=0;b[q+36>>2]=0;b[m>>2]=-1;b[q+32>>2]=0;b[a>>2]=0;ec(0,0,0,n);b[q>>2]=0;b[q+4>>2]=0;b[o>>2]=0;q=14;T=r;return q|0}else if((p|0)==10){b[q>>2]=0;b[q+4>>2]=0;b[o>>2]=b[l>>2]}q=b[o>>2]|0;T=r;return q|0}function Sc(c,d,f,g){c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,r=0;o=T;T=T+48|0;l=o+32|0;k=o+40|0;m=o;if(!(b[c>>2]|0)){n=g;b[n>>2]=0;b[n+4>>2]=0;n=0;T=o;return n|0}Cb(l,0,0,0);j=l;h=b[j>>2]|0;j=b[j+4>>2]|0;do if(d>>>0>15){n=m;b[n>>2]=0;b[n+4>>2]=0;b[m+8>>2]=4;b[m+12>>2]=-1;n=m+16|0;f=m+29|0;b[n>>2]=0;b[n+4>>2]=0;b[n+8>>2]=0;a[n+12>>0]=0;a[f>>0]=a[k>>0]|0;a[f+1>>0]=a[k+1>>0]|0;a[f+2>>0]=a[k+2>>0]|0;f=4;n=9}else{f=Vc(f)|0;if(f|0){l=m;b[l>>2]=0;b[l+4>>2]=0;b[m+8>>2]=f;b[m+12>>2]=-1;l=m+16|0;n=m+29|0;b[l>>2]=0;b[l+4>>2]=0;b[l+8>>2]=0;a[l+12>>0]=0;a[n>>0]=a[k>>0]|0;a[n+1>>0]=a[k+1>>0]|0;a[n+2>>0]=a[k+2>>0]|0;n=9;break}f=Dd((b[c+8>>2]|0)+1|0,32)|0;if(!f){n=m;b[n>>2]=0;b[n+4>>2]=0;b[m+8>>2]=13;b[m+12>>2]=-1;n=m+16|0;f=m+29|0;b[n>>2]=0;b[n+4>>2]=0;b[n+8>>2]=0;a[n+12>>0]=0;a[f>>0]=a[k>>0]|0;a[f+1>>0]=a[k+1>>0]|0;a[f+2>>0]=a[k+2>>0]|0;f=13;n=9;break}Wc(c,f);r=m;b[r>>2]=h;b[r+4>>2]=j;j=m+8|0;b[j>>2]=0;b[m+12>>2]=d;b[m+20>>2]=c;b[m+24>>2]=f;a[m+28>>0]=0;h=m+29|0;a[h>>0]=a[k>>0]|0;a[h+1>>0]=a[k+1>>0]|0;a[h+2>>0]=a[k+2>>0]|0;b[m+16>>2]=3;p=+za(f);p=p*+xa(f);i=+q(+(+e[f>>3]));i=p/+t(+(+Sd(+i,+(+q(+(+e[f+8>>3]))))))*6371.007180918475*6371.007180918475;h=m+12|0;f=b[h>>2]|0;a:do if((f|0)>0)do{oc(f+-1|0,l)|0;if(!(i/+e[l>>3]>10.0))break a;r=b[h>>2]|0;f=r+-1|0;b[h>>2]=f}while((r|0)>1);while(0);Pc(m);h=g;b[h>>2]=0;b[h+4>>2]=0;h=m;f=b[h>>2]|0;h=b[h+4>>2]|0;if(!((f|0)==0&(h|0)==0))do{Eb(f,h,d,l)|0;k=l;c=g;k=Ed(b[c>>2]|0,b[c+4>>2]|0,b[k>>2]|0,b[k+4>>2]|0)|0;c=H()|0;r=g;b[r>>2]=k;b[r+4>>2]=c;Pc(m);r=m;f=b[r>>2]|0;h=b[r+4>>2]|0}while(!((f|0)==0&(h|0)==0));f=b[j>>2]|0}while(0);r=f;T=o;return r|0}function Tc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0;if(!(Aa(c,d)|0)){o=0;return o|0}c=ya(c)|0;f=+e[d>>3];g=+e[d+8>>3];g=c&g<0.0?g+6.283185307179586:g;o=b[a>>2]|0;if((o|0)<=0){o=0;return o|0}n=b[a+4>>2]|0;if(c){c=0;m=g;d=-1;a=0;a:while(1){l=a;while(1){i=+e[n+(l<<4)>>3];g=+e[n+(l<<4)+8>>3];a=(d+2|0)%(o|0)|0;h=+e[n+(a<<4)>>3];j=+e[n+(a<<4)+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=l+1|0;if((d|0)>=(o|0)){d=22;break a}else{a=l;l=d;d=a}}j=i<0.0?i+6.283185307179586:i;i=g<0.0?g+6.283185307179586:g;m=j==m|i==m?m+-2.220446049250313e-16:m;k=j+(i-j)*((f-h)/(k-h));if((k<0.0?k+6.283185307179586:k)>m)c=c^1;a=l+1|0;if((a|0)>=(o|0)){d=22;break}else d=l}if((d|0)==22)return c|0}else{c=0;m=g;d=-1;a=0;b:while(1){l=a;while(1){i=+e[n+(l<<4)>>3];g=+e[n+(l<<4)+8>>3];a=(d+2|0)%(o|0)|0;h=+e[n+(a<<4)>>3];j=+e[n+(a<<4)+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=l+1|0;if((d|0)>=(o|0)){d=22;break b}else{a=l;l=d;d=a}}m=i==m|g==m?m+-2.220446049250313e-16:m;if(i+(g-i)*((f-h)/(k-h))>m)c=c^1;a=l+1|0;if((a|0)>=(o|0)){d=22;break}else d=l}if((d|0)==22)return c|0}return 0}function Uc(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,r=0,s=0,t=0,u=0,v=0;r=b[a>>2]|0;if(!r){b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0;return}s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)<=0)return;o=b[a+4>>2]|0;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;n=0;a=-1;h=1797693134862315708145274.0e284;i=1797693134862315708145274.0e284;k=-1797693134862315708145274.0e284;f=-1797693134862315708145274.0e284;p=0;while(1){d=+e[o+(p<<4)>>3];j=+e[o+(p<<4)+8>>3];a=a+2|0;g=+e[o+(((a|0)==(r|0)?0:a)<<4)+8>>3];if(d<h){e[s>>3]=d;h=d}if(j<i){e[t>>3]=j;i=j}if(d>k)e[c>>3]=d;else d=k;if(j>f){e[u>>3]=j;f=j}l=j>0.0&j<l?j:l;m=j<0.0&j>m?j:m;n=n|+q(+(j-g))>3.141592653589793;a=p+1|0;if((a|0)==(r|0))break;else{v=p;k=d;p=a;a=v}}if(!n)return;e[u>>3]=m;e[t>>3]=l;return}function Vc(a){a=a|0;return (a>>>0<4?0:15)|0}function Wc(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;r=b[a>>2]|0;if(r){s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)>0){g=b[a+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;f=0;d=-1;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;v=0;while(1){h=+e[g+(v<<4)>>3];m=+e[g+(v<<4)+8>>3];z=d+2|0;j=+e[g+(((z|0)==(r|0)?0:z)<<4)+8>>3];if(h<k){e[s>>3]=h;k=h}if(m<l){e[t>>3]=m;l=m}if(h>n)e[c>>3]=h;else h=n;if(m>i){e[u>>3]=m;i=m}o=m>0.0&m<o?m:o;p=m<0.0&m>p?m:p;f=f|+q(+(m-j))>3.141592653589793;d=v+1|0;if((d|0)==(r|0))break;else{z=v;n=h;v=d;d=z}}if(f){e[u>>3]=p;e[t>>3]=o}}}else{b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0}z=a+8|0;d=b[z>>2]|0;if((d|0)<=0)return;y=a+12|0;x=0;do{g=b[y>>2]|0;f=x;x=x+1|0;t=c+(x<<5)|0;u=b[g+(f<<3)>>2]|0;if(u){v=c+(x<<5)+8|0;e[v>>3]=1797693134862315708145274.0e284;a=c+(x<<5)+24|0;e[a>>3]=1797693134862315708145274.0e284;e[t>>3]=-1797693134862315708145274.0e284;w=c+(x<<5)+16|0;e[w>>3]=-1797693134862315708145274.0e284;if((u|0)>0){r=b[g+(f<<3)+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;g=0;f=-1;s=0;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;while(1){h=+e[r+(s<<4)>>3];n=+e[r+(s<<4)+8>>3];f=f+2|0;j=+e[r+(((f|0)==(u|0)?0:f)<<4)+8>>3];if(h<k){e[v>>3]=h;k=h}if(n<l){e[a>>3]=n;l=n}if(h>m)e[t>>3]=h;else h=m;if(n>i){e[w>>3]=n;i=n}o=n>0.0&n<o?n:o;p=n<0.0&n>p?n:p;g=g|+q(+(n-j))>3.141592653589793;f=s+1|0;if((f|0)==(u|0))break;else{A=s;s=f;m=h;f=A}}if(g){e[w>>3]=p;e[a>>3]=o}}}else{b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;b[t+16>>2]=0;b[t+20>>2]=0;b[t+24>>2]=0;b[t+28>>2]=0;d=b[z>>2]|0}}while((x|0)<(d|0));return}function Xc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(!(Tc(a,c,d)|0)){f=0;return f|0}f=a+8|0;if((b[f>>2]|0)<=0){f=1;return f|0}e=a+12|0;a=0;while(1){g=a;a=a+1|0;if(Tc((b[e>>2]|0)+(g<<3)|0,c+(a<<5)|0,d)|0){a=0;e=6;break}if((a|0)>=(b[f>>2]|0)){a=1;e=6;break}}if((e|0)==6)return a|0;return 0}function Yc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=T;T=T+16|0;i=k;h=d+8|0;if(!(Tc(a,c,h)|0)){j=0;T=k;return j|0}j=a+8|0;a:do if((b[j>>2]|0)>0){g=a+12|0;f=0;while(1){l=f;f=f+1|0;if(Tc((b[g>>2]|0)+(l<<3)|0,c+(f<<5)|0,h)|0){f=0;break}if((f|0)>=(b[j>>2]|0))break a}T=k;return f|0}while(0);if(Zc(a,c,d,e)|0){l=0;T=k;return l|0}b[i>>2]=b[d>>2];b[i+4>>2]=h;f=b[j>>2]|0;b:do if((f|0)>0){a=a+12|0;h=0;g=f;while(1){f=b[a>>2]|0;if((b[f+(h<<3)>>2]|0)>0){if(Tc(i,e,b[f+(h<<3)+4>>2]|0)|0){f=0;break b}f=h+1|0;if(Zc((b[a>>2]|0)+(h<<3)|0,c+(f<<5)|0,d,e)|0){f=0;break b}g=b[j>>2]|0}else f=h+1|0;if((f|0)<(g|0))h=f;else{f=1;break}}}else f=1;while(0);l=f;T=k;return l|0}function Zc(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0,z=0,A=0;y=T;T=T+176|0;u=y+172|0;g=y+168|0;v=y;if(!(Ba(c,f)|0)){a=0;T=y;return a|0}Ca(c,f,u,g);Ud(v|0,d|0,168)|0;if((b[d>>2]|0)>0){c=0;do{z=v+8+(c<<4)+8|0;t=+ic(+e[z>>3],b[g>>2]|0);e[z>>3]=t;c=c+1|0}while((c|0)<(b[d>>2]|0))}r=+e[f>>3];s=+e[f+8>>3];t=+ic(+e[f+16>>3],b[g>>2]|0);p=+ic(+e[f+24>>3],b[g>>2]|0);a:do if((b[a>>2]|0)>0){f=a+4|0;g=b[v>>2]|0;if((g|0)<=0){c=0;while(1){c=c+1|0;if((c|0)>=(b[a>>2]|0)){c=0;break a}}}d=0;while(1){c=b[f>>2]|0;o=+e[c+(d<<4)>>3];q=+ic(+e[c+(d<<4)+8>>3],b[u>>2]|0);c=b[f>>2]|0;d=d+1|0;z=(d|0)%(b[a>>2]|0)|0;h=+e[c+(z<<4)>>3];i=+ic(+e[c+(z<<4)+8>>3],b[u>>2]|0);if(((!(o>=r)|!(h>=r)?!(o<=s)|!(h<=s):0)?!(q<=p)|!(i<=p):0)?!(q>=t)|!(i>=t):0){n=h-o;l=i-q;c=0;do{A=c;c=c+1|0;z=(c|0)==(g|0)?0:c;h=+e[v+8+(A<<4)+8>>3];i=+e[v+8+(z<<4)+8>>3]-h;j=+e[v+8+(A<<4)>>3];k=+e[v+8+(z<<4)>>3]-j;m=n*i-l*k;if((m!=0.0?(w=q-h,x=o-j,k=(w*k-i*x)/m,!(k<0.0|k>1.0)):0)?(m=(n*w-l*x)/m,m>=0.0&m<=1.0):0){c=1;break a}}while((c|0)<(g|0))}if((d|0)>=(b[a>>2]|0)){c=0;break}}}else c=0;while(0);A=c;T=y;return A|0}function _c(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(Zc(a,c,d,e)|0){g=1;return g|0}g=a+8|0;if((b[g>>2]|0)<=0){g=0;return g|0}f=a+12|0;a=0;while(1){h=a;a=a+1|0;if(Zc((b[f>>2]|0)+(h<<3)|0,c+(a<<5)|0,d,e)|0){a=1;f=6;break}if((a|0)>=(b[g>>2]|0)){a=0;f=6;break}}if((f|0)==6)return a|0;return 0}function $c(){return 8}function ad(){return 16}function bd(){return 168}function cd(){return 8}function dd(){return 16}function ed(){return 12}function fd(){return 8}function gd(a){a=a|0;return +(+((b[a>>2]|0)>>>0)+4294967296.0*+(b[a+4>>2]|0))}function hd(a){a=a|0;var b=0.0,c=0.0;c=+e[a>>3];b=+e[a+8>>3];return +(+r(+(c*c+b*b)))}function id(a,b,c,d,f){a=a|0;b=b|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;k=+e[a>>3];j=+e[b>>3]-k;i=+e[a+8>>3];h=+e[b+8>>3]-i;m=+e[c>>3];g=+e[d>>3]-m;n=+e[c+8>>3];l=+e[d+8>>3]-n;g=(g*(i-n)-(k-m)*l)/(j*l-h*g);e[f>>3]=k+j*g;e[f+8>>3]=i+h*g;return}function jd(a,b){a=a|0;b=b|0;if(!(+q(+(+e[a>>3]-+e[b>>3]))<1.1920928955078125e-07)){b=0;return b|0}b=+q(+(+e[a+8>>3]-+e[b+8>>3]))<1.1920928955078125e-07;return b|0}function kd(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;f=+e[a>>3]-+e[b>>3];d=+e[a+8>>3]-+e[b+8>>3];c=+e[a+16>>3]-+e[b+16>>3];return +(f*f+d*d+c*c)}function ld(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[a>>3];d=+t(+c);c=+u(+c);e[b+16>>3]=c;c=+e[a+8>>3];f=d*+t(+c);e[b>>3]=f;c=d*+u(+c);e[b+8>>3]=c;return}function md(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=T;T=T+16|0;f=g;e=Fb(a,c)|0;if((d+-1|0)>>>0>5){f=-1;T=g;return f|0}e=(e|0)!=0;if((d|0)==1&e){f=-1;T=g;return f|0}do if(!(nd(a,c,f)|0))if(e){e=((b[26352+(d<<2)>>2]|0)+5-(b[f>>2]|0)|0)%5|0;break}else{e=((b[26384+(d<<2)>>2]|0)+6-(b[f>>2]|0)|0)%6|0;break}else e=-1;while(0);f=e;T=g;return f|0}function nd(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=T;T=T+32|0;h=k+16|0;i=k;e=Wb(a,c,h)|0;if(e|0){d=e;T=k;return d|0}g=Ab(a,c)|0;j=Nb(a,c)|0;qa(g,i);e=ra(g,b[h>>2]|0)|0;a:do if(ma(g)|0){do switch(g|0){case 4:{a=0;break}case 14:{a=1;break}case 24:{a=2;break}case 38:{a=3;break}case 49:{a=4;break}case 58:{a=5;break}case 63:{a=6;break}case 72:{a=7;break}case 83:{a=8;break}case 97:{a=9;break}case 107:{a=10;break}case 117:{a=11;break}default:{e=1;break a}}while(0);f=b[26416+(a*24|0)+8>>2]|0;c=b[26416+(a*24|0)+16>>2]|0;a=b[h>>2]|0;if((a|0)!=(b[i>>2]|0)){i=na(g)|0;a=b[h>>2]|0;if(i|(a|0)==(c|0))e=(e+1|0)%6|0}if((j|0)==3&(a|0)==(c|0)){e=(e+5|0)%6|0;f=22;break}if((j|0)==5&(a|0)==(f|0)){e=(e+1|0)%6|0;f=22}else f=22}else f=22;while(0);if((f|0)==22){b[d>>2]=e;e=0}d=e;T=k;return d|0}function od(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=T;T=T+32|0;t=u+24|0;r=u+20|0;p=u+8|0;o=u+16|0;n=u;j=(Fb(a,c)|0)==0;j=j?6:5;l=Od(a|0,c|0,52)|0;H()|0;l=l&15;if(j>>>0<=d>>>0){e=2;T=u;return e|0}m=(l|0)==0;if(!m?(q=Pd(7,0,(l^15)*3|0)|0,(q&a|0)==0&((H()|0)&c|0)==0):0)f=d;else g=4;a:do if((g|0)==4){f=(Fb(a,c)|0)!=0;if(((f?4:5)|0)<(d|0)){e=1;T=u;return e|0}if(nd(a,c,t)|0){e=1;T=u;return e|0}g=(b[t>>2]|0)+d|0;if(f)f=26704+(((g|0)%5|0)<<2)|0;else f=26736+(((g|0)%6|0)<<2)|0;q=b[f>>2]|0;if((q|0)==7){e=1;T=u;return e|0}b[r>>2]=0;f=ea(a,c,q,r,p)|0;do if(!f){i=p;k=b[i>>2]|0;i=b[i+4>>2]|0;h=i>>>0<c>>>0|(i|0)==(c|0)&k>>>0<a>>>0;g=h?k:a;h=h?i:c;if(!m?(m=Pd(7,0,(l^15)*3|0)|0,(k&m|0)==0&(i&(H()|0)|0)==0):0)f=d;else{i=(d+-1+j|0)%(j|0)|0;f=Fb(a,c)|0;if((i|0)<0)I(27795,27797,246,27806);j=(f|0)!=0;if(((j?4:5)|0)<(i|0))I(27795,27797,246,27806);if(nd(a,c,t)|0)I(27795,27797,246,27806);f=(b[t>>2]|0)+i|0;if(j)f=26704+(((f|0)%5|0)<<2)|0;else f=26736+(((f|0)%6|0)<<2)|0;i=b[f>>2]|0;if((i|0)==7)I(27795,27797,246,27806);b[o>>2]=0;f=ea(a,c,i,o,n)|0;if(f|0)break;k=n;j=b[k>>2]|0;k=b[k+4>>2]|0;do if(k>>>0<h>>>0|(k|0)==(h|0)&j>>>0<g>>>0){if(!(Fb(j,k)|0))g=b[26800+((((b[o>>2]|0)+(b[26768+(i<<2)>>2]|0)|0)%6|0)<<2)>>2]|0;else g=fa(j,k,a,c)|0;f=Fb(j,k)|0;if((g+-1|0)>>>0>5){f=-1;g=j;h=k;break}f=(f|0)!=0;if((g|0)==1&f){f=-1;g=j;h=k;break}do if(!(nd(j,k,t)|0))if(f){f=((b[26352+(g<<2)>>2]|0)+5-(b[t>>2]|0)|0)%5|0;break}else{f=((b[26384+(g<<2)>>2]|0)+6-(b[t>>2]|0)|0)%6|0;break}else f=-1;while(0);g=j;h=k}else f=d;while(0);i=p;k=b[i>>2]|0;i=b[i+4>>2]|0}if((g|0)==(k|0)&(h|0)==(i|0)){j=(Fb(k,i)|0)!=0;if(j)a=fa(k,i,a,c)|0;else a=b[26800+((((b[r>>2]|0)+(b[26768+(q<<2)>>2]|0)|0)%6|0)<<2)>>2]|0;f=Fb(k,i)|0;if((a+-1|0)>>>0<=5?(s=(f|0)!=0,!((a|0)==1&s)):0)do if(!(nd(k,i,t)|0))if(s){f=((b[26352+(a<<2)>>2]|0)+5-(b[t>>2]|0)|0)%5|0;break}else{f=((b[26384+(a<<2)>>2]|0)+6-(b[t>>2]|0)|0)%6|0;break}else f=-1;while(0);else f=-1;f=f+1|0;f=(f|0)==6|j&(f|0)==5?0:f}c=h;a=g;break a}while(0);e=f;T=u;return e|0}while(0);s=Pd(f|0,0,56)|0;t=H()|0|c&-2130706433|536870912;b[e>>2]=s|a;b[e+4>>2]=t;e=0;T=u;return e|0}function pd(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=(Fb(a,c)|0)==0;e=od(a,c,0,d)|0;f=(e|0)==0;if(g){if(!f){g=e;return g|0}e=od(a,c,1,d+8|0)|0;if(e|0){g=e;return g|0}e=od(a,c,2,d+16|0)|0;if(e|0){g=e;return g|0}e=od(a,c,3,d+24|0)|0;if(e|0){g=e;return g|0}e=od(a,c,4,d+32|0)|0;if(!e)return od(a,c,5,d+40|0)|0;else{g=e;return g|0}}if(!f){g=e;return g|0}e=od(a,c,1,d+8|0)|0;if(e|0){g=e;return g|0}e=od(a,c,2,d+16|0)|0;if(e|0){g=e;return g|0}e=od(a,c,3,d+24|0)|0;if(e|0){g=e;return g|0}e=od(a,c,4,d+32|0)|0;if(e|0){g=e;return g|0}g=d+40|0;b[g>>2]=0;b[g+4>>2]=0;g=0;return g|0}function qd(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+192|0;f=j;g=j+168|0;h=Od(a|0,c|0,56)|0;H()|0;h=h&7;i=c&-2130706433|134217728;e=Wb(a,i,g)|0;if(e|0){i=e;T=j;return i|0}c=Od(a|0,c|0,52)|0;H()|0;c=c&15;if(!(Fb(a,i)|0))xb(g,c,h,1,f);else tb(g,c,h,1,f);i=f+8|0;b[d>>2]=b[i>>2];b[d+4>>2]=b[i+4>>2];b[d+8>>2]=b[i+8>>2];b[d+12>>2]=b[i+12>>2];i=0;T=j;return i|0}function rd(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0;f=T;T=T+16|0;d=f;if(!(0==0&(c&2013265920|0)==536870912)){e=0;T=f;return e|0}e=c&-2130706433|134217728;if(!(Bb(a,e)|0)){e=0;T=f;return e|0}g=Od(a|0,c|0,56)|0;H()|0;g=(od(a,e,g&7,d)|0)==0;e=d;e=g&((b[e>>2]|0)==(a|0)?(b[e+4>>2]|0)==(c|0):0)&1;T=f;return e|0}function sd(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((c|0)>0){e=Dd(c,4)|0;b[a>>2]=e;if(!e)I(27819,27842,40,27856)}else b[a>>2]=0;b[a+4>>2]=c;b[a+8>>2]=0;b[a+12>>2]=d;return}function td(a){a=a|0;var c=0,d=0,f=0,g=0,h=0,i=0,j=0;g=a+4|0;h=a+12|0;i=a+8|0;a:while(1){d=b[g>>2]|0;c=0;while(1){if((c|0)>=(d|0))break a;f=b[a>>2]|0;j=b[f+(c<<2)>>2]|0;if(!j)c=c+1|0;else break}c=f+(~~(+q(+(+s(10.0,+(+(15-(b[h>>2]|0)|0)))*(+e[j>>3]+ +e[j+8>>3])))%+(d|0))>>>0<<2)|0;d=b[c>>2]|0;b:do if(d|0){f=j+32|0;if((d|0)==(j|0))b[c>>2]=b[f>>2];else{d=d+32|0;c=b[d>>2]|0;if(!c)break;while(1){if((c|0)==(j|0))break;d=c+32|0;c=b[d>>2]|0;if(!c)break b}b[d>>2]=b[f>>2]}Cd(j);b[i>>2]=(b[i>>2]|0)+-1}while(0)}Cd(b[a>>2]|0);return}function ud(a){a=a|0;var c=0,d=0,e=0;e=b[a+4>>2]|0;d=0;while(1){if((d|0)>=(e|0)){c=0;d=4;break}c=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!c)d=d+1|0;else{d=4;break}}if((d|0)==4)return c|0;return 0}function vd(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;d=(b[a>>2]|0)+(d<<2)|0;f=b[d>>2]|0;if(!f){h=1;return h|0}h=c+32|0;do if((f|0)!=(c|0)){d=b[f+32>>2]|0;if(!d){h=1;return h|0}g=d;while(1){if((g|0)==(c|0)){g=8;break}d=b[g+32>>2]|0;if(!d){d=1;g=10;break}else{f=g;g=d}}if((g|0)==8){b[f+32>>2]=b[h>>2];break}else if((g|0)==10)return d|0}else b[d>>2]=b[h>>2];while(0);Cd(c);h=a+8|0;b[h>>2]=(b[h>>2]|0)+-1;h=0;return h|0}function wd(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0,h=0,i=0;h=Bd(40)|0;if(!h)I(27872,27842,98,27885);b[h>>2]=b[c>>2];b[h+4>>2]=b[c+4>>2];b[h+8>>2]=b[c+8>>2];b[h+12>>2]=b[c+12>>2];g=h+16|0;b[g>>2]=b[d>>2];b[g+4>>2]=b[d+4>>2];b[g+8>>2]=b[d+8>>2];b[g+12>>2]=b[d+12>>2];b[h+32>>2]=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=(b[a>>2]|0)+(g<<2)|0;f=b[g>>2]|0;do if(!f)b[g>>2]=h;else{while(1){if(hc(f,c)|0?hc(f+16|0,d)|0:0)break;g=b[f+32>>2]|0;f=(g|0)==0?f:g;if(!(b[f+32>>2]|0)){i=10;break}}if((i|0)==10){b[f+32>>2]=h;break}Cd(h);i=f;return i|0}while(0);i=a+8|0;b[i>>2]=(b[i>>2]|0)+1;i=h;return i|0}function xd(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=b[(b[a>>2]|0)+(g<<2)>>2]|0;if(!g){d=0;return d|0}if(!d){a=g;while(1){if(hc(a,c)|0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0}a=g;while(1){if(hc(a,c)|0?hc(a+16|0,d)|0:0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0;return 0}function yd(a,c){a=a|0;c=c|0;var d=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;a=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!a){d=0;return d|0}while(1){if(hc(a,c)|0){c=5;break}a=b[a+32>>2]|0;if(!a){a=0;c=5;break}}if((c|0)==5)return a|0;return 0}function zd(){return 27904}function Ad(a){a=+a;return ~~+Wd(+a)|0}\nfunction Bd(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=T;T=T+16|0;n=w;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=b[6977]|0;d=m>>>a;if(d&3|0){c=(d&1^1)+a|0;a=27948+(c<<1<<2)|0;d=a+8|0;e=b[d>>2]|0;f=e+8|0;g=b[f>>2]|0;if((g|0)==(a|0))b[6977]=m&~(1<<c);else{b[g+12>>2]=a;b[d>>2]=g}v=c<<3;b[e+4>>2]=v|3;v=e+v+4|0;b[v>>2]=b[v>>2]|1;v=f;T=w;return v|0}l=b[6979]|0;if(k>>>0>l>>>0){if(d|0){c=2<<a;c=d<<a&(c|0-c);c=(c&0-c)+-1|0;i=c>>>12&16;c=c>>>i;d=c>>>5&8;c=c>>>d;g=c>>>2&4;c=c>>>g;a=c>>>1&2;c=c>>>a;e=c>>>1&1;e=(d|i|g|a|e)+(c>>>e)|0;c=27948+(e<<1<<2)|0;a=c+8|0;g=b[a>>2]|0;i=g+8|0;d=b[i>>2]|0;if((d|0)==(c|0)){a=m&~(1<<e);b[6977]=a}else{b[d+12>>2]=c;b[a>>2]=d;a=m}v=e<<3;h=v-k|0;b[g+4>>2]=k|3;f=g+k|0;b[f+4>>2]=h|1;b[g+v>>2]=h;if(l|0){e=b[6982]|0;c=l>>>3;d=27948+(c<<1<<2)|0;c=1<<c;if(!(a&c)){b[6977]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[6979]=h;b[6982]=f;v=i;T=w;return v|0}g=b[6978]|0;if(g){d=(g&0-g)+-1|0;f=d>>>12&16;d=d>>>f;e=d>>>5&8;d=d>>>e;h=d>>>2&4;d=d>>>h;i=d>>>1&2;d=d>>>i;j=d>>>1&1;j=b[28212+((e|f|h|i|j)+(d>>>j)<<2)>>2]|0;d=j;i=j;j=(b[j+4>>2]&-8)-k|0;while(1){a=b[d+16>>2]|0;if(!a){a=b[d+20>>2]|0;if(!a)break}h=(b[a+4>>2]&-8)-k|0;f=h>>>0<j>>>0;d=a;i=f?a:i;j=f?h:j}h=i+k|0;if(h>>>0>i>>>0){f=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){d=0;break}}while(1){e=c+20|0;d=b[e>>2]|0;if(!d){e=c+16|0;d=b[e>>2]|0;if(!d)break;else{c=d;a=e}}else{c=d;a=e}}b[a>>2]=0;d=c}else{d=b[i+8>>2]|0;b[d+12>>2]=c;b[c+8>>2]=d;d=c}while(0);do if(f|0){c=b[i+28>>2]|0;a=28212+(c<<2)|0;if((i|0)==(b[a>>2]|0)){b[a>>2]=d;if(!d){b[6978]=g&~(1<<c);break}}else{v=f+16|0;b[((b[v>>2]|0)==(i|0)?v:f+20|0)>>2]=d;if(!d)break}b[d+24>>2]=f;c=b[i+16>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}c=b[i+20>>2]|0;if(c|0){b[d+20>>2]=c;b[c+24>>2]=d}}while(0);if(j>>>0<16){v=j+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[h+4>>2]=j|1;b[h+j>>2]=j;if(l|0){e=b[6982]|0;c=l>>>3;d=27948+(c<<1<<2)|0;c=1<<c;if(!(c&m)){b[6977]=c|m;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[6979]=j;b[6982]=h}v=i+8|0;T=w;return v|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=b[6978]|0;if(e){f=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1}else j=0;d=b[28212+(j<<2)>>2]|0;a:do if(!d){d=0;a=0;q=61}else{a=0;i=k<<((j|0)==31?0:25-(j>>>1)|0);g=0;while(1){h=(b[d+4>>2]&-8)-k|0;if(h>>>0<f>>>0)if(!h){a=d;f=0;q=65;break a}else{a=d;f=h}q=b[d+20>>2]|0;d=b[d+16+(i>>>31<<2)>>2]|0;g=(q|0)==0|(q|0)==(d|0)?g:q;if(!d){d=g;q=61;break}else i=i<<1}}while(0);if((q|0)==61){if((d|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break}m=(a&0-a)+-1|0;h=m>>>12&16;m=m>>>h;g=m>>>5&8;m=m>>>g;i=m>>>2&4;m=m>>>i;j=m>>>1&2;m=m>>>j;d=m>>>1&1;a=0;d=b[28212+((g|h|i|j|d)+(m>>>d)<<2)>>2]|0}if(!d){i=a;h=f}else q=65}if((q|0)==65){g=d;while(1){m=(b[g+4>>2]&-8)-k|0;d=m>>>0<f>>>0;f=d?m:f;a=d?g:a;d=b[g+16>>2]|0;if(!d)d=b[g+20>>2]|0;if(!d){i=a;h=f;break}else g=d}}if(((i|0)!=0?h>>>0<((b[6979]|0)-k|0)>>>0:0)?(l=i+k|0,l>>>0>i>>>0):0){g=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){c=0;break}}while(1){f=c+20|0;d=b[f>>2]|0;if(!d){f=c+16|0;d=b[f>>2]|0;if(!d)break;else{c=d;a=f}}else{c=d;a=f}}b[a>>2]=0}else{v=b[i+8>>2]|0;b[v+12>>2]=c;b[c+8>>2]=v}while(0);do if(g){a=b[i+28>>2]|0;d=28212+(a<<2)|0;if((i|0)==(b[d>>2]|0)){b[d>>2]=c;if(!c){e=e&~(1<<a);b[6978]=e;break}}else{v=g+16|0;b[((b[v>>2]|0)==(i|0)?v:g+20|0)>>2]=c;if(!c)break}b[c+24>>2]=g;a=b[i+16>>2]|0;if(a|0){b[c+16>>2]=a;b[a+24>>2]=c}a=b[i+20>>2]|0;if(a){b[c+20>>2]=a;b[a+24>>2]=c}}while(0);b:do if(h>>>0<16){v=h+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[l+4>>2]=h|1;b[l+h>>2]=h;c=h>>>3;if(h>>>0<256){d=27948+(c<<1<<2)|0;a=b[6977]|0;c=1<<c;if(!(a&c)){b[6977]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=l;b[c+12>>2]=l;b[l+8>>2]=c;b[l+12>>2]=d;break}c=h>>>8;if(c)if(h>>>0>16777215)d=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;c=28212+(d<<2)|0;b[l+28>>2]=d;a=l+16|0;b[a+4>>2]=0;b[a>>2]=0;a=1<<d;if(!(e&a)){b[6978]=e|a;b[c>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break}c=b[c>>2]|0;c:do if((b[c+4>>2]&-8|0)!=(h|0)){e=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(h|0)){c=a;break c}else{e=e<<1;c=a}}b[d>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break b}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=l;b[u>>2]=l;b[l+8>>2]=v;b[l+12>>2]=c;b[l+24>>2]=0}while(0);v=i+8|0;T=w;return v|0}else m=k}else m=k}else m=-1;while(0);d=b[6979]|0;if(d>>>0>=m>>>0){c=d-m|0;a=b[6982]|0;if(c>>>0>15){v=a+m|0;b[6982]=v;b[6979]=c;b[v+4>>2]=c|1;b[a+d>>2]=c;b[a+4>>2]=m|3}else{b[6979]=0;b[6982]=0;b[a+4>>2]=d|3;v=a+d+4|0;b[v>>2]=b[v>>2]|1}v=a+8|0;T=w;return v|0}h=b[6980]|0;if(h>>>0>m>>>0){t=h-m|0;b[6980]=t;v=b[6983]|0;u=v+m|0;b[6983]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;T=w;return v|0}if(!(b[7095]|0)){b[7097]=4096;b[7096]=4096;b[7098]=-1;b[7099]=-1;b[7100]=0;b[7088]=0;b[7095]=n&-16^1431655768;a=4096}else a=b[7097]|0;i=m+48|0;j=m+47|0;g=a+j|0;f=0-a|0;k=g&f;if(k>>>0<=m>>>0){v=0;T=w;return v|0}a=b[7087]|0;if(a|0?(l=b[7085]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;T=w;return v|0}d:do if(!(b[7088]&4)){d=b[6983]|0;e:do if(d){e=28356;while(1){n=b[e>>2]|0;if(n>>>0<=d>>>0?(n+(b[e+4>>2]|0)|0)>>>0>d>>>0:0)break;a=b[e+8>>2]|0;if(!a){q=128;break e}else e=a}c=g-h&f;if(c>>>0<2147483647){a=Xd(c|0)|0;if((a|0)==((b[e>>2]|0)+(b[e+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=c;g=a;q=145;break d}}else{e=a;q=136}}else c=0}else q=128;while(0);do if((q|0)==128){d=Xd(0)|0;if((d|0)!=(-1|0)?(c=d,o=b[7096]|0,p=o+-1|0,c=((p&c|0)==0?0:(p+c&0-o)-c|0)+k|0,o=b[7085]|0,p=c+o|0,c>>>0>m>>>0&c>>>0<2147483647):0){n=b[7087]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){c=0;break}a=Xd(c|0)|0;if((a|0)==(d|0)){h=c;g=d;q=145;break d}else{e=a;q=136}}else c=0}while(0);do if((q|0)==136){d=0-c|0;if(!(i>>>0>c>>>0&(c>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){c=0;break}else{h=c;g=e;q=145;break d}a=b[7097]|0;a=j-c+a&0-a;if(a>>>0>=2147483647){h=c;g=e;q=145;break d}if((Xd(a|0)|0)==(-1|0)){Xd(d|0)|0;c=0;break}else{h=a+c|0;g=e;q=145;break d}}while(0);b[7088]=b[7088]|4;q=143}else{c=0;q=143}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(t=Xd(k|0)|0,p=Xd(0)|0,r=p-t|0,s=r>>>0>(m+40|0)>>>0,!((t|0)==(-1|0)|s^1|t>>>0<p>>>0&((t|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=s?r:c;g=t;q=145}if((q|0)==145){c=(b[7085]|0)+h|0;b[7085]=c;if(c>>>0>(b[7086]|0)>>>0)b[7086]=c;j=b[6983]|0;f:do if(j){c=28356;while(1){a=b[c>>2]|0;d=b[c+4>>2]|0;if((g|0)==(a+d|0)){q=154;break}e=b[c+8>>2]|0;if(!e)break;else c=e}if(((q|0)==154?(u=c+4|0,(b[c+12>>2]&8|0)==0):0)?g>>>0>j>>>0&a>>>0<=j>>>0:0){b[u>>2]=d+h;v=(b[6980]|0)+h|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;b[6983]=u;b[6980]=t;b[u+4>>2]=t|1;b[j+v+4>>2]=40;b[6984]=b[7099];break}if(g>>>0<(b[6981]|0)>>>0)b[6981]=g;d=g+h|0;c=28356;while(1){if((b[c>>2]|0)==(d|0)){q=162;break}a=b[c+8>>2]|0;if(!a)break;else c=a}if((q|0)==162?(b[c+12>>2]&8|0)==0:0){b[c>>2]=g;l=c+4|0;b[l>>2]=(b[l>>2]|0)+h;l=g+8|0;l=g+((l&7|0)==0?0:0-l&7)|0;c=d+8|0;c=d+((c&7|0)==0?0:0-c&7)|0;k=l+m|0;i=c-l-m|0;b[l+4>>2]=m|3;g:do if((j|0)==(c|0)){v=(b[6980]|0)+i|0;b[6980]=v;b[6983]=k;b[k+4>>2]=v|1}else{if((b[6982]|0)==(c|0)){v=(b[6979]|0)+i|0;b[6979]=v;b[6982]=k;b[k+4>>2]=v|1;b[k+v>>2]=v;break}a=b[c+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do if(a>>>0<256){a=b[c+8>>2]|0;d=b[c+12>>2]|0;if((d|0)==(a|0)){b[6977]=b[6977]&~(1<<e);break}else{b[a+12>>2]=d;b[d+8>>2]=a;break}}else{g=b[c+24>>2]|0;a=b[c+12>>2]|0;do if((a|0)==(c|0)){d=c+16|0;e=d+4|0;a=b[e>>2]|0;if(!a){a=b[d>>2]|0;if(!a){a=0;break}}else d=e;while(1){f=a+20|0;e=b[f>>2]|0;if(!e){f=a+16|0;e=b[f>>2]|0;if(!e)break;else{a=e;d=f}}else{a=e;d=f}}b[d>>2]=0}else{v=b[c+8>>2]|0;b[v+12>>2]=a;b[a+8>>2]=v}while(0);if(!g)break;d=b[c+28>>2]|0;e=28212+(d<<2)|0;do if((b[e>>2]|0)!=(c|0)){v=g+16|0;b[((b[v>>2]|0)==(c|0)?v:g+20|0)>>2]=a;if(!a)break h}else{b[e>>2]=a;if(a|0)break;b[6978]=b[6978]&~(1<<d);break h}while(0);b[a+24>>2]=g;d=c+16|0;e=b[d>>2]|0;if(e|0){b[a+16>>2]=e;b[e+24>>2]=a}d=b[d+4>>2]|0;if(!d)break;b[a+20>>2]=d;b[d+24>>2]=a}while(0);c=c+h|0;f=h+i|0}else f=i;c=c+4|0;b[c>>2]=b[c>>2]&-2;b[k+4>>2]=f|1;b[k+f>>2]=f;c=f>>>3;if(f>>>0<256){d=27948+(c<<1<<2)|0;a=b[6977]|0;c=1<<c;if(!(a&c)){b[6977]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=k;b[c+12>>2]=k;b[k+8>>2]=c;b[k+12>>2]=d;break}c=f>>>8;do if(!c)e=0;else{if(f>>>0>16777215){e=31;break}u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}while(0);c=28212+(e<<2)|0;b[k+28>>2]=e;a=k+16|0;b[a+4>>2]=0;b[a>>2]=0;a=b[6978]|0;d=1<<e;if(!(a&d)){b[6978]=a|d;b[c>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break}c=b[c>>2]|0;i:do if((b[c+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(f|0)){c=a;break i}else{e=e<<1;c=a}}b[d>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break g}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=k;b[u>>2]=k;b[k+8>>2]=v;b[k+12>>2]=c;b[k+24>>2]=0}while(0);v=l+8|0;T=w;return v|0}c=28356;while(1){a=b[c>>2]|0;if(a>>>0<=j>>>0?(v=a+(b[c+4>>2]|0)|0,v>>>0>j>>>0):0)break;c=b[c+8>>2]|0}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;c=a+8|0;d=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=d-t|0;b[6983]=u;b[6980]=t;b[u+4>>2]=t|1;b[g+d+4>>2]=40;b[6984]=b[7099];d=a+4|0;b[d>>2]=27;b[c>>2]=b[7089];b[c+4>>2]=b[7090];b[c+8>>2]=b[7091];b[c+12>>2]=b[7092];b[7089]=g;b[7090]=h;b[7092]=0;b[7091]=c;c=a+24|0;do{u=c;c=c+4|0;b[c>>2]=7}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;b[d>>2]=b[d>>2]&-2;b[j+4>>2]=g|1;b[a>>2]=g;c=g>>>3;if(g>>>0<256){d=27948+(c<<1<<2)|0;a=b[6977]|0;c=1<<c;if(!(a&c)){b[6977]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=j;b[c+12>>2]=j;b[j+8>>2]=c;b[j+12>>2]=d;break}c=g>>>8;if(c)if(g>>>0>16777215)e=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1}else e=0;d=28212+(e<<2)|0;b[j+28>>2]=e;b[j+20>>2]=0;b[f>>2]=0;c=b[6978]|0;a=1<<e;if(!(c&a)){b[6978]=c|a;b[d>>2]=j;b[j+24>>2]=d;b[j+12>>2]=j;b[j+8>>2]=j;break}c=b[d>>2]|0;j:do if((b[c+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(g|0)){c=a;break j}else{e=e<<1;c=a}}b[d>>2]=j;b[j+24>>2]=c;b[j+12>>2]=j;b[j+8>>2]=j;break f}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=j;b[u>>2]=j;b[j+8>>2]=v;b[j+12>>2]=c;b[j+24>>2]=0}}else{v=b[6981]|0;if((v|0)==0|g>>>0<v>>>0)b[6981]=g;b[7089]=g;b[7090]=h;b[7092]=0;b[6986]=b[7095];b[6985]=-1;b[6990]=27948;b[6989]=27948;b[6992]=27956;b[6991]=27956;b[6994]=27964;b[6993]=27964;b[6996]=27972;b[6995]=27972;b[6998]=27980;b[6997]=27980;b[7e3]=27988;b[6999]=27988;b[7002]=27996;b[7001]=27996;b[7004]=28004;b[7003]=28004;b[7006]=28012;b[7005]=28012;b[7008]=28020;b[7007]=28020;b[7010]=28028;b[7009]=28028;b[7012]=28036;b[7011]=28036;b[7014]=28044;b[7013]=28044;b[7016]=28052;b[7015]=28052;b[7018]=28060;b[7017]=28060;b[7020]=28068;b[7019]=28068;b[7022]=28076;b[7021]=28076;b[7024]=28084;b[7023]=28084;b[7026]=28092;b[7025]=28092;b[7028]=28100;b[7027]=28100;b[7030]=28108;b[7029]=28108;b[7032]=28116;b[7031]=28116;b[7034]=28124;b[7033]=28124;b[7036]=28132;b[7035]=28132;b[7038]=28140;b[7037]=28140;b[7040]=28148;b[7039]=28148;b[7042]=28156;b[7041]=28156;b[7044]=28164;b[7043]=28164;b[7046]=28172;b[7045]=28172;b[7048]=28180;b[7047]=28180;b[7050]=28188;b[7049]=28188;b[7052]=28196;b[7051]=28196;v=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=v-t|0;b[6983]=u;b[6980]=t;b[u+4>>2]=t|1;b[g+v+4>>2]=40;b[6984]=b[7099]}while(0);c=b[6980]|0;if(c>>>0>m>>>0){t=c-m|0;b[6980]=t;v=b[6983]|0;u=v+m|0;b[6983]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;T=w;return v|0}}v=zd()|0;b[v>>2]=12;v=0;T=w;return v|0}function Cd(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(!a)return;d=a+-8|0;f=b[6981]|0;a=b[a+-4>>2]|0;c=a&-8;j=d+c|0;do if(!(a&1)){e=b[d>>2]|0;if(!(a&3))return;h=d+(0-e)|0;g=e+c|0;if(h>>>0<f>>>0)return;if((b[6982]|0)==(h|0)){a=j+4|0;c=b[a>>2]|0;if((c&3|0)!=3){i=h;c=g;break}b[6979]=g;b[a>>2]=c&-2;b[h+4>>2]=g|1;b[h+g>>2]=g;return}d=e>>>3;if(e>>>0<256){a=b[h+8>>2]|0;c=b[h+12>>2]|0;if((c|0)==(a|0)){b[6977]=b[6977]&~(1<<d);i=h;c=g;break}else{b[a+12>>2]=c;b[c+8>>2]=a;i=h;c=g;break}}f=b[h+24>>2]|0;a=b[h+12>>2]|0;do if((a|0)==(h|0)){c=h+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){a=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0}else{i=b[h+8>>2]|0;b[i+12>>2]=a;b[a+8>>2]=i}while(0);if(f){c=b[h+28>>2]|0;d=28212+(c<<2)|0;if((b[d>>2]|0)==(h|0)){b[d>>2]=a;if(!a){b[6978]=b[6978]&~(1<<c);i=h;c=g;break}}else{i=f+16|0;b[((b[i>>2]|0)==(h|0)?i:f+20|0)>>2]=a;if(!a){i=h;c=g;break}}b[a+24>>2]=f;c=h+16|0;d=b[c>>2]|0;if(d|0){b[a+16>>2]=d;b[d+24>>2]=a}c=b[c+4>>2]|0;if(c){b[a+20>>2]=c;b[c+24>>2]=a;i=h;c=g}else{i=h;c=g}}else{i=h;c=g}}else{i=d;h=d}while(0);if(h>>>0>=j>>>0)return;a=j+4|0;e=b[a>>2]|0;if(!(e&1))return;if(!(e&2)){if((b[6983]|0)==(j|0)){j=(b[6980]|0)+c|0;b[6980]=j;b[6983]=i;b[i+4>>2]=j|1;if((i|0)!=(b[6982]|0))return;b[6982]=0;b[6979]=0;return}if((b[6982]|0)==(j|0)){j=(b[6979]|0)+c|0;b[6979]=j;b[6982]=h;b[i+4>>2]=j|1;b[h+j>>2]=j;return}f=(e&-8)+c|0;d=e>>>3;do if(e>>>0<256){c=b[j+8>>2]|0;a=b[j+12>>2]|0;if((a|0)==(c|0)){b[6977]=b[6977]&~(1<<d);break}else{b[c+12>>2]=a;b[a+8>>2]=c;break}}else{g=b[j+24>>2]|0;a=b[j+12>>2]|0;do if((a|0)==(j|0)){c=j+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){d=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0;d=a}else{d=b[j+8>>2]|0;b[d+12>>2]=a;b[a+8>>2]=d;d=a}while(0);if(g|0){a=b[j+28>>2]|0;c=28212+(a<<2)|0;if((b[c>>2]|0)==(j|0)){b[c>>2]=d;if(!d){b[6978]=b[6978]&~(1<<a);break}}else{e=g+16|0;b[((b[e>>2]|0)==(j|0)?e:g+20|0)>>2]=d;if(!d)break}b[d+24>>2]=g;a=j+16|0;c=b[a>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}a=b[a+4>>2]|0;if(a|0){b[d+20>>2]=a;b[a+24>>2]=d}}}while(0);b[i+4>>2]=f|1;b[h+f>>2]=f;if((i|0)==(b[6982]|0)){b[6979]=f;return}}else{b[a>>2]=e&-2;b[i+4>>2]=c|1;b[h+c>>2]=c;f=c}a=f>>>3;if(f>>>0<256){d=27948+(a<<1<<2)|0;c=b[6977]|0;a=1<<a;if(!(c&a)){b[6977]=c|a;a=d;c=d+8|0}else{c=d+8|0;a=b[c>>2]|0}b[c>>2]=i;b[a+12>>2]=i;b[i+8>>2]=a;b[i+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)e=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;e=(j+245760|0)>>>16&2;e=14-(g|h|e)+(j<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;a=28212+(e<<2)|0;b[i+28>>2]=e;b[i+20>>2]=0;b[i+16>>2]=0;c=b[6978]|0;d=1<<e;a:do if(!(c&d)){b[6978]=c|d;b[a>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i}else{a=b[a>>2]|0;b:do if((b[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;c=b[d>>2]|0;if(!c)break;if((b[c+4>>2]&-8|0)==(f|0)){a=c;break b}else{e=e<<1;a=c}}b[d>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i;break a}while(0);h=a+8|0;j=b[h>>2]|0;b[j+12>>2]=i;b[h>>2]=i;b[i+8>>2]=j;b[i+12>>2]=a;b[i+24>>2]=0}while(0);j=(b[6985]|0)+-1|0;b[6985]=j;if(j|0)return;a=28364;while(1){a=b[a>>2]|0;if(!a)break;else a=a+8|0}b[6985]=-1;return}function Dd(a,c){a=a|0;c=c|0;var d=0;if(a){d=B(c,a)|0;if((c|a)>>>0>65535)d=((d>>>0)/(a>>>0)|0|0)==(c|0)?d:-1}else d=0;a=Bd(d)|0;if(!a)return a|0;if(!(b[a+-4>>2]&3))return a|0;Vd(a|0,0,d|0)|0;return a|0}function Ed(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (G(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0}function Fd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (G(d|0),a-c>>>0|0)|0}function Gd(a){a=a|0;return (a?31-(E(a^a-1)|0)|0:32)|0}function Hd(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=c;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){b[f>>2]=(l>>>0)%(h>>>0);b[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (G(n|0),f)|0}else{if(!g){n=0;f=0;return (G(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=c&0;n=0;f=0;return (G(n|0),f)|0}}g=(i|0)==0;do if(h){if(!g){g=(E(i|0)|0)-(E(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;c=g-31>>31;h=m;a=l>>>(m>>>0)&c|k<<i;c=k>>>(m>>>0)&c;g=0;i=l<<i;break}if(!f){n=0;f=0;return (G(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;n=0;f=0;return (G(n|0),f)|0}g=h-1|0;if(g&h|0){i=(E(h|0)|0)+33-(E(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;c=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&c;c=c&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){b[f>>2]=g&l;b[f+4>>2]=0}if((h|0)==1){o=j|c&0;p=a|0|0;return (G(o|0),p)|0}else{p=Gd(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (G(o|0),p)|0}}else{if(g){if(f|0){b[f>>2]=(k>>>0)%(h>>>0);b[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (G(o|0),p)|0}if(!l){if(f|0){b[f>>2]=0;b[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (G(o|0),p)|0}g=i-1|0;if(!(g&i)){if(f|0){b[f>>2]=a|0;b[f+4>>2]=g&k|c&0}o=0;p=k>>>((Gd(i|0)|0)>>>0);return (G(o|0),p)|0}g=(E(i|0)|0)-(E(k|0)|0)|0;if(g>>>0<=30){c=g+1|0;i=31-g|0;h=c;a=k<<i|l>>>(c>>>0);c=k>>>(c>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (G(o|0),p)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;o=0;p=0;return (G(o|0),p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=Ed(m|0,l|0,-1,-1)|0;d=H()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|c<<1|0;Fd(k|0,d|0,e|0,n|0)|0;p=H()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=Fd(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;c=H()|0;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){b[f>>2]=a;b[f+4>>2]=c}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (G(o|0),p)|0}function Id(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=Fd(j^a|0,i^b|0,j|0,i|0)|0;g=H()|0;a=f^j;b=e^i;return Fd((Hd(h,g,Fd(f^c|0,e^d|0,f|0,e|0)|0,H()|0,0)|0)^a|0,(H()|0)^b|0,a|0,b|0)|0}function Jd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=B(e,f)|0;d=a>>>16;a=(c>>>16)+(B(e,d)|0)|0;e=b>>>16;b=B(e,f)|0;return (G((a>>>16)+(B(e,d)|0)+(((a&65535)+b|0)>>>16)|0),a+b<<16|c&65535|0)|0}function Kd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=Jd(e,f)|0;a=H()|0;return (G((B(b,f)|0)+(B(d,e)|0)+a|a&0|0),c|0|0)|0}function Ld(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=T;T=T+16|0;i=f|0;h=c>>31|((c|0)<0?-1:0)<<1;g=((c|0)<0?-1:0)>>31|((c|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;j=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=Fd(h^a|0,g^c|0,h|0,g|0)|0;c=H()|0;Hd(a,c,Fd(k^d|0,j^e|0,k|0,j|0)|0,H()|0,i)|0;e=Fd(b[i>>2]^h|0,b[i+4>>2]^g|0,h|0,g|0)|0;d=H()|0;T=f;return (G(d|0),e)|0}function Md(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=T;T=T+16|0;f=g|0;Hd(a,c,d,e,f)|0;T=g;return (G(b[f+4>>2]|0),b[f>>2]|0)|0}function Nd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}G(((b|0)<0?-1:0)|0);return b>>c-32|0}function Od(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}G(0);return b>>>c-32|0}function Pd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c}G(a<<c-32|0);return 0}function Qd(a,b,c){a=a|0;b=b|0;c=c|0;b=E(b)|0;if((b|0)==32)b=b+(E(a)|0)|0;G(0);return b|0}function Rd(a,b){a=+a;b=+b;if(a!=a)return +b;if(b!=b)return +a;return +D(+a,+b)}function Sd(a,b){a=+a;b=+b;if(a!=a)return +b;if(b!=b)return +a;return +C(+a,+b)}function Td(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function Ud(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){L(c|0,d|0,e|0)|0;return c|0}h=c|0;g=c+e|0;if((c&3)==(d&3)){while(c&3){if(!e)return h|0;a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0;e=e-1|0}e=g&-4|0;f=e-64|0;while((c|0)<=(f|0)){b[c>>2]=b[d>>2];b[c+4>>2]=b[d+4>>2];b[c+8>>2]=b[d+8>>2];b[c+12>>2]=b[d+12>>2];b[c+16>>2]=b[d+16>>2];b[c+20>>2]=b[d+20>>2];b[c+24>>2]=b[d+24>>2];b[c+28>>2]=b[d+28>>2];b[c+32>>2]=b[d+32>>2];b[c+36>>2]=b[d+36>>2];b[c+40>>2]=b[d+40>>2];b[c+44>>2]=b[d+44>>2];b[c+48>>2]=b[d+48>>2];b[c+52>>2]=b[d+52>>2];b[c+56>>2]=b[d+56>>2];b[c+60>>2]=b[d+60>>2];c=c+64|0;d=d+64|0}while((c|0)<(e|0)){b[c>>2]=b[d>>2];c=c+4|0;d=d+4|0}}else{e=g-4|0;while((c|0)<(e|0)){a[c>>0]=a[d>>0]|0;a[c+1>>0]=a[d+1>>0]|0;a[c+2>>0]=a[d+2>>0]|0;a[c+3>>0]=a[d+3>>0]|0;c=c+4|0;d=d+4|0}}while((c|0)<(g|0)){a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0}return h|0}function Vd(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=c+e|0;d=d&255;if((e|0)>=67){while(c&3){a[c>>0]=d;c=c+1|0}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((c|0)<=(g|0)){b[c>>2]=i;b[c+4>>2]=i;b[c+8>>2]=i;b[c+12>>2]=i;b[c+16>>2]=i;b[c+20>>2]=i;b[c+24>>2]=i;b[c+28>>2]=i;b[c+32>>2]=i;b[c+36>>2]=i;b[c+40>>2]=i;b[c+44>>2]=i;b[c+48>>2]=i;b[c+52>>2]=i;b[c+56>>2]=i;b[c+60>>2]=i;c=c+64|0}while((c|0)<(f|0)){b[c>>2]=i;c=c+4|0}}while((c|0)<(h|0)){a[c>>0]=d;c=c+1|0}return h-e|0}function Wd(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function Xd(a){a=a|0;var c=0,d=0,e=0;e=K()|0;d=b[g>>2]|0;c=d+a|0;if((a|0)>0&(c|0)<(d|0)|(c|0)<0){N(c|0)|0;J(12);return -1}if((c|0)>(e|0))if(!(M(c|0)|0)){J(12);return -1}b[g>>2]=c;return d|0}\n\n// EMSCRIPTEN_END_FUNCS\nreturn{___divdi3:Id,___muldi3:Kd,___remdi3:Ld,___uremdi3:Md,_areNeighborCells:gb,_bitshift64Ashr:Nd,_bitshift64Lshr:Od,_bitshift64Shl:Pd,_calloc:Dd,_cellAreaKm2:vc,_cellAreaM2:wc,_cellAreaRads2:uc,_cellToBoundary:Yb,_cellToCenterChild:Ib,_cellToChildPos:bc,_cellToChildren:Gb,_cellToChildrenSize:Eb,_cellToLatLng:Xb,_cellToLocalIj:Hc,_cellToParent:Db,_cellToVertex:od,_cellToVertexes:pd,_cellsToDirectedEdge:hb,_cellsToLinkedMultiPolygon:la,_childPosToCell:cc,_compactCells:Jb,_destroyLinkedMultiPolygon:Cc,_directedEdgeToBoundary:nb,_directedEdgeToCells:lb,_edgeLengthKm:yc,_edgeLengthM:zc,_edgeLengthRads:xc,_emscripten_replace_memory:W,_free:Cd,_getBaseCellNumber:Ab,_getDirectedEdgeDestination:jb,_getDirectedEdgeOrigin:ib,_getHexagonAreaAvgKm2:oc,_getHexagonAreaAvgM2:pc,_getHexagonEdgeLengthAvgKm:qc,_getHexagonEdgeLengthAvgM:rc,_getIcosahedronFaces:_b,_getNumCells:sc,_getPentagons:ac,_getRes0Cells:wa,_getResolution:zb,_greatCircleDistanceKm:kc,_greatCircleDistanceM:lc,_greatCircleDistanceRads:jc,_gridDisk:aa,_gridDiskDistances:ba,_gridDistance:Jc,_gridPathCells:Lc,_gridPathCellsSize:Kc,_gridRingUnsafe:ga,_i64Add:Ed,_i64Subtract:Fd,_isPentagon:Fb,_isResClassIII:Mb,_isValidCell:Bb,_isValidDirectedEdge:kb,_isValidVertex:rd,_latLngToCell:Ub,_llvm_ctlz_i64:Qd,_llvm_maxnum_f64:Rd,_llvm_minnum_f64:Sd,_llvm_round_f64:Td,_localIjToCell:Ic,_malloc:Bd,_maxFaceCount:Zb,_maxGridDiskSize:$,_maxPolygonToCellsSize:ha,_maxPolygonToCellsSizeExperimental:Sc,_memcpy:Ud,_memset:Vd,_originToDirectedEdges:mb,_pentagonCount:$b,_polygonToCells:ja,_polygonToCellsExperimental:Rc,_readInt64AsDoubleFromPointer:gd,_res0CellCount:va,_round:Wd,_sbrk:Xd,_sizeOfCellBoundary:bd,_sizeOfCoordIJ:fd,_sizeOfGeoLoop:cd,_sizeOfGeoPolygon:dd,_sizeOfH3Index:$c,_sizeOfLatLng:ad,_sizeOfLinkedGeoPolygon:ed,_uncompactCells:Kb,_uncompactCellsSize:Lb,_vertexToLatLng:qd,establishStackSpace:_,stackAlloc:X,stackRestore:Z,stackSave:Y}})\n\n\n// EMSCRIPTEN_END_ASM\n(asmGlobalArg,asmLibraryArg,buffer);var ___divdi3=Module[\"___divdi3\"]=asm[\"___divdi3\"];var ___muldi3=Module[\"___muldi3\"]=asm[\"___muldi3\"];var ___remdi3=Module[\"___remdi3\"]=asm[\"___remdi3\"];var ___uremdi3=Module[\"___uremdi3\"]=asm[\"___uremdi3\"];var _areNeighborCells=Module[\"_areNeighborCells\"]=asm[\"_areNeighborCells\"];var _bitshift64Ashr=Module[\"_bitshift64Ashr\"]=asm[\"_bitshift64Ashr\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _calloc=Module[\"_calloc\"]=asm[\"_calloc\"];var _cellAreaKm2=Module[\"_cellAreaKm2\"]=asm[\"_cellAreaKm2\"];var _cellAreaM2=Module[\"_cellAreaM2\"]=asm[\"_cellAreaM2\"];var _cellAreaRads2=Module[\"_cellAreaRads2\"]=asm[\"_cellAreaRads2\"];var _cellToBoundary=Module[\"_cellToBoundary\"]=asm[\"_cellToBoundary\"];var _cellToCenterChild=Module[\"_cellToCenterChild\"]=asm[\"_cellToCenterChild\"];var _cellToChildPos=Module[\"_cellToChildPos\"]=asm[\"_cellToChildPos\"];var _cellToChildren=Module[\"_cellToChildren\"]=asm[\"_cellToChildren\"];var _cellToChildrenSize=Module[\"_cellToChildrenSize\"]=asm[\"_cellToChildrenSize\"];var _cellToLatLng=Module[\"_cellToLatLng\"]=asm[\"_cellToLatLng\"];var _cellToLocalIj=Module[\"_cellToLocalIj\"]=asm[\"_cellToLocalIj\"];var _cellToParent=Module[\"_cellToParent\"]=asm[\"_cellToParent\"];var _cellToVertex=Module[\"_cellToVertex\"]=asm[\"_cellToVertex\"];var _cellToVertexes=Module[\"_cellToVertexes\"]=asm[\"_cellToVertexes\"];var _cellsToDirectedEdge=Module[\"_cellsToDirectedEdge\"]=asm[\"_cellsToDirectedEdge\"];var _cellsToLinkedMultiPolygon=Module[\"_cellsToLinkedMultiPolygon\"]=asm[\"_cellsToLinkedMultiPolygon\"];var _childPosToCell=Module[\"_childPosToCell\"]=asm[\"_childPosToCell\"];var _compactCells=Module[\"_compactCells\"]=asm[\"_compactCells\"];var _destroyLinkedMultiPolygon=Module[\"_destroyLinkedMultiPolygon\"]=asm[\"_destroyLinkedMultiPolygon\"];var _directedEdgeToBoundary=Module[\"_directedEdgeToBoundary\"]=asm[\"_directedEdgeToBoundary\"];var _directedEdgeToCells=Module[\"_directedEdgeToCells\"]=asm[\"_directedEdgeToCells\"];var _edgeLengthKm=Module[\"_edgeLengthKm\"]=asm[\"_edgeLengthKm\"];var _edgeLengthM=Module[\"_edgeLengthM\"]=asm[\"_edgeLengthM\"];var _edgeLengthRads=Module[\"_edgeLengthRads\"]=asm[\"_edgeLengthRads\"];var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=asm[\"_emscripten_replace_memory\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _getBaseCellNumber=Module[\"_getBaseCellNumber\"]=asm[\"_getBaseCellNumber\"];var _getDirectedEdgeDestination=Module[\"_getDirectedEdgeDestination\"]=asm[\"_getDirectedEdgeDestination\"];var _getDirectedEdgeOrigin=Module[\"_getDirectedEdgeOrigin\"]=asm[\"_getDirectedEdgeOrigin\"];var _getHexagonAreaAvgKm2=Module[\"_getHexagonAreaAvgKm2\"]=asm[\"_getHexagonAreaAvgKm2\"];var _getHexagonAreaAvgM2=Module[\"_getHexagonAreaAvgM2\"]=asm[\"_getHexagonAreaAvgM2\"];var _getHexagonEdgeLengthAvgKm=Module[\"_getHexagonEdgeLengthAvgKm\"]=asm[\"_getHexagonEdgeLengthAvgKm\"];var _getHexagonEdgeLengthAvgM=Module[\"_getHexagonEdgeLengthAvgM\"]=asm[\"_getHexagonEdgeLengthAvgM\"];var _getIcosahedronFaces=Module[\"_getIcosahedronFaces\"]=asm[\"_getIcosahedronFaces\"];var _getNumCells=Module[\"_getNumCells\"]=asm[\"_getNumCells\"];var _getPentagons=Module[\"_getPentagons\"]=asm[\"_getPentagons\"];var _getRes0Cells=Module[\"_getRes0Cells\"]=asm[\"_getRes0Cells\"];var _getResolution=Module[\"_getResolution\"]=asm[\"_getResolution\"];var _greatCircleDistanceKm=Module[\"_greatCircleDistanceKm\"]=asm[\"_greatCircleDistanceKm\"];var _greatCircleDistanceM=Module[\"_greatCircleDistanceM\"]=asm[\"_greatCircleDistanceM\"];var _greatCircleDistanceRads=Module[\"_greatCircleDistanceRads\"]=asm[\"_greatCircleDistanceRads\"];var _gridDisk=Module[\"_gridDisk\"]=asm[\"_gridDisk\"];var _gridDiskDistances=Module[\"_gridDiskDistances\"]=asm[\"_gridDiskDistances\"];var _gridDistance=Module[\"_gridDistance\"]=asm[\"_gridDistance\"];var _gridPathCells=Module[\"_gridPathCells\"]=asm[\"_gridPathCells\"];var _gridPathCellsSize=Module[\"_gridPathCellsSize\"]=asm[\"_gridPathCellsSize\"];var _gridRingUnsafe=Module[\"_gridRingUnsafe\"]=asm[\"_gridRingUnsafe\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _isPentagon=Module[\"_isPentagon\"]=asm[\"_isPentagon\"];var _isResClassIII=Module[\"_isResClassIII\"]=asm[\"_isResClassIII\"];var _isValidCell=Module[\"_isValidCell\"]=asm[\"_isValidCell\"];var _isValidDirectedEdge=Module[\"_isValidDirectedEdge\"]=asm[\"_isValidDirectedEdge\"];var _isValidVertex=Module[\"_isValidVertex\"]=asm[\"_isValidVertex\"];var _latLngToCell=Module[\"_latLngToCell\"]=asm[\"_latLngToCell\"];var _llvm_ctlz_i64=Module[\"_llvm_ctlz_i64\"]=asm[\"_llvm_ctlz_i64\"];var _llvm_maxnum_f64=Module[\"_llvm_maxnum_f64\"]=asm[\"_llvm_maxnum_f64\"];var _llvm_minnum_f64=Module[\"_llvm_minnum_f64\"]=asm[\"_llvm_minnum_f64\"];var _llvm_round_f64=Module[\"_llvm_round_f64\"]=asm[\"_llvm_round_f64\"];var _localIjToCell=Module[\"_localIjToCell\"]=asm[\"_localIjToCell\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _maxFaceCount=Module[\"_maxFaceCount\"]=asm[\"_maxFaceCount\"];var _maxGridDiskSize=Module[\"_maxGridDiskSize\"]=asm[\"_maxGridDiskSize\"];var _maxPolygonToCellsSize=Module[\"_maxPolygonToCellsSize\"]=asm[\"_maxPolygonToCellsSize\"];var _maxPolygonToCellsSizeExperimental=Module[\"_maxPolygonToCellsSizeExperimental\"]=asm[\"_maxPolygonToCellsSizeExperimental\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _originToDirectedEdges=Module[\"_originToDirectedEdges\"]=asm[\"_originToDirectedEdges\"];var _pentagonCount=Module[\"_pentagonCount\"]=asm[\"_pentagonCount\"];var _polygonToCells=Module[\"_polygonToCells\"]=asm[\"_polygonToCells\"];var _polygonToCellsExperimental=Module[\"_polygonToCellsExperimental\"]=asm[\"_polygonToCellsExperimental\"];var _readInt64AsDoubleFromPointer=Module[\"_readInt64AsDoubleFromPointer\"]=asm[\"_readInt64AsDoubleFromPointer\"];var _res0CellCount=Module[\"_res0CellCount\"]=asm[\"_res0CellCount\"];var _round=Module[\"_round\"]=asm[\"_round\"];var _sbrk=Module[\"_sbrk\"]=asm[\"_sbrk\"];var _sizeOfCellBoundary=Module[\"_sizeOfCellBoundary\"]=asm[\"_sizeOfCellBoundary\"];var _sizeOfCoordIJ=Module[\"_sizeOfCoordIJ\"]=asm[\"_sizeOfCoordIJ\"];var _sizeOfGeoLoop=Module[\"_sizeOfGeoLoop\"]=asm[\"_sizeOfGeoLoop\"];var _sizeOfGeoPolygon=Module[\"_sizeOfGeoPolygon\"]=asm[\"_sizeOfGeoPolygon\"];var _sizeOfH3Index=Module[\"_sizeOfH3Index\"]=asm[\"_sizeOfH3Index\"];var _sizeOfLatLng=Module[\"_sizeOfLatLng\"]=asm[\"_sizeOfLatLng\"];var _sizeOfLinkedGeoPolygon=Module[\"_sizeOfLinkedGeoPolygon\"]=asm[\"_sizeOfLinkedGeoPolygon\"];var _uncompactCells=Module[\"_uncompactCells\"]=asm[\"_uncompactCells\"];var _uncompactCellsSize=Module[\"_uncompactCellsSize\"]=asm[\"_uncompactCellsSize\"];var _vertexToLatLng=Module[\"_vertexToLatLng\"]=asm[\"_vertexToLatLng\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;Module[\"setValue\"]=setValue;Module[\"getValue\"]=getValue;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer)}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")};var doBrowserLoad=function(){readAsync(memoryInitializer,applyMemoryInitializer,function(){throw\"could not load memory initializer \"+memoryInitializer})};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){var useRequest=function(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)};if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n\n  return libh3\n}\n)(typeof libh3 === 'object' ? libh3 : {});\nexport default libh3;", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Define the C bindings for the h3 library\n\n// Add some aliases to make the function definitions more intelligible\nconst NUMBER = 'number';\nconst H3_ERROR = NUMBER;\nconst BOOLEAN = NUMBER;\nconst H3_LOWER = NUMBER;\nconst H3_UPPER = NUMBER;\nconst RESOLUTION = NUMBER;\nconst POINTER = NUMBER;\n\n// Define the bindings to functions in the C lib. Functions are defined as\n// [name, return type, [arg types]]. You must run `npm run build-emscripten`\n// before new functions added here will be available.\n/** @type {([string, string] | [string, string | null, string[]])[]} */\nexport default [\n    // The size functions are inserted via build/sizes.h\n    ['sizeOfH3Index', NUMBER],\n    ['sizeOfLatLng', NUMBER],\n    ['sizeOfCellBoundary', NUMBER],\n    ['sizeOfGeoLoop', NUMBER],\n    ['sizeOfGeoPolygon', NUMBER],\n    ['sizeOfLinkedGeoPolygon', NUMBER],\n    ['sizeOfCoordIJ', NUMBER],\n    ['readInt64AsDoubleFromPointer', NUMBER],\n    // The remaining functions are defined in the core lib in h3Api.h\n    ['isValidCell', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['latLngToCell', H3_ERROR, [NUMBER, NUMBER, RESOLUTION, POINTER]],\n    ['cellToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['maxGridDiskSize', H3_ERROR, [NUMBER, POINTER]],\n    ['gridDisk', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['gridDiskDistances', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER, POINTER]],\n    ['gridRingUnsafe', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['maxPolygonToCellsSize', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]],\n    ['polygonToCells', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]],\n    ['maxPolygonToCellsSizeExperimental', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]],\n    [\n        'polygonToCellsExperimental',\n        H3_ERROR,\n        [POINTER, RESOLUTION, NUMBER, NUMBER, NUMBER, POINTER]\n    ],\n    ['cellsToLinkedMultiPolygon', H3_ERROR, [POINTER, NUMBER, POINTER]],\n    ['destroyLinkedMultiPolygon', null, [POINTER]],\n    ['compactCells', H3_ERROR, [POINTER, POINTER, NUMBER, NUMBER]],\n    ['uncompactCells', H3_ERROR, [POINTER, NUMBER, NUMBER, POINTER, NUMBER, RESOLUTION]],\n    ['uncompactCellsSize', H3_ERROR, [POINTER, NUMBER, NUMBER, RESOLUTION, POINTER]],\n    ['isPentagon', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['isResClassIII', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['getBaseCellNumber', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['getResolution', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['maxFaceCount', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getIcosahedronFaces', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToParent', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildren', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToCenterChild', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildrenSize', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildPos', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['childPosToCell', H3_ERROR, [NUMBER, NUMBER, H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['areNeighborCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['cellsToDirectedEdge', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['getDirectedEdgeOrigin', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getDirectedEdgeDestination', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['isValidDirectedEdge', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['directedEdgeToCells', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['originToDirectedEdges', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['directedEdgeToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['gridDistance', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['gridPathCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['gridPathCellsSize', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToLocalIj', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['localIjToCell', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER, NUMBER, POINTER]],\n    ['getHexagonAreaAvgM2', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonAreaAvgKm2', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonEdgeLengthAvgM', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonEdgeLengthAvgKm', H3_ERROR, [RESOLUTION, POINTER]],\n    ['greatCircleDistanceM', NUMBER, [POINTER, POINTER]],\n    ['greatCircleDistanceKm', NUMBER, [POINTER, POINTER]],\n    ['greatCircleDistanceRads', NUMBER, [POINTER, POINTER]],\n    ['cellAreaM2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellAreaKm2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellAreaRads2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthM', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthKm', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthRads', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getNumCells', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getRes0Cells', H3_ERROR, [POINTER]],\n    ['res0CellCount', NUMBER],\n    ['getPentagons', H3_ERROR, [NUMBER, POINTER]],\n    ['pentagonCount', NUMBER],\n    ['cellToVertex', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['cellToVertexes', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['vertexToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['isValidVertex', BOOLEAN, [H3_LOWER, H3_UPPER]]\n];\n", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Error codes from the code library, aliased here for legibility\nexport const E_SUCCESS = 0;\nexport const E_FAILED = 1;\nexport const E_DOMAIN = 2;\nexport const E_LATLNG_DOMAIN = 3;\nexport const E_RES_DOMAIN = 4;\nexport const E_CELL_INVALID = 5;\nexport const E_DIR_EDGE_INVALID = 6;\nexport const E_UNDIR_EDGE_INVALID = 7;\nexport const E_VERTEX_INVALID = 8;\nexport const E_PENTAGON = 9;\nexport const E_DUPLICATE_INPUT = 10;\nexport const E_NOT_NEIGHBORS = 11;\nexport const E_RES_MISMATCH = 12;\nexport const E_MEMORY_ALLOC = 13;\nexport const E_MEMORY_BOUNDS = 14;\nexport const E_OPTION_INVALID = 15;\n\n/**\n * Error messages corresponding to the core library error codes. See\n * https://h3geo.org/docs/library/errors#table-of-error-codes\n * @private\n */\nconst H3_ERROR_MSGS = {\n    [E_SUCCESS]: 'Success',\n    [E_FAILED]: 'The operation failed but a more specific error is not available',\n    [E_DOMAIN]: 'Argument was outside of acceptable range',\n    [E_LATLNG_DOMAIN]: 'Latitude or longitude arguments were outside of acceptable range',\n    [E_RES_DOMAIN]: 'Resolution argument was outside of acceptable range',\n    [E_CELL_INVALID]: 'Cell argument was not valid',\n    [E_DIR_EDGE_INVALID]: 'Directed edge argument was not valid',\n    [E_UNDIR_EDGE_INVALID]: 'Undirected edge argument was not valid',\n    [E_VERTEX_INVALID]: 'Vertex argument was not valid',\n    [E_PENTAGON]: 'Pentagon distortion was encountered',\n    [E_DUPLICATE_INPUT]: 'Duplicate input',\n    [E_NOT_NEIGHBORS]: 'Cell arguments were not neighbors',\n    [E_RES_MISMATCH]: 'Cell arguments had incompatible resolutions',\n    [E_MEMORY_ALLOC]: 'Memory allocation failed',\n    [E_MEMORY_BOUNDS]: 'Bounds of provided memory were insufficient',\n    [E_OPTION_INVALID]: 'Mode or flags argument was not valid'\n};\n\n// Error codes for JS errors thrown in the bindings\nexport const E_UNKNOWN_UNIT = 1000;\nexport const E_ARRAY_LENGTH = 1001;\nexport const E_NULL_INDEX = 1002;\n\n/**\n * Error messages for errors thrown in the binding code. These don't strictly\n * need error codes, but it's simpler to treat all of the errors consistently\n * @private\n */\nconst JS_ERROR_MESSAGES = {\n    [E_UNKNOWN_UNIT]: 'Unknown unit',\n    [E_ARRAY_LENGTH]: 'Array length out of bounds',\n    [E_NULL_INDEX]: 'Got unexpected null value for H3 index'\n};\n\nconst UNKNOWN_ERROR_MSG = 'Unknown error';\n\n/**\n * Create an error with an attached code\n * @private\n * @param {Record<number, string>} messages  Map of code-to-messages to use\n * @param {number} errCode                   Numeric error code\n * @param {{value: unknown} | {}} [meta]     Metadata with value to associate with the error\n */\nfunction createError(messages, errCode, meta) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const hasValue = meta && 'value' in meta;\n    // Throw a custom error type with the code attached\n    const err = new Error(\n        `${messages[errCode] || UNKNOWN_ERROR_MSG} (code: ${errCode}${\n            hasValue ? `, value: ${meta.value}` : ''\n        })`\n    );\n    // @ts-expect-error - TS doesn't like extending Error\n    err.code = errCode;\n    return err;\n}\n\n/**\n * Custom error for H3Error codes\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\nexport function H3LibraryError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const meta = arguments.length === 2 ? {value} : {};\n    return createError(H3_ERROR_MSGS, errCode, meta);\n}\n\n/**\n * Custom errors thrown from the JS bindings.\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\nexport function JSBindingError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const meta = arguments.length === 2 ? {value} : {};\n    return createError(JS_ERROR_MESSAGES, errCode, meta);\n}\n\n/**\n * Throw a JavaScript error if the C library return code is an error\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @throws {Error} Error if err is not E_SUCCESS (0)\n */\nexport function throwIfError(errCode) {\n    if (errCode !== 0) {\n        throw H3LibraryError(errCode);\n    }\n}\n", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module h3\n */\n\nimport C from '../out/libh3';\nimport BINDINGS from './bindings';\nimport {\n    throwIfError,\n    H3LibraryError,\n    JSBindingError,\n    E_RES_DOMAIN,\n    E_UNKNOWN_UNIT,\n    E_ARRAY_LENGTH,\n    E_NULL_INDEX,\n    E_CELL_INVALID,\n    E_OPTION_INVALID\n} from './errors';\n\n/**\n * Map of C-defined functions\n * @type {any}\n * @private\n */\nconst H3 = {};\n\n// Create the bound functions themselves\nBINDINGS.forEach(function bind(def) {\n    H3[def[0]] = C.cwrap(...def);\n});\n\n// Alias the hexidecimal base for legibility\nconst BASE_16 = 16;\n\n// Alias unused bits for legibility\nconst UNUSED_UPPER_32_BITS = 0;\n\n// ----------------------------------------------------------------------------\n// Byte size imports\n\nconst SZ_INT = 4;\nconst SZ_PTR = 4;\nconst SZ_DBL = 8;\nconst SZ_INT64 = 8;\nconst SZ_H3INDEX = H3.sizeOfH3Index();\nconst SZ_LATLNG = H3.sizeOfLatLng();\nconst SZ_CELLBOUNDARY = H3.sizeOfCellBoundary();\nconst SZ_GEOPOLYGON = H3.sizeOfGeoPolygon();\nconst SZ_GEOLOOP = H3.sizeOfGeoLoop();\nconst SZ_LINKED_GEOPOLYGON = H3.sizeOfLinkedGeoPolygon();\nconst SZ_COORDIJ = H3.sizeOfCoordIJ();\n\n// ----------------------------------------------------------------------------\n// Custom types\n\n/**\n * 64-bit hexidecimal string representation of an H3 index\n * @static\n * @typedef {string} H3Index\n */\n\n/**\n * 64-bit hexidecimal string representation of an H3 index,\n * or two 32-bit integers in little endian order in an array.\n * @static\n * @typedef {string | number[]} H3IndexInput\n */\n\n/**\n * Coordinates as an `{i, j}` pair\n * @static\n * @typedef CoordIJ\n * @property {number} i\n * @property {number} j\n */\n\n/**\n * Custom JS Error instance with an attached error code. Error codes come from the\n * core H3 library and can be found [in the H3 docs](https://h3geo.org/docs/library/errors#table-of-error-codes).\n * @static\n * @typedef H3Error\n * @property {string} message\n * @property {number} code\n */\n\n/**\n * Pair of lat,lng coordinates (or lng,lat if GeoJSON output is specified)\n * @static\n * @typedef {number[]} CoordPair\n */\n\n/**\n * Pair of lower,upper 32-bit ints representing a 64-bit value\n * @static\n * @typedef {number[]} SplitLong\n */\n\n// ----------------------------------------------------------------------------\n// Unit constants\n\n/**\n * Length/Area units\n * @static\n * @property {string} m\n * @property {string} m2\n * @property {string} km\n * @property {string} km2\n * @property {string} rads\n * @property {string} rads2\n */\nexport const UNITS = {\n    m: 'm',\n    m2: 'm2',\n    km: 'km',\n    km2: 'km2',\n    rads: 'rads',\n    rads2: 'rads2'\n};\n\n// ----------------------------------------------------------------------------\n// Flags\n\n/**\n * Mode flags for polygonToCells\n * @static\n * @property {string} containmentCenter\n * @property {string} containmentFull\n * @property {string} containmentOverlapping\n * @property {string} containmentOverlappingBbox\n */\nexport const POLYGON_TO_CELLS_FLAGS = {\n    containmentCenter: 'containmentCenter',\n    containmentFull: 'containmentFull',\n    containmentOverlapping: 'containmentOverlapping',\n    containmentOverlappingBbox: 'containmentOverlappingBbox'\n};\n\n// ----------------------------------------------------------------------------\n// Utilities and helpers\n\n/**\n * @private\n * @param {string} flags Value from POLYGON_TO_CELLS_FLAGS\n * @returns {number} Flag value\n * @throws {H3Error} If invalid\n */\nfunction polygonToCellsFlagsToNumber(flags) {\n    switch (flags) {\n        case POLYGON_TO_CELLS_FLAGS.containmentCenter:\n            return 0;\n        case POLYGON_TO_CELLS_FLAGS.containmentFull:\n            return 1;\n        case POLYGON_TO_CELLS_FLAGS.containmentOverlapping:\n            return 2;\n        case POLYGON_TO_CELLS_FLAGS.containmentOverlappingBbox:\n            return 3;\n        default:\n            throw JSBindingError(E_OPTION_INVALID, flags);\n    }\n}\n\n/**\n * Validate a resolution, throwing an error if invalid\n * @private\n * @param  {unknown} res Value to validate\n * @return {number}      Valid res\n * @throws {H3Error}     If invalid\n */\nfunction validateRes(res) {\n    if (typeof res !== 'number' || res < 0 || res > 15 || Math.floor(res) !== res) {\n        throw H3LibraryError(E_RES_DOMAIN, res);\n    }\n    return res;\n}\n\n/**\n * Assert H3 index output, throwing an error if null\n * @private\n * @param {H3Index | null} h3Index    Index to validate\n * @return {H3Index}\n * @throws {H3Error}     If invalid\n */\nfunction validateH3Index(h3Index) {\n    if (!h3Index) throw JSBindingError(E_NULL_INDEX);\n    return h3Index;\n}\n\nconst MAX_JS_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\n/**\n * Validate an array length. JS will throw its own error if you try\n * to create an array larger than 2^32 - 1, but validating beforehand\n * allows us to exit early before we try to process large amounts\n * of data that won't even fit in an output array\n * @private\n * @param  {number} length  Length to validate\n * @return {number}         Valid array length\n * @throws {H3Error}        If invalid\n */\nfunction validateArrayLength(length) {\n    if (length > MAX_JS_ARRAY_LENGTH) {\n        throw JSBindingError(E_ARRAY_LENGTH, length);\n    }\n    return length;\n}\n\nconst INVALID_HEXIDECIMAL_CHAR = /[^0-9a-fA-F]/;\n\n/**\n * Convert an H3 index (64-bit hexidecimal string) into a \"split long\" - a pair of 32-bit ints\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {SplitLong}             A two-element array with 32 lower bits and 32 upper bits\n */\nexport function h3IndexToSplitLong(h3Index) {\n    if (\n        Array.isArray(h3Index) &&\n        h3Index.length === 2 &&\n        Number.isInteger(h3Index[0]) &&\n        Number.isInteger(h3Index[1])\n    ) {\n        return h3Index;\n    }\n    if (typeof h3Index !== 'string' || INVALID_HEXIDECIMAL_CHAR.test(h3Index)) {\n        return [0, 0];\n    }\n    const upper = parseInt(h3Index.substring(0, h3Index.length - 8), BASE_16);\n    const lower = parseInt(h3Index.substring(h3Index.length - 8), BASE_16);\n    return [lower, upper];\n}\n\n/**\n * Convert a 32-bit int to a hexdecimal string\n * @private\n * @param  {number} num  Integer to convert\n * @return {H3Index}     Hexidecimal string\n */\nfunction hexFrom32Bit(num) {\n    if (num >= 0) {\n        return num.toString(BASE_16);\n    }\n\n    // Handle negative numbers\n    num = num & 0x7fffffff;\n    let tempStr = zeroPad(8, num.toString(BASE_16));\n    const topNum = (parseInt(tempStr[0], BASE_16) + 8).toString(BASE_16);\n    tempStr = topNum + tempStr.substring(1);\n    return tempStr;\n}\n\n/**\n * Get a H3 index string from a split long (pair of 32-bit ints)\n * @param  {number} lower Lower 32 bits\n * @param  {number} upper Upper 32 bits\n * @return {H3Index}       H3 index\n */\nexport function splitLongToH3Index(lower, upper) {\n    return hexFrom32Bit(upper) + zeroPad(8, hexFrom32Bit(lower));\n}\n\n/**\n * Zero-pad a string to a given length\n * @private\n * @param  {number} fullLen Target length\n * @param  {string} numStr  String to zero-pad\n * @return {string}         Zero-padded string\n */\nfunction zeroPad(fullLen, numStr) {\n    const numZeroes = fullLen - numStr.length;\n    let outStr = '';\n    for (let i = 0; i < numZeroes; i++) {\n        outStr += '0';\n    }\n    outStr = outStr + numStr;\n    return outStr;\n}\n\n// One more than the max size of an unsigned 32-bit int.\n// Dividing by this number is equivalent to num >>> 32\nconst UPPER_BIT_DIVISOR = Math.pow(2, 32);\n\n/**\n * Convert a JS double-precision floating point number to a split long\n * @private\n * @param  {number} num  Number to convert\n * @return {SplitLong}     A two-element array with 32 lower bits and 32 upper bits\n */\nfunction numberToSplitLong(num) {\n    if (typeof num !== 'number') {\n        return [0, 0];\n    }\n    return [num | 0, (num / UPPER_BIT_DIVISOR) | 0];\n}\n\n/**\n * Populate a C-appropriate GeoLoop struct from a polygon array\n * @private\n * @param  {number[][]} polygonArray  Polygon, as an array of coordinate pairs\n * @param  {number}  geoLoop          C pointer to a GeoLoop struct\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoLoop struct\n */\nfunction polygonArrayToGeoLoop(polygonArray, geoLoop, isGeoJson) {\n    const numVerts = polygonArray.length;\n    const geoCoordArray = C._calloc(numVerts, SZ_LATLNG);\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const latIndex = isGeoJson ? 1 : 0;\n    const lngIndex = isGeoJson ? 0 : 1;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        C.HEAPF64.set(\n            [polygonArray[i / 2][latIndex], polygonArray[i / 2][lngIndex]].map(degsToRads),\n            geoCoordArray / SZ_DBL + i\n        );\n    }\n    C.HEAPU32.set([numVerts, geoCoordArray], geoLoop / SZ_INT);\n    return geoLoop;\n}\n\n/**\n * Create a C-appropriate GeoPolygon struct from an array of polygons\n * @private\n * @param  {number[][][]} coordinates Array of polygons, each an array of coordinate pairs\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoPolygon struct\n */\nfunction coordinatesToGeoPolygon(coordinates, isGeoJson) {\n    // Any loops beyond the first loop are holes\n    const numHoles = coordinates.length - 1;\n    const geoPolygon = C._calloc(SZ_GEOPOLYGON);\n    // Byte positions within the struct\n    const geoLoopOffset = 0;\n    const numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // geoLoop is first part of struct\n    polygonArrayToGeoLoop(coordinates[0], geoPolygon + geoLoopOffset, isGeoJson);\n    let holes;\n    if (numHoles > 0) {\n        holes = C._calloc(numHoles, SZ_GEOLOOP);\n        for (let i = 0; i < numHoles; i++) {\n            polygonArrayToGeoLoop(coordinates[i + 1], holes + SZ_GEOLOOP * i, isGeoJson);\n        }\n    }\n    C.setValue(geoPolygon + numHolesOffset, numHoles, 'i32');\n    C.setValue(geoPolygon + holesOffset, holes, 'i32');\n    return geoPolygon;\n}\n\n/**\n * Free memory allocated for a GeoPolygon struct. It is an error to access the struct\n * after passing it to this method.\n * @private\n * @param {number} geoPolygon     C pointer to GeoPolygon struct\n * @return {void}\n */\nfunction destroyGeoPolygon(geoPolygon) {\n    // Byte positions within the struct\n    const geoLoopOffset = 0;\n    const numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // Offset of the geoLoop vertex array pointer within the GeoLoop struct\n    const geoLoopArrayOffset = SZ_INT;\n    // Free the outer vertex array\n    C._free(C.getValue(geoPolygon + geoLoopOffset + geoLoopArrayOffset, 'i8*'));\n    // Free the vertex array for the holes, if any\n    const numHoles = C.getValue(geoPolygon + numHolesOffset, 'i32');\n    if (numHoles > 0) {\n        const holes = C.getValue(geoPolygon + holesOffset, 'i32');\n        for (let i = 0; i < numHoles; i++) {\n            C._free(C.getValue(holes + SZ_GEOLOOP * i + geoLoopArrayOffset, 'i8*'));\n        }\n        C._free(holes);\n    }\n    C._free(geoPolygon);\n}\n\n/**\n * Read an H3 index from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes, in case we're\n *                            reading an array\n * @return {H3Index | null}   H3 index, or null if index was invalid\n */\nfunction readH3IndexFromPointer(cAddress, offset = 0) {\n    const lower = C.getValue(cAddress + SZ_H3INDEX * offset, 'i32');\n    const upper = C.getValue(cAddress + SZ_H3INDEX * offset + SZ_INT, 'i32');\n    // The lower bits are allowed to be 0s, but if the upper bits are 0\n    // this represents an invalid H3 index\n    return upper ? splitLongToH3Index(lower, upper) : null;\n}\n\n/**\n * Read a boolean (32 bit) from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of booleans, in case we're\n *                            reading an array\n * @return {Boolean} Boolean value\n */\nfunction readBooleanFromPointer(cAddress, offset = 0) {\n    const val = C.getValue(cAddress + SZ_INT * offset, 'i32');\n    return Boolean(val);\n}\n\n/**\n * Read a double from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of doubles, in case we're\n *                            reading an array\n * @return {number} Double value\n */\nfunction readDoubleFromPointer(cAddress, offset = 0) {\n    return C.getValue(cAddress + SZ_DBL * offset, 'double');\n}\n\n/**\n * Read a 64-bit int from a pointer to C memory into a JS 64-bit float.\n * Note that this may lose precision if larger than MAX_SAFE_INTEGER\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @return {number} Double value\n */\nfunction readInt64AsDoubleFromPointer(cAddress) {\n    return H3.readInt64AsDoubleFromPointer(cAddress);\n}\n\n/**\n * Store an H3 index in C memory. Primarily used as an efficient way to\n * write sets of hexagons.\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to store\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes from beginning\n *                            of the current array\n */\nfunction storeH3Index(h3Index, cAddress, offset) {\n    // HEAPU32 is a typed array projection on the index space\n    // as unsigned 32-bit integers. This means the index needs\n    // to be divided by SZ_INT (4) to access correctly. Also,\n    // the H3 index is 64 bits, so we skip by twos as we're writing\n    // to 32-bit integers in the proper order.\n    C.HEAPU32.set(h3IndexToSplitLong(h3Index), cAddress / SZ_INT + 2 * offset);\n}\n\n/**\n * Read an array of 64-bit H3 indexes from C and convert to a JS array of\n * H3 index strings\n * @private\n * @param  {number} cAddress    Pointer to C ouput array\n * @param  {number} maxCount    Max number of hexagons in array. Hexagons with\n *                              the value 0 will be skipped, so this isn't\n *                              necessarily the length of the output array.\n * @return {H3Index[]}          Array of H3 indexes\n */\nfunction readArrayOfH3Indexes(cAddress, maxCount) {\n    const out = [];\n    for (let i = 0; i < maxCount; i++) {\n        const h3Index = readH3IndexFromPointer(cAddress, i);\n        if (h3Index !== null) {\n            out.push(h3Index);\n        }\n    }\n    return out;\n}\n\n/**\n * Store an array of H3 index strings as a C array of 64-bit integers.\n * @private\n * @param  {number} cAddress    Pointer to C input array\n * @param  {H3IndexInput[]} hexagons H3 indexes to pass to the C lib\n */\nfunction storeArrayOfH3Indexes(cAddress, hexagons) {\n    // Assuming the cAddress points to an already appropriately\n    // allocated space\n    const count = hexagons.length;\n    for (let i = 0; i < count; i++) {\n        storeH3Index(hexagons[i], cAddress, i);\n    }\n}\n\n/**\n * Populate a C-appropriate LatLng struct from a [lat, lng] array\n * @private\n * @param {number} lat     Coordinate latitude\n * @param {number} lng     Coordinate longitude\n * @return {number}        C pointer to populated LatLng struct\n */\nfunction storeLatLng(lat, lng) {\n    const geoCoord = C._calloc(1, SZ_LATLNG);\n    C.HEAPF64.set([lat, lng].map(degsToRads), geoCoord / SZ_DBL);\n    return geoCoord;\n}\n\n/**\n * Read a single lat or lng value\n * @private\n * @param  {number} cAddress Pointer to C value\n * @return {number}\n */\nfunction readSingleCoord(cAddress) {\n    return radsToDegs(C.getValue(cAddress, 'double'));\n}\n\n/**\n * Read a LatLng from C and return a [lat, lng] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lat, lng] pair\n */\nfunction readLatLng(cAddress) {\n    return [readSingleCoord(cAddress), readSingleCoord(cAddress + SZ_DBL)];\n}\n\n/**\n * Read a LatLng from C and return a GeoJSON-style [lng, lat] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lng, lat] pair\n */\nfunction readLatLngGeoJson(cAddress) {\n    return [readSingleCoord(cAddress + SZ_DBL), readSingleCoord(cAddress)];\n}\n\n/**\n * Read the CellBoundary structure into a list of geo coordinate pairs\n * @private\n * @param {number}  cellBoundary       C pointer to CellBoundary struct\n * @param {boolean} [geoJsonCoords]    Whether to provide GeoJSON coordinate order: [lng, lat]\n * @param {boolean} [closedLoop]       Whether to close the loop\n * @return {CoordPair[]}               Array of geo coordinate pairs\n */\nfunction readCellBoundary(cellBoundary, geoJsonCoords, closedLoop) {\n    const numVerts = C.getValue(cellBoundary, 'i32');\n    // Note that though numVerts is an int, the coordinate doubles have to be\n    // aligned to 8 bytes, hence the 8-byte offset here\n    const vertsPos = cellBoundary + SZ_DBL;\n    const out = [];\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const readCoord = geoJsonCoords ? readLatLngGeoJson : readLatLng;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        out.push(readCoord(vertsPos + SZ_DBL * i));\n    }\n    if (closedLoop) {\n        // Close loop if GeoJSON is specified\n        out.push(out[0]);\n    }\n    return out;\n}\n\n/**\n * Read the LinkedGeoPolygon structure into a nested array of MultiPolygon coordinates\n * @private\n * @param {number}  polygon           C pointer to LinkedGeoPolygon struct\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n */\nfunction readMultiPolygon(polygon, formatAsGeoJson) {\n    const output = [];\n    const readCoord = formatAsGeoJson ? readLatLngGeoJson : readLatLng;\n    let loops;\n    let loop;\n    let coords;\n    let coord;\n    // Loop through the linked structure, building the output\n    while (polygon) {\n        output.push((loops = []));\n        // Follow ->first pointer\n        loop = C.getValue(polygon, 'i8*');\n        while (loop) {\n            loops.push((coords = []));\n            // Follow ->first pointer\n            coord = C.getValue(loop, 'i8*');\n            while (coord) {\n                coords.push(readCoord(coord));\n                // Follow ->next pointer\n                coord = C.getValue(coord + SZ_DBL * 2, 'i8*');\n            }\n            if (formatAsGeoJson) {\n                // Close loop if GeoJSON is requested\n                coords.push(coords[0]);\n            }\n            // Follow ->next pointer\n            loop = C.getValue(loop + SZ_PTR * 2, 'i8*');\n        }\n        // Follow ->next pointer\n        polygon = C.getValue(polygon + SZ_PTR * 2, 'i8*');\n    }\n    return output;\n}\n\n/**\n * Read a CoordIJ from C and return an {i, j} pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */\nfunction readCoordIJ(cAddress) {\n    return {\n        i: C.getValue(cAddress, 'i32'),\n        j: C.getValue(cAddress + SZ_INT, 'i32')\n    };\n}\n\n/**\n * Store an {i, j} pair to a C CoordIJ struct.\n * @private\n * @param  {number} cAddress    Pointer to C memory\n * @param {CoordIJ} ij          {i,j} pair to store\n * @return {void}\n */\nfunction storeCoordIJ(cAddress, {i, j}) {\n    C.setValue(cAddress, i, 'i32');\n    C.setValue(cAddress + SZ_INT, j, 'i32');\n}\n\n/**\n * Read an array of positive integers array from C. Negative\n * values are considered invalid and ignored in output.\n * @private\n * @param  {number} cAddress    Pointer to C array\n * @param  {number} count       Length of C array\n * @return {number[]}           Javascript integer array\n */\nfunction readArrayOfPositiveIntegers(cAddress, count) {\n    const out = [];\n    for (let i = 0; i < count; i++) {\n        const int = C.getValue(cAddress + SZ_INT * i, 'i32');\n        if (int >= 0) {\n            out.push(int);\n        }\n    }\n    return out;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Core\n\n/**\n * Whether a given string represents a valid H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          Whether the index is valid\n */\nexport function isValidCell(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isValidCell(lower, upper));\n}\n\n/**\n * Whether the given H3 index is a pentagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isPentagon\n */\nexport function isPentagon(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isPentagon(lower, upper));\n}\n\n/**\n * Whether the given H3 index is in a Class III resolution (rotated versus\n * the icosahedron and subject to shape distortion adding extra points on\n * icosahedron edges, making them not true hexagons).\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isResClassIII\n */\nexport function isResClassIII(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isResClassIII(lower, upper));\n}\n\n/**\n * Get the number of the base cell for a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get the base cell for\n * @return {number}           Index of the base cell (0-121)\n */\nexport function getBaseCellNumber(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return H3.getBaseCellNumber(lower, upper);\n}\n\n/**\n * Get the indices of all icosahedron faces intersected by a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get faces for\n * @return {number[]}              Indices (0-19) of all intersected faces\n * @throws {H3Error}               If input is invalid\n */\nexport function getIcosahedronFaces(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT);\n    try {\n        throwIfError(H3.maxFaceCount(lower, upper, countPtr));\n        const count = C.getValue(countPtr, 'i32');\n        const faces = C._malloc(SZ_INT * count);\n        try {\n            throwIfError(H3.getIcosahedronFaces(lower, upper, faces));\n            return readArrayOfPositiveIntegers(faces, count);\n        } finally {\n            C._free(faces);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Returns the resolution of an H3 index\n * @static\n * @param  {H3IndexInput} h3Index H3 index to get resolution\n * @return {number}          The number (0-15) resolution, or -1 if invalid\n */\nexport function getResolution(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    if (!H3.isValidCell(lower, upper)) {\n        // Compatability with stated API\n        return -1;\n    }\n    return H3.getResolution(lower, upper);\n}\n\n/**\n * Get the hexagon containing a lat,lon point\n * @static\n * @param  {number} lat Latitude of point\n * @param  {number} lng Longtitude of point\n * @param  {number} res Resolution of hexagons to return\n * @return {H3Index}    H3 index\n * @throws {H3Error}    If input is invalid\n */\nexport function latLngToCell(lat, lng, res) {\n    const latLng = C._malloc(SZ_LATLNG);\n    // Slightly more efficient way to set the memory\n    C.HEAPF64.set([lat, lng].map(degsToRads), latLng / SZ_DBL);\n    // Read value as a split long\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.latLngToCell(latLng, res, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n        C._free(latLng);\n    }\n}\n\n/**\n * Get the lat,lon center of a given hexagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index\n * @return {CoordPair}             Point as a [lat, lng] pair\n * @throws {H3Error}               If input is invalid\n */\nexport function cellToLatLng(h3Index) {\n    const latLng = C._malloc(SZ_LATLNG);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.cellToLatLng(lower, upper, latLng));\n        return readLatLng(latLng);\n    } finally {\n        C._free(latLng);\n    }\n}\n\n/**\n * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]\n * points. For pentagons and hexagons on the edge of an icosahedron face, this\n * function may return up to 10 vertices.\n * @static\n * @param  {H3IndexInput} h3Index          H3 index\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[]}              Array of [lat, lng] pairs\n * @throws {H3Error}                  If input is invalid\n */\nexport function cellToBoundary(h3Index, formatAsGeoJson) {\n    const cellBoundary = C._malloc(SZ_CELLBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.cellToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson, formatAsGeoJson);\n    } finally {\n        C._free(cellBoundary);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Algorithms\n\n/**\n * Get the parent of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get parent for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of parent, or null for invalid input\n * @throws {H3Error}          If input is invalid\n */\nexport function cellToParent(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const parent = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToParent(lower, upper, res, parent));\n        return validateH3Index(readH3IndexFromPointer(parent));\n    } finally {\n        C._free(parent);\n    }\n}\n\n/**\n * Get the children/descendents of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get children for\n * @param  {number} res       Resolution of hexagons to return\n * @return {H3Index[]}        H3 indexes of children, or empty array for invalid input\n * @throws {H3Error}          If resolution is invalid or output is too large for JS\n */\nexport function cellToChildren(h3Index, res) {\n    // Bad input in this case can potentially result in high computation volume\n    // using the current C algorithm. Validate and return an empty array on failure.\n    if (!isValidCell(h3Index)) {\n        return [];\n    }\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = validateArrayLength(cellToChildrenSize(h3Index, res));\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToChildren(lower, upper, res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get the number of children for a cell at a given resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child count for\n * @param  {number} res            Child resolution\n * @return {number}                Number of children at res for the given cell\n * @throws {H3Error}               If cell or parentRes are invalid\n */\nexport function cellToChildrenSize(h3Index, res) {\n    if (!isValidCell(h3Index)) {\n        throw H3LibraryError(E_CELL_INVALID);\n    }\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildrenSize(lower, upper, res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get the center child of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get center child for\n * @param  {number} res       Resolution of cell to return\n * @return {H3Index}          H3 index of child, or null for invalid input\n * @throws {H3Error}          If resolution is invalid\n */\nexport function cellToCenterChild(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const centerChild = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToCenterChild(lower, upper, res, centerChild));\n        return validateH3Index(readH3IndexFromPointer(centerChild));\n    } finally {\n        C._free(centerChild);\n    }\n}\n\n/**\n * Get the position of the cell within an ordered list of all children of the\n * cell's parent at the specified resolution.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child pos for\n * @param  {number} parentRes      Resolution of reference parent\n * @return {number}                Position of child within parent at parentRes\n * @throws {H3Error}               If cell or parentRes are invalid\n */\nexport function cellToChildPos(h3Index, parentRes) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const childPos = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildPos(lower, upper, parentRes, childPos));\n        return readInt64AsDoubleFromPointer(childPos);\n    } finally {\n        C._free(childPos);\n    }\n}\n\n/**\n * Get the child cell at a given position within an ordered list of all children\n * at the specified resolution\n * @static\n * @param  {number} childPos       Position of the child cell to get\n * @param  {H3IndexInput} h3Index  H3 index of the parent cell\n * @param  {number} childRes       Resolution of child cell to return\n * @return {H3Index}          H3 index of child\n * @throws {H3Error}          If input is invalid\n */\nexport function childPosToCell(childPos, h3Index, childRes) {\n    const [cpLower, cpUpper] = numberToSplitLong(childPos);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const child = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.childPosToCell(cpLower, cpUpper, lower, upper, childRes, child));\n        return validateH3Index(readH3IndexFromPointer(child));\n    } finally {\n        C._free(child);\n    }\n}\n\n/**\n * Get all hexagons in a k-ring around a given center. The order of the hexagons is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\nexport function gridDisk(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.gridDisk(lower, upper, ringSize, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all hexagons in a k-ring around a given center, in an array of arrays\n * ordered by distance from the origin. The order of the hexagons within each ring is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[][]}      Array of arrays with H3 indexes for all hexagons each ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\nexport function gridDiskDistances(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const kRings = C._calloc(count, SZ_H3INDEX);\n        const distances = C._calloc(count, SZ_INT);\n        try {\n            throwIfError(H3.gridDiskDistances(lower, upper, ringSize, kRings, distances));\n            /**\n             * An array of empty arrays to hold the output\n             * @type {string[][]}\n             * @private\n             */\n            const out = [];\n            for (let i = 0; i < ringSize + 1; i++) {\n                out.push([]);\n            }\n            // Read the array of hexagons, putting them into the appropriate rings\n            for (let i = 0; i < count; i++) {\n                const cell = readH3IndexFromPointer(kRings, i);\n                const index = C.getValue(distances + SZ_INT * i, 'i32');\n                // eslint-disable-next-line max-depth\n                if (cell !== null) {\n                    out[index].push(cell);\n                }\n            }\n            return out;\n        } finally {\n            C._free(kRings);\n            C._free(distances);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all hexagons in a hollow hexagonal ring centered at origin with sides of a given length.\n * Unlike gridDisk, this function will throw an error if there is a pentagon anywhere in the ring.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {Error}            If the algorithm could not calculate the ring\n * @throws {H3Error}          If input is invalid\n */\nexport function gridRingUnsafe(h3Index, ringSize) {\n    const maxCount = ringSize === 0 ? 1 : 6 * ringSize;\n    const hexagons = C._calloc(maxCount, SZ_H3INDEX);\n    try {\n        throwIfError(H3.gridRingUnsafe(...h3IndexToSplitLong(h3Index), ringSize, hexagons));\n        return readArrayOfH3Indexes(hexagons, maxCount);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n * @throws {H3Error}                If input is invalid or output is too large for JS\n */\nexport function polygonToCells(coordinates, res, isGeoJson) {\n    validateRes(res);\n    isGeoJson = Boolean(isGeoJson);\n    // Guard against empty input\n    if (coordinates.length === 0 || coordinates[0].length === 0) {\n        return [];\n    }\n    // Wrap to expected format if a single loop is provided\n    const polygon = typeof coordinates[0][0] === 'number' ? [coordinates] : coordinates;\n    const geoPolygon = coordinatesToGeoPolygon(\n        // @ts-expect-error - There's no way to convince TS that polygon is now number[][][]\n        polygon,\n        isGeoJson\n    );\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxPolygonToCellsSize(geoPolygon, res, 0, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.polygonToCells(geoPolygon, res, 0, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n        destroyGeoPolygon(geoPolygon);\n    }\n}\n\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {string} flags           Value from POLYGON_TO_CELLS_FLAGS\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n * @throws {H3Error}                If input is invalid or output is too large for JS\n */\nexport function polygonToCellsExperimental(coordinates, res, flags, isGeoJson) {\n    validateRes(res);\n    isGeoJson = Boolean(isGeoJson);\n    const flagsInt = polygonToCellsFlagsToNumber(flags);\n    // Guard against empty input\n    if (coordinates.length === 0 || coordinates[0].length === 0) {\n        return [];\n    }\n    // Wrap to expected format if a single loop is provided\n    const polygon = typeof coordinates[0][0] === 'number' ? [coordinates] : coordinates;\n    const geoPolygon = coordinatesToGeoPolygon(\n        // @ts-expect-error - There's no way to convince TS that polygon is now number[][][]\n        polygon,\n        isGeoJson\n    );\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxPolygonToCellsSizeExperimental(geoPolygon, res, flagsInt, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(\n                H3.polygonToCellsExperimental(\n                    geoPolygon,\n                    res,\n                    flagsInt,\n                    count,\n                    UNUSED_UPPER_32_BITS,\n                    hexagons\n                )\n            );\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n        destroyGeoPolygon(geoPolygon);\n    }\n}\n\n/**\n * Get the outlines of a set of H3 hexagons, returned in GeoJSON MultiPolygon\n * format (an array of polygons, each with an array of loops, each an array of\n * coordinates). Coordinates are returned as [lat, lng] pairs unless GeoJSON\n * is requested.\n *\n * It is the responsibility of the caller to ensure that all hexagons in the\n * set have the same resolution and that the set contains no duplicates. Behavior\n * is undefined if duplicates or multiple resolutions are present, and the\n * algorithm may produce unexpected or invalid polygons.\n *\n * @static\n * @param {H3IndexInput[]} h3Indexes  H3 indexes to get outlines for\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n * @throws {H3Error}                  If input is invalid\n */\nexport function cellsToMultiPolygon(h3Indexes, formatAsGeoJson) {\n    // Early exit on empty input\n    if (!h3Indexes || !h3Indexes.length) {\n        return [];\n    }\n    // Set up input set\n    const indexCount = h3Indexes.length;\n    const set = C._calloc(indexCount, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Indexes);\n    // Allocate memory for output linked polygon\n    const polygon = C._calloc(SZ_LINKED_GEOPOLYGON);\n    try {\n        throwIfError(H3.cellsToLinkedMultiPolygon(set, indexCount, polygon));\n        return readMultiPolygon(polygon, formatAsGeoJson);\n    } finally {\n        // Clean up\n        H3.destroyLinkedMultiPolygon(polygon);\n        C._free(polygon);\n        C._free(set);\n    }\n}\n\n/**\n * Compact a set of hexagons of the same resolution into a set of hexagons across\n * multiple levels that represents the same area.\n * @static\n * @param  {H3IndexInput[]} h3Set H3 indexes to compact\n * @return {H3Index[]}       Compacted H3 indexes\n * @throws {H3Error}         If the input is invalid (e.g. duplicate hexagons)\n */\nexport function compactCells(h3Set) {\n    if (!h3Set || !h3Set.length) {\n        return [];\n    }\n    // Set up input set\n    const count = h3Set.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Set);\n    // Allocate memory for compacted hexagons, worst-case is no compaction\n    const compactedSet = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.compactCells(set, compactedSet, count, UNUSED_UPPER_32_BITS));\n        return readArrayOfH3Indexes(compactedSet, count);\n    } finally {\n        C._free(set);\n        C._free(compactedSet);\n    }\n}\n\n/**\n * Uncompact a compacted set of hexagons to hexagons of the same resolution\n * @static\n * @param  {H3IndexInput[]} compactedSet H3 indexes to uncompact\n * @param  {number}    res          The resolution to uncompact to\n * @return {H3Index[]}              The uncompacted H3 indexes\n * @throws {H3Error}                If the input is invalid (e.g. invalid resolution)\n */\nexport function uncompactCells(compactedSet, res) {\n    validateRes(res);\n    if (!compactedSet || !compactedSet.length) {\n        return [];\n    }\n    // Set up input set\n    const count = compactedSet.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, compactedSet);\n    // Estimate how many hexagons we need (always overestimates if in error)\n    const uncompactCellSizePtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(\n            H3.uncompactCellsSize(set, count, UNUSED_UPPER_32_BITS, res, uncompactCellSizePtr)\n        );\n        const uncompactCellSize = validateArrayLength(\n            readInt64AsDoubleFromPointer(uncompactCellSizePtr)\n        );\n        // Allocate memory for uncompacted hexagons\n        const uncompactedSet = C._calloc(uncompactCellSize, SZ_H3INDEX);\n        try {\n            throwIfError(\n                H3.uncompactCells(\n                    set,\n                    count,\n                    UNUSED_UPPER_32_BITS,\n                    uncompactedSet,\n                    uncompactCellSize,\n                    UNUSED_UPPER_32_BITS,\n                    res\n                )\n            );\n            return readArrayOfH3Indexes(uncompactedSet, uncompactCellSize);\n        } finally {\n            C._free(set);\n            C._free(uncompactedSet);\n        }\n    } finally {\n        C._free(uncompactCellSizePtr);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Directed edges\n\n/**\n * Whether two H3 indexes are neighbors (share an edge)\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {boolean}             Whether the hexagons share an edge\n * @throws {H3Error}             If the input is invalid\n */\nexport function areNeighborCells(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const out = C._malloc(SZ_INT);\n    try {\n        throwIfError(H3.areNeighborCells(oLower, oUpper, dLower, dUpper, out));\n        return readBooleanFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Get an H3 index representing a unidirectional edge for a given origin and destination\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index}             H3 index of the edge, or null if no edge is shared\n * @throws {H3Error}             If the input is invalid\n */\nexport function cellsToDirectedEdge(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellsToDirectedEdge(oLower, oUpper, dLower, dUpper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Get the origin hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge origin\n * @throws {H3Error}           If the input is invalid\n */\nexport function getDirectedEdgeOrigin(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeOrigin(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Get the destination hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge destination\n * @throws {H3Error}           If the input is invalid\n */\nexport function getDirectedEdgeDestination(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeDestination(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Whether the input is a valid unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {boolean}           Whether the index is valid\n */\nexport function isValidDirectedEdge(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    return Boolean(H3.isValidDirectedEdge(lower, upper));\n}\n\n/**\n * Get the [origin, destination] pair represented by a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index[]}         [origin, destination] pair as H3 indexes\n * @throws {H3Error}           If the input is invalid\n */\nexport function directedEdgeToCells(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const count = 2;\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.directedEdgeToCells(lower, upper, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get all of the unidirectional edges with the given H3 index as the origin (i.e. an edge to\n * every neighbor)\n * @static\n * @param  {H3IndexInput} h3Index   H3 index of the origin hexagon\n * @return {H3Index[]}         List of unidirectional edges\n * @throws {H3Error}           If the input is invalid\n */\nexport function originToDirectedEdges(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = 6;\n    const edges = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.originToDirectedEdges(lower, upper, edges));\n        return readArrayOfH3Indexes(edges, count);\n    } finally {\n        C._free(edges);\n    }\n}\n\n/**\n * Get the vertices of a given edge as an array of [lat, lng] points. Note that for edges that\n * cross the edge of an icosahedron face, this may return 3 coordinates.\n * @static\n * @param  {H3IndexInput} edgeIndex        H3 index of the edge\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat]\n * @return {CoordPair[]}              Array of geo coordinate pairs\n * @throws {H3Error}                  If the input is invalid\n */\nexport function directedEdgeToBoundary(edgeIndex, formatAsGeoJson) {\n    const cellBoundary = C._malloc(SZ_CELLBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    try {\n        throwIfError(H3.directedEdgeToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson);\n    } finally {\n        C._free(cellBoundary);\n    }\n}\n\n/**\n * Get the grid distance between two hex indexes. This function may fail\n * to find the distance between two indexes if they are very far apart or\n * on opposite sides of a pentagon.\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {number}          Distance between hexagons\n * @throws {H3Error}         If input is invalid or the distance could not be calculated\n */\nexport function gridDistance(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridDistance(oLower, oUpper, dLower, dUpper, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Given two H3 indexes, return the line of indexes between them (inclusive).\n *\n * This function may fail to find the line between two indexes, for\n * example if they are very far apart. It may also fail when finding\n * distances for indexes on opposite sides of a pentagon.\n *\n * Notes:\n *\n *  - The specific output of this function should not be considered stable\n *    across library versions. The only guarantees the library provides are\n *    that the line length will be `h3Distance(start, end) + 1` and that\n *    every index in the line will be a neighbor of the preceding index.\n *  - Lines are drawn in grid space, and may not correspond exactly to either\n *    Cartesian lines or great arcs.\n *\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index[]}           H3 indexes connecting origin and destination\n * @throws {H3Error}             If input is invalid or the line cannot be calculated\n */\nexport function gridPathCells(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridPathCellsSize(oLower, oUpper, dLower, dUpper, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            H3.gridPathCells(oLower, oUpper, dLower, dUpper, hexagons);\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\nconst LOCAL_IJ_DEFAULT_MODE = 0;\n\n/**\n * Produces IJ coordinates for an H3 index anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin      Origin H3 index\n * @param  {H3IndexInput} destination H3 index for which to find relative coordinates\n * @return {CoordIJ}             Coordinates as an `{i, j}` pair\n * @throws {H3Error}             If the IJ coordinates cannot be calculated\n */\nexport function cellToLocalIj(origin, destination) {\n    const ij = C._malloc(SZ_COORDIJ);\n    try {\n        throwIfError(\n            H3.cellToLocalIj(\n                ...h3IndexToSplitLong(origin),\n                ...h3IndexToSplitLong(destination),\n                LOCAL_IJ_DEFAULT_MODE,\n                ij\n            )\n        );\n        return readCoordIJ(ij);\n    } finally {\n        C._free(ij);\n    }\n}\n\n/**\n * Produces an H3 index for IJ coordinates anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin     Origin H3 index\n * @param  {CoordIJ} coords     Coordinates as an `{i, j}` pair\n * @return {H3Index}            H3 index at the relative coordinates\n * @throws {H3Error}            If the H3 index cannot be calculated\n */\nexport function localIjToCell(origin, coords) {\n    // Validate input coords\n    if (!coords || typeof coords.i !== 'number' || typeof coords.j !== 'number') {\n        throw new Error('Coordinates must be provided as an {i, j} object');\n    }\n    // Allocate memory for the CoordIJ struct and an H3 index to hold the return value\n    const ij = C._malloc(SZ_COORDIJ);\n    const out = C._malloc(SZ_H3INDEX);\n    storeCoordIJ(ij, coords);\n    try {\n        throwIfError(\n            H3.localIjToCell(...h3IndexToSplitLong(origin), ij, LOCAL_IJ_DEFAULT_MODE, out)\n        );\n        return validateH3Index(readH3IndexFromPointer(out));\n    } finally {\n        C._free(ij);\n        C._free(out);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Distance/area utilities\n\n/**\n * Great circle distance between two geo points. This is not specific to H3,\n * but is implemented in the library and provided here as a convenience.\n * @static\n * @param  {number[]} latLng1 Origin coordinate as [lat, lng]\n * @param  {number[]} latLng2 Destination coordinate as [lat, lng]\n * @param  {string}   unit    Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Great circle distance\n * @throws {H3Error}          If the unit is invalid\n */\nexport function greatCircleDistance(latLng1, latLng2, unit) {\n    const coord1 = storeLatLng(latLng1[0], latLng1[1]);\n    const coord2 = storeLatLng(latLng2[0], latLng2[1]);\n    let result;\n    switch (unit) {\n        case UNITS.m:\n            result = H3.greatCircleDistanceM(coord1, coord2);\n            break;\n        case UNITS.km:\n            result = H3.greatCircleDistanceKm(coord1, coord2);\n            break;\n        case UNITS.rads:\n            result = H3.greatCircleDistanceRads(coord1, coord2);\n            break;\n        default:\n            result = null;\n    }\n    C._free(coord1);\n    C._free(coord2);\n    if (result === null) {\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n    return result;\n}\n\n/**\n * Exact area of a given cell\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of the hexagon to measure\n * @param  {string}  unit     Distance unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\nexport function cellArea(h3Index, unit) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m2:\n                throwIfError(H3.cellAreaM2(lower, upper, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.cellAreaKm2(lower, upper, out));\n                break;\n            case UNITS.rads2:\n                throwIfError(H3.cellAreaRads2(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Calculate length of a given unidirectional edge\n * @static\n * @param  {H3IndexInput} edge     H3 index of the edge to measure\n * @param  {string}  unit     Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\nexport function edgeLength(edge, unit) {\n    const [lower, upper] = h3IndexToSplitLong(edge);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m:\n                throwIfError(H3.edgeLengthM(lower, upper, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.edgeLengthKm(lower, upper, out));\n                break;\n            case UNITS.rads:\n                throwIfError(H3.edgeLengthRads(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Average hexagon area at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Area unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}      Average area\n * @throws {H3Error}     If the input is invalid\n */\nexport function getHexagonAreaAvg(res, unit) {\n    validateRes(res);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m2:\n                throwIfError(H3.getHexagonAreaAvgM2(res, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.getHexagonAreaAvgKm2(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Average hexagon edge length at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}      Average edge length\n * @throws {H3Error}     If the input is invalid\n */\nexport function getHexagonEdgeLengthAvg(res, unit) {\n    validateRes(res);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m:\n                throwIfError(H3.getHexagonEdgeLengthAvgM(res, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.getHexagonEdgeLengthAvgKm(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Vertex mode\n\n/**\n * Find the index for a vertex of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find the vertex for\n * @param {number} vertexNum         Number (index) of the vertex to calculate\n * @return {H3Index}     Vertex index\n * @throws {H3Error}     If the input is invalid\n */\nexport function cellToVertex(h3Index, vertexNum) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const vertexIndex = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertex(lower, upper, vertexNum, vertexIndex));\n        return validateH3Index(readH3IndexFromPointer(vertexIndex));\n    } finally {\n        C._free(vertexIndex);\n    }\n}\n\n/**\n * Find the indexes for all vertexes of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find all vertexes for\n * @return {H3Index[]}   All vertex indexes of this cell\n * @throws {H3Error}     If the input is invalid\n */\nexport function cellToVertexes(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const maxNumVertexes = 6;\n    const vertexIndexes = C._calloc(maxNumVertexes, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertexes(lower, upper, vertexIndexes));\n        return readArrayOfH3Indexes(vertexIndexes, maxNumVertexes);\n    } finally {\n        C._free(vertexIndexes);\n    }\n}\n\n/**\n * Get the lat, lng of a given vertex\n * @static\n * @param {H3IndexInput} h3Index A vertex index\n * @returns {CoordPair}          Latitude, longitude coordinates of the vertex\n * @throws {H3Error}             If the input is invalid\n */\nexport function vertexToLatLng(h3Index) {\n    const latlng = C._malloc(SZ_LATLNG);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.vertexToLatLng(lower, upper, latlng));\n        return readLatLng(latlng);\n    } finally {\n        C._free(latlng);\n    }\n}\n\n/**\n * Returns true if the input is a valid vertex index.\n * @static\n * @param {H3IndexInput} h3Index An index to test for being a vertex index\n * @returns {boolean} True if the index represents a vertex\n */\nexport function isValidVertex(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isValidVertex(lower, upper));\n}\n\n// ----------------------------------------------------------------------------\n// Public informational utilities\n\n/**\n * The total count of hexagons in the world at a given resolution. Note that above\n * resolution 8 the exact count cannot be represented in a JavaScript 32-bit number,\n * so consumers should use caution when applying further operations to the output.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {number}      Count\n * @throws {H3Error}     If the resolution is invalid\n */\nexport function getNumCells(res) {\n    validateRes(res);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        // Get number as a long value\n        throwIfError(H3.getNumCells(res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all H3 indexes at resolution 0. As every index at every resolution > 0 is\n * the descendant of a res 0 index, this can be used with h3ToChildren to iterate\n * over H3 indexes at any resolution.\n * @static\n * @return {H3Index[]}  All H3 indexes at res 0\n */\nexport function getRes0Cells() {\n    const count = H3.res0CellCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getRes0Cells(hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get the twelve pentagon indexes at a given resolution.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {H3Index[]}   All H3 pentagon indexes at res\n * @throws {H3Error}     If the resolution is invalid\n */\nexport function getPentagons(res) {\n    validateRes(res);\n    const count = H3.pentagonCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getPentagons(res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Convert degrees to radians\n * @static\n * @param  {number} deg Value in degrees\n * @return {number}     Value in radians\n */\nexport function degsToRads(deg) {\n    return (deg * Math.PI) / 180;\n}\n\n/**\n * Convert radians to degrees\n * @static\n * @param  {number} rad Value in radians\n * @return {number}     Value in degrees\n */\nexport function radsToDegs(rad) {\n    return (rad * 180) / Math.PI;\n}\n", "import { Box3, BufferGeometry, Float32BufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InterleavedBufferAttribute, Sphere, Vector3, WireframeGeometry, ShaderLib, ShaderMaterial, UniformsLib, UniformsUtils, Vector2, Line3, MathUtils, Matrix4, Mesh, Vector4 } from 'three';\n\nconst THREE$2 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Box3,\n  BufferGeometry,\n  Float32BufferAttribute,\n  InstancedBufferGeometry,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  Sphere,\n  Vector3,\n  WireframeGeometry\n};\n\n// support multiple method names for backwards threejs compatibility\nvar setAttributeFn$1 = new THREE$2.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nconst _box$1 = new THREE$2.Box3();\nconst _vector = new THREE$2.Vector3();\nclass LineSegmentsGeometry extends THREE$2.InstancedBufferGeometry {\n  constructor() {\n    super();\n    this.type = 'LineSegmentsGeometry';\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this[setAttributeFn$1]('position', new THREE$2.Float32BufferAttribute(positions, 3));\n    this[setAttributeFn$1]('uv', new THREE$2.Float32BufferAttribute(uvs, 2));\n  }\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  }\n  setPositions(array) {\n    let lineSegments;\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    }\n    const instanceBuffer = new THREE$2.InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this[setAttributeFn$1]('instanceStart', new THREE$2.InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n    this[setAttributeFn$1]('instanceEnd', new THREE$2.InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n  setColors(array) {\n    let colors;\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    }\n    const instanceColorBuffer = new THREE$2.InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this[setAttributeFn$1]('instanceColorStart', new THREE$2.InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n    this[setAttributeFn$1]('instanceColorEnd', new THREE$2.InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  }\n  fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new THREE$2.WireframeGeometry(mesh.geometry)); // set colors, maybe\n\n    return this;\n  }\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n    if (geometry.isGeometry) {\n      console.error('LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.');\n      return;\n    } else if (geometry.isBufferGeometry) {\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    } // set colors, maybe\n\n    return this;\n  }\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE$2.Box3();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start);\n      _box$1.setFromBufferAttribute(end);\n      this.boundingBox.union(_box$1);\n    }\n  }\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE$2.Sphere();\n    }\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center;\n      this.boundingBox.getCenter(center);\n      let maxRadiusSq = 0;\n      for (let i = 0, il = start.count; i < il; i++) {\n        _vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n        _vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n      }\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n      }\n    }\n  }\n  toJSON() {// todo\n  }\n  applyMatrix(matrix) {\n    console.warn('THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().');\n    return this.applyMatrix4(matrix);\n  }\n}\nLineSegmentsGeometry.prototype.isLineSegmentsGeometry = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\nconst THREE$1 = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsLib,\n  UniformsUtils,\n  Vector2\n};\nTHREE$1.UniformsLib.line = {\n  worldUnits: {\n    value: 1\n  },\n  linewidth: {\n    value: 1\n  },\n  resolution: {\n    value: new THREE$1.Vector2(1, 1)\n  },\n  dashScale: {\n    value: 1\n  },\n  dashSize: {\n    value: 1\n  },\n  dashOffset: {\n    value: 0\n  },\n  gapSize: {\n    value: 1\n  } // todo FIX - maybe change to totalSize\n};\n\nTHREE$1.ShaderLib['line'] = {\n  uniforms: THREE$1.UniformsUtils.merge([THREE$1.UniformsLib.common, THREE$1.UniformsLib.fog, THREE$1.UniformsLib.line]),\n  vertexShader: /* glsl */\n  `\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\tworldStart = start.xyz;\n\t\t\tworldEnd = end.xyz;\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segements overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n  fragmentShader: /* glsl */\n  `\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\nclass LineMaterial extends THREE$1.ShaderMaterial {\n  constructor(parameters) {\n    super({\n      type: 'LineMaterial',\n      uniforms: THREE$1.UniformsUtils.clone(THREE$1.ShaderLib['line'].uniforms),\n      vertexShader: THREE$1.ShaderLib['line'].vertexShader,\n      fragmentShader: THREE$1.ShaderLib['line'].fragmentShader,\n      clipping: true // required for clipping support\n    });\n\n    Object.defineProperties(this, {\n      color: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.diffuse.value;\n        },\n        set: function (value) {\n          this.uniforms.diffuse.value = value;\n        }\n      },\n      worldUnits: {\n        enumerable: true,\n        get: function () {\n          return 'WORLD_UNITS' in this.defines;\n        },\n        set: function (value) {\n          if (value === true) {\n            this.defines.WORLD_UNITS = '';\n          } else {\n            delete this.defines.WORLD_UNITS;\n          }\n        }\n      },\n      linewidth: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.linewidth.value;\n        },\n        set: function (value) {\n          this.uniforms.linewidth.value = value;\n        }\n      },\n      dashed: {\n        enumerable: true,\n        get: function () {\n          return Boolean('USE_DASH' in this.defines);\n        },\n        set(value) {\n          if (Boolean(value) !== Boolean('USE_DASH' in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.USE_DASH = '';\n          } else {\n            delete this.defines.USE_DASH;\n          }\n        }\n      },\n      dashScale: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.dashScale.value;\n        },\n        set: function (value) {\n          this.uniforms.dashScale.value = value;\n        }\n      },\n      dashSize: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.dashSize.value;\n        },\n        set: function (value) {\n          this.uniforms.dashSize.value = value;\n        }\n      },\n      dashOffset: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.dashOffset.value;\n        },\n        set: function (value) {\n          this.uniforms.dashOffset.value = value;\n        }\n      },\n      gapSize: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.gapSize.value;\n        },\n        set: function (value) {\n          this.uniforms.gapSize.value = value;\n        }\n      },\n      opacity: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.opacity.value;\n        },\n        set: function (value) {\n          this.uniforms.opacity.value = value;\n        }\n      },\n      resolution: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.resolution.value;\n        },\n        set: function (value) {\n          this.uniforms.resolution.value.copy(value);\n        }\n      },\n      alphaToCoverage: {\n        enumerable: true,\n        get: function () {\n          return Boolean('ALPHA_TO_COVERAGE' in this.defines);\n        },\n        set: function (value) {\n          if (Boolean(value) !== Boolean('ALPHA_TO_COVERAGE' in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.ALPHA_TO_COVERAGE = '';\n            this.extensions.derivatives = true;\n          } else {\n            delete this.defines.ALPHA_TO_COVERAGE;\n            this.extensions.derivatives = false;\n          }\n        }\n      }\n    });\n    this.setValues(parameters);\n  }\n}\nLineMaterial.prototype.isLineMaterial = true;\n\nconst THREE = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  Box3,\n  BufferGeometry,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  Line3,\n  MathUtils,\n  Matrix4,\n  Mesh,\n  Sphere,\n  Vector3,\n  Vector4\n};\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\nconst _start = new THREE.Vector3();\nconst _end = new THREE.Vector3();\nconst _start4 = new THREE.Vector4();\nconst _end4 = new THREE.Vector4();\nconst _ssOrigin = new THREE.Vector4();\nconst _ssOrigin3 = new THREE.Vector3();\nconst _mvMatrix = new THREE.Matrix4();\nconst _line = new THREE.Line3();\nconst _closestPoint = new THREE.Vector3();\nconst _box = new THREE.Box3();\nconst _sphere = new THREE.Sphere();\nconst _clipToWorldVector = new THREE.Vector4();\nclass LineSegments2 extends THREE.Mesh {\n  constructor(geometry = new LineSegmentsGeometry(), material = new LineMaterial({\n    color: Math.random() * 0xffffff\n  })) {\n    super(geometry, material);\n    this.type = 'LineSegments2';\n  } // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n  computeLineDistances() {\n    const geometry = this.geometry;\n    const instanceStart = geometry.attributes.instanceStart;\n    const instanceEnd = geometry.attributes.instanceEnd;\n    const lineDistances = new Float32Array(2 * instanceStart.count);\n    for (let i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n      _start.fromBufferAttribute(instanceStart, i);\n      _end.fromBufferAttribute(instanceEnd, i);\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n      lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end);\n    }\n    const instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n    geometry[setAttributeFn]('instanceDistanceStart', new THREE.InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n    geometry[setAttributeFn]('instanceDistanceEnd', new THREE.InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    if (raycaster.camera === null) {\n      console.error('LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.');\n    }\n    const threshold = raycaster.params.Line2 !== undefined ? raycaster.params.Line2.threshold || 0 : 0;\n    const ray = raycaster.ray;\n    const camera = raycaster.camera;\n    const projectionMatrix = camera.projectionMatrix;\n    const matrixWorld = this.matrixWorld;\n    const geometry = this.geometry;\n    const material = this.material;\n    const resolution = material.resolution;\n    const lineWidth = material.linewidth + threshold;\n    const instanceStart = geometry.attributes.instanceStart;\n    const instanceEnd = geometry.attributes.instanceEnd; // camera forward is negative\n\n    const near = -camera.near; // clip space is [ - 1, 1 ] so multiply by two to get the full\n    // width in clip space\n\n    const ssMaxWidth = 2.0 * Math.max(lineWidth / resolution.width, lineWidth / resolution.height); //\n    // check if we intersect the sphere bounds\n\n    if (geometry.boundingSphere === null) {\n      geometry.computeBoundingSphere();\n    }\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(matrixWorld);\n    const distanceToSphere = Math.max(camera.near, _sphere.distanceToPoint(ray.origin)); // get the w component to scale the world space line width\n\n    _clipToWorldVector.set(0, 0, -distanceToSphere, 1.0).applyMatrix4(camera.projectionMatrix);\n    _clipToWorldVector.multiplyScalar(1.0 / _clipToWorldVector.w);\n    _clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse); // increase the sphere bounds by the worst case line screen space width\n\n    const sphereMargin = Math.abs(ssMaxWidth / _clipToWorldVector.w) * 0.5;\n    _sphere.radius += sphereMargin;\n    if (raycaster.ray.intersectsSphere(_sphere) === false) {\n      return;\n    } //\n    // check if we intersect the box bounds\n\n    if (geometry.boundingBox === null) {\n      geometry.computeBoundingBox();\n    }\n    _box.copy(geometry.boundingBox).applyMatrix4(matrixWorld);\n    const distanceToBox = Math.max(camera.near, _box.distanceToPoint(ray.origin)); // get the w component to scale the world space line width\n\n    _clipToWorldVector.set(0, 0, -distanceToBox, 1.0).applyMatrix4(camera.projectionMatrix);\n    _clipToWorldVector.multiplyScalar(1.0 / _clipToWorldVector.w);\n    _clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse); // increase the sphere bounds by the worst case line screen space width\n\n    const boxMargin = Math.abs(ssMaxWidth / _clipToWorldVector.w) * 0.5;\n    _box.max.x += boxMargin;\n    _box.max.y += boxMargin;\n    _box.max.z += boxMargin;\n    _box.min.x -= boxMargin;\n    _box.min.y -= boxMargin;\n    _box.min.z -= boxMargin;\n    if (raycaster.ray.intersectsBox(_box) === false) {\n      return;\n    } //\n    // pick a point 1 unit out along the ray to avoid the ray origin\n    // sitting at the camera origin which will cause \"w\" to be 0 when\n    // applying the projection matrix.\n\n    ray.at(1, _ssOrigin); // ndc space [ - 1.0, 1.0 ]\n\n    _ssOrigin.w = 1;\n    _ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n    _ssOrigin.applyMatrix4(projectionMatrix);\n    _ssOrigin.multiplyScalar(1 / _ssOrigin.w); // screen space\n\n    _ssOrigin.x *= resolution.x / 2;\n    _ssOrigin.y *= resolution.y / 2;\n    _ssOrigin.z = 0;\n    _ssOrigin3.copy(_ssOrigin);\n    _mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n    for (let i = 0, l = instanceStart.count; i < l; i++) {\n      _start4.fromBufferAttribute(instanceStart, i);\n      _end4.fromBufferAttribute(instanceEnd, i);\n      _start4.w = 1;\n      _end4.w = 1; // camera space\n\n      _start4.applyMatrix4(_mvMatrix);\n      _end4.applyMatrix4(_mvMatrix); // skip the segment if it's entirely behind the camera\n\n      var isBehindCameraNear = _start4.z > near && _end4.z > near;\n      if (isBehindCameraNear) {\n        continue;\n      } // trim the segment if it extends behind camera near\n\n      if (_start4.z > near) {\n        const deltaDist = _start4.z - _end4.z;\n        const t = (_start4.z - near) / deltaDist;\n        _start4.lerp(_end4, t);\n      } else if (_end4.z > near) {\n        const deltaDist = _end4.z - _start4.z;\n        const t = (_end4.z - near) / deltaDist;\n        _end4.lerp(_start4, t);\n      } // clip space\n\n      _start4.applyMatrix4(projectionMatrix);\n      _end4.applyMatrix4(projectionMatrix); // ndc space [ - 1.0, 1.0 ]\n\n      _start4.multiplyScalar(1 / _start4.w);\n      _end4.multiplyScalar(1 / _end4.w); // screen space\n\n      _start4.x *= resolution.x / 2;\n      _start4.y *= resolution.y / 2;\n      _end4.x *= resolution.x / 2;\n      _end4.y *= resolution.y / 2; // create 2d segment\n\n      _line.start.copy(_start4);\n      _line.start.z = 0;\n      _line.end.copy(_end4);\n      _line.end.z = 0; // get closest point on ray to segment\n\n      const param = _line.closestPointToPointParameter(_ssOrigin3, true);\n      _line.at(param, _closestPoint); // check if the intersection point is within clip space\n\n      const zPos = THREE.MathUtils.lerp(_start4.z, _end4.z, param);\n      const isInClipSpace = zPos >= -1 && zPos <= 1;\n      const isInside = _ssOrigin3.distanceTo(_closestPoint) < lineWidth * 0.5;\n      if (isInClipSpace && isInside) {\n        _line.start.fromBufferAttribute(instanceStart, i);\n        _line.end.fromBufferAttribute(instanceEnd, i);\n        _line.start.applyMatrix4(matrixWorld);\n        _line.end.applyMatrix4(matrixWorld);\n        const pointOnLine = new THREE.Vector3();\n        const point = new THREE.Vector3();\n        ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine);\n        intersects.push({\n          point: point,\n          pointOnLine: pointOnLine,\n          distance: ray.origin.distanceTo(point),\n          object: this,\n          face: null,\n          faceIndex: i,\n          uv: null,\n          uv2: null\n        });\n      }\n    }\n  }\n}\nLineSegments2.prototype.LineSegments2 = true;\n\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.type = 'LineGeometry';\n  }\n  setPositions(array) {\n    // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n    var length = array.length - 3;\n    var points = new Float32Array(2 * length);\n    for (var i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array) {\n    // converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n    var length = array.length - 3;\n    var colors = new Float32Array(2 * length);\n    for (var i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i];\n      colors[2 * i + 1] = array[i + 1];\n      colors[2 * i + 2] = array[i + 2];\n      colors[2 * i + 3] = array[i + 3];\n      colors[2 * i + 4] = array[i + 4];\n      colors[2 * i + 5] = array[i + 5];\n    }\n    super.setColors(colors);\n    return this;\n  }\n  fromLine(line) {\n    var geometry = line.geometry;\n    if (geometry.isGeometry) {\n      console.error('THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.');\n      return;\n    } else if (geometry.isBufferGeometry) {\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    } // set colors, maybe\n\n    return this;\n  }\n}\nLineGeometry.prototype.isLineGeometry = true;\n\nclass Line2 extends LineSegments2 {\n  constructor(geometry = new LineGeometry(), material = new LineMaterial({\n    color: Math.random() * 0xffffff\n  })) {\n    super(geometry, material);\n    this.type = 'Line2';\n  }\n}\nLine2.prototype.isLine2 = true;\n\nexport { Line2, LineGeometry, LineMaterial, LineSegments2, LineSegmentsGeometry };\n", "/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( font === undefined ) {\n\n\t\t\tsuper(); // generate default extrude geometry\n\n\t\t} else {\n\n\t\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t\t// translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t\t// defaults\n\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\t\tsuper( shapes, parameters );\n\n\t\t}\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n", "import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tconst font = scope.parse( JSON.parse( text ) );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.isFont = true;\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tshapes.push( ...paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nexport { FontLoader, Font };\n", "import {\n\tMatrix4,\n\tObject3D,\n\tVector2,\n\tVector3\n} from 'three';\n\nclass CSS2DObject extends Object3D {\n\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\tthis.isCSS2DObject = true;\n\n\t\tthis.element = element;\n\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\tthis.center = new Vector2( 0.5, 0.5 ); // ( 0, 0 ) is the lower left; ( 1, 1 ) is the top right\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\n\n\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\tthis.center = source.center;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\nclass CSS2DRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\trenderObject( scene, scene, camera );\n\t\t\tzOrder( scene );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction renderObject( object, scene, camera ) {\n\n\t\t\tif ( object.isCSS2DObject ) {\n\n\t\t\t\t_vector.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t_vector.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tconst visible = ( object.visible === true ) && ( _vector.z >= - 1 && _vector.z <= 1 ) && ( object.layers.test( camera.layers ) === true );\n\t\t\t\tobject.element.style.display = ( visible === true ) ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\tconst element = object.element;\n\n\t\t\t\t\telement.style.transform = 'translate(' + ( - 100 * object.center.x ) + '%,' + ( - 100 * object.center.y ) + '%)' + 'translate(' + ( _vector.x * _widthHalf + _widthHalf ) + 'px,' + ( - _vector.y * _heightHalf + _heightHalf ) + 'px)';\n\n\t\t\t\t\tif ( element.parentNode !== domElement ) {\n\n\t\t\t\t\t\tdomElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t\tconst objectData = {\n\t\t\t\t\tdistanceToCameraSquared: getDistanceToSquared( camera, object )\n\t\t\t\t};\n\n\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getDistanceToSquared( object1, object2 ) {\n\n\t\t\t_a.setFromMatrixPosition( object1.matrixWorld );\n\t\t\t_b.setFromMatrixPosition( object2.matrixWorld );\n\n\t\t\treturn _a.distanceToSquared( _b );\n\n\t\t}\n\n\t\tfunction filterAndFlatten( scene ) {\n\n\t\t\tconst result = [];\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isCSS2DObject ) result.push( object );\n\n\t\t\t} );\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction zOrder( scene ) {\n\n\t\t\tconst sorted = filterAndFlatten( scene ).sort( function ( a, b ) {\n\n\t\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\t\treturn b.renderOrder - a.renderOrder;\n\n\t\t\t\t}\n\n\t\t\t\tconst distanceA = cache.objects.get( a ).distanceToCameraSquared;\n\t\t\t\tconst distanceB = cache.objects.get( b ).distanceToCameraSquared;\n\n\t\t\t\treturn distanceA - distanceB;\n\n\t\t\t} );\n\n\t\t\tconst zMax = sorted.length;\n\n\t\t\tfor ( let i = 0, l = sorted.length; i < l; i ++ ) {\n\n\t\t\t\tsorted[ i ].element.style.zIndex = zMax - i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSS2DObject, CSS2DRenderer };\n"],
  "mappings": "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AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,GAAG,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,IAAI,IAAE;AAAMA,gBAAE,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",
  "names": ["exports", "e", "t", "i", "index", "Symbol", "objectProto", "nativeObjectToString", "symToStringTag", "time", "u", "r", "Prop", "onChange", "stateInit", "nodeElement", "initStatic", "options", "prop", "state", "args", "now", "time", "Group", "v", "p0", "t2", "t3", "Sequence", "Tween", "group", "blur", "sum", "min", "max", "index", "count", "reverse", "ticks", "count", "sum", "index", "flatten", "array", "range", "array", "object", "coordinates", "u", "v", "cartesian", "spherical", "lambda0", "lambda00", "phi00", "range", "sign", "lambda1", "lambda00", "phi00", "v", "object", "coordinates", "t0", "t1", "point", "point", "compareIntersection", "n", "p0", "array", "point", "angle", "sum", "lambda0", "phi0", "sinPhi0", "cosPhi0", "lambda1", "phi1", "sign", "intersection", "point", "lambda0", "phi0", "lambda1", "phi1", "cosPhi0", "v", "A", "B", "u", "t2", "lambda0", "lambda1", "phi0", "phi1", "delta", "code", "x0", "y0", "x1", "y1", "t0", "t1", "x0", "y0", "x1", "y1", "compareIntersection", "ca", "point", "ring", "visible", "linePoint", "v", "lambda0", "sinPhi0", "cosPhi0", "object", "object", "point", "coordinates", "ab", "y0", "y1", "y", "x0", "x1", "x", "X1", "X0", "Y1", "Y0", "graticule", "coordinates", "x0", "y0", "x1", "y1", "B", "A", "areaSum", "areaRingSum", "x0", "y0", "boundsStream", "boundsPoint", "bounds_default", "lengthSum", "projection", "object", "bounds_default", "extent", "x0", "y0", "lambda0", "x1", "y1", "lambda1", "lambda2", "lambda00", "point", "linePoint", "x0", "y0", "x1", "y1", "projection", "point", "extent", "object", "scale", "angle", "cc", "_arrayLikeToArray", "_arrayWithHoles", "_classCallCheck", "_createClass", "_unsupportedIterableToArray", "r", "u", "t", "_iterableToArrayLimit", "_nonIterableRest", "e", "_slicedToArray", "interpolateLine", "dist", "GeoJsonGeometry", "resolution", "groups", "vertices", "indices", "count", "index", "array", "object", "morphTargetsRelative", "a", "b", "c", "i", "il", "groups", "group", "v", "index", "obj", "color", "rgb", "B", "v", "hsl", "format", "max", "min", "p", "q", "hex", "hue", "number", "rgba", "named", "_arrayLikeToArray", "_arrayWithHoles", "_iterableToArrayLimit", "u", "r", "_nonIterableRest", "_slicedToArray", "_unsupportedIterableToArray", "index", "reduce", "flatten", "_arrayLikeToArray", "_arrayWithHoles", "_arrayWithoutHoles", "_toPropertyKey", "_iterableToArray", "_iterableToArrayLimit", "u", "r", "_nonIterableRest", "_nonIterableSpread", "_objectWithoutProperties", "_objectWithoutPropertiesLoose", "_slicedToArray", "_unsupportedIterableToArray", "_toConsumableArray", "_toPrimitive", "index", "isObjValid", "prevD", "nextD", "update", "data", "newObjs", "range", "Color", "format", "min", "max", "radians", "degrees", "Color", "degrees", "radians", "Color", "degrees", "Color", "radians", "cosh", "sinh", "t1", "t2", "t3", "constant_default", "constant_default", "color", "rgb", "zero", "i", "constant_default", "degrees", "identity", "identity", "scale", "epsilon2", "p0", "u", "hsl", "hue", "hcl", "hue", "cubehelix", "hue", "number", "identity", "range", "i", "transformer", "piecewise", "scale", "number", "u", "identity_default", "map", "locale", "group", "identity_default", "sign", "zero", "format", "formatPrefix", "value", "max", "count", "scale", "count", "linear", "t0", "t1", "count", "range", "ticks", "count", "reverse", "step", "locale", "formats", "pad", "format", "sign", "names", "locale", "defaultLocale", "x0", "y0", "x1", "y1", "tan", "sign", "sum", "flatten", "epsilon", "sum", "epsilon", "B", "D", "t1", "t0", "u3", "sum", "epsilon", "u", "epsilon", "bc", "ca", "ab", "u", "abt", "bct", "cat", "_8", "_16", "fin", "fin2", "epsilon", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "n", "p0", "median", "u2", "point", "epsilon", "x0", "y0", "t1", "t2", "t3", "x1", "y1", "ab", "i", "p0", "x0", "y0", "v", "flip", "tau", "pow", "cross", "collinear", "p0", "h", "t0", "t1", "t2", "array", "pi", "halfPi", "quarterPi", "tau", "degrees", "radians", "atan2", "cos", "max", "min", "sin", "sign", "sqrt", "asin", "halfPi", "cartesianDot", "cartesianCross", "sqrt", "spherical", "cartesian", "atan2", "degrees", "asin", "max", "min", "coordinates", "radians", "cos", "sin", "cartesianDot", "cartesianCross", "dist", "projection", "max2", "sqrt", "geo_triangles", "point", "sign", "u", "remove", "v", "data", "i", "index", "coordinates", "p0", "_arrayLikeToArray", "_arrayWithHoles", "_arrayWithoutHoles", "_assertThisInitialized", "_callSuper", "_getPrototypeOf", "_possibleConstructorReturn", "_isNativeReflectConstruct", "_classCallCheck", "_createClass", "t", "_inherits", "_setPrototypeOf", "_iterableToArray", "_iterableToArrayLimit", "u", "r", "_nonIterableRest", "_nonIterableSpread", "e", "_slicedToArray", "_unsupportedIterableToArray", "_toConsumableArray", "resolution", "flatten", "_loop", "i", "linear", "dist", "getPntLng", "getPntLat", "getPntIdx", "lng", "THREE", "setAttributeFn", "ConicPolygonBufferGeometry", "addGroup", "polar2Cartesian", "vertices", "indices", "uvs", "v", "libh3", "Module", "moduleOverrides", "key", "hasOwnProperty", "arguments_", "scriptDirectory", "locateFile", "path", "readAsync", "document", "currentScript", "src", "indexOf", "substr", "lastIndexOf", "url", "onload", "onerror", "xhr", "XMLHttpRequest", "open", "responseType", "xhr_onload", "status", "response", "data", "tryParseAsDataURI", "buffer", "send", "out", "console", "log", "bind", "err", "warn", "tempRet0", "setTempRet0", "value", "getTempRet0", "GLOBAL_BASE", "setValue", "ptr", "type", "noSafe", "charAt", "length", "HEAP8", "HEAP16", "HEAP32", "tempI64", "tempDouble", "Math_abs", "Math_min", "Math_floor", "Math_ceil", "HEAPF32", "HEAPF64", "abort", "getValue", "ABORT", "assert", "condition", "text", "getCFunc", "ident", "func", "ccall", "returnType", "argTypes", "args", "opts", "toC", "str", "ret", "undefined", "len", "stackAlloc", "stringToUTF8", "arr", "writeArrayToMemory", "convertReturnValue", "UTF8ToString", "Boolean", "cArgs", "stack", "i", "converter", "stackSave", "apply", "stackRestore", "cwrap", "numericArgs", "every", "numericRet", "arguments", "UTF8Decoder", "TextDecoder", "UTF8ArrayToString", "u8Array", "idx", "maxBytesToRead", "endIdx", "endPtr", "subarray", "decode", "u0", "String", "fromCharCode", "u1", "u2", "ch", "HEAPU8", "stringToUTF8Array", "outU8Array", "outIdx", "maxBytesToWrite", "startIdx", "u", "charCodeAt", "outPtr", "UTF16Decoder", "array", "set", "alignUp", "x", "multiple", "HEAPU16", "HEAPU32", "updateGlobalBufferAndViews", "buf", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint16Array", "Uint32Array", "Float32Array", "Float64Array", "DYNAMIC_BASE", "DYNAMICTOP_PTR", "INITIAL_TOTAL_MEMORY", "ArrayBuffer", "byteLength", "callRuntimeCallbacks", "callbacks", "callback", "shift", "arg", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATPOSTRUN__", "preRun", "addOnPreRun", "initRuntime", "preMain", "postRun", "addOnPostRun", "cb", "unshift", "Math", "abs", "ceil", "floor", "min", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "clearInterval", "memoryInitializer", "dataURIPrefix", "isDataURI", "filename", "prototype", "startsWith", "tempDoublePtr", "demangle", "demangleAll", "regex", "replace", "y", "jsStackTrace", "Error", "e", "toString", "stackTrace", "js", "___assert_fail", "line", "_emscripten_get_heap_size", "_emscripten_memcpy_big", "dest", "num", "___setErrNo", "abortOnCannotGrowMemory", "requestedSize", "emscripten_realloc_buffer", "size", "newBuffer", "_emscripten_replace_memory", "_emscripten_resize_heap", "oldSize", "PAGE_MULTIPLE", "LIMIT", "MIN_TOTAL_MEMORY", "newSize", "max", "replacement", "decodeBase64", "atob", "input", "keyStr", "output", "chr1", "chr2", "chr3", "enc1", "enc2", "enc3", "enc4", "intArrayFromBase64", "s", "decoded", "bytes", "_", "slice", "asmGlobalArg", "asmLibraryArg", "asm", "global", "env", "a", "b", "c", "d", "f", "o", "g", "p", "q", "r", "sqrt", "pow", "t", "cos", "sin", "v", "tan", "w", "acos", "asin", "atan", "z", "atan2", "A", "B", "imul", "C", "D", "E", "clz32", "G", "H", "I", "J", "K", "L", "M", "h", "N", "T", "W", "X", "Y", "Z", "$", "sc", "Kd", "Ed", "aa", "ba", "j", "k", "ca", "Vd", "da", "Dd", "Cd", "l", "m", "n", "Fb", "ea", "Md", "Ld", "Za", "Od", "Nb", "Tb", "Pd", "Pb", "ma", "sa", "Rb", "Ob", "na", "fa", "ga", "ha", "Vc", "Uc", "Fa", "ia", "F", "Ga", "Fd", "Ub", "ja", "Bd", "Wc", "Xb", "Xc", "ka", "sd", "Yb", "xd", "wd", "vd", "td", "la", "ud", "Ac", "Bc", "yd", "Dc", "Cc", "oa", "pa", "qa", "ra", "ta", "ua", "va", "wa", "xa", "ya", "za", "Aa", "Ba", "ic", "Ca", "Da", "Ea", "Ud", "ac", "kc", "Rd", "Sd", "Ha", "Ia", "Ja", "Ka", "La", "Ma", "Na", "Oa", "Pa", "Qa", "Ad", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "_a", "$a", "ab", "bb", "db", "eb", "fb", "gb", "Db", "hb", "ib", "jb", "kb", "Bb", "lb", "mb", "nb", "md", "Wb", "xb", "tb", "ob", "pb", "qb", "gc", "mc", "ld", "kd", "rb", "hd", "nc", "sb", "ub", "vb", "wb", "yb", "jd", "zb", "Ab", "Qd", "Cb", "Eb", "Mc", "Id", "Gb", "dc", "fc", "Hb", "Ib", "Jb", "Kb", "Lb", "Mb", "Qb", "Sb", "Vb", "Zb", "_b", "$b", "bc", "cc", "ec", "hc", "jc", "lc", "oc", "pc", "qc", "rc", "tc", "uc", "vc", "wc", "xc", "yc", "zc", "Ec", "Fc", "Gc", "Hc", "Ic", "Jc", "Kc", "Lc", "Td", "Nd", "Nc", "Oc", "Pc", "Qc", "Yc", "_c", "Rc", "Sc", "Tc", "Zc", "$c", "ad", "bd", "cd", "dd", "ed", "fd", "gd", "nd", "od", "pd", "qd", "rd", "zd", "Wd", "Xd", "Gd", "Hd", "Jd", "___divdi3", "___muldi3", "___remdi3", "___uremdi3", "_areNeighborCells", "_bitshift64Ashr", "_bitshift64Lshr", "_bitshift64Shl", "_calloc", "_cellAreaKm2", "_cellAreaM2", "_cellAreaRads2", "_cellToBoundary", "_cellToCenterChild", "_cellToChildPos", "_cellToChildren", "_cellToChildrenSize", "_cellToLatLng", "_cellToLocalIj", "_cellToParent", "_cellToVertex", "_cellToVertexes", "_cellsToDirectedEdge", "_cellsToLinkedMultiPolygon", "_childPosToCell", "_compactCells", "_destroyLinkedMultiPolygon", "_directedEdgeToBoundary", "_directedEdgeToCells", "_edgeLengthKm", "_edgeLengthM", "_edgeLengthRads", "_free", "_getBaseCellNumber", "_getDirectedEdgeDestination", "_getDirectedEdgeOrigin", "_getHexagonAreaAvgKm2", "_getHexagonAreaAvgM2", "_getHexagonEdgeLengthAvgKm", "_getHexagonEdgeLengthAvgM", "_getIcosahedronFaces", "_getNumCells", "_getPentagons", "_getRes0Cells", "_getResolution", "_greatCircleDistanceKm", "_greatCircleDistanceM", "_greatCircleDistanceRads", "_gridDisk", "_gridDiskDistances", "_gridDistance", "_gridPathCells", "_gridPathCellsSize", "_gridRingUnsafe", "_i64Add", "_i64Subtract", "_isPentagon", "_isResClassIII", "_isValidCell", "_isValidDirectedEdge", "_isValidVertex", "_latLngToCell", "_llvm_ctlz_i64", "_llvm_maxnum_f64", "_llvm_minnum_f64", "_llvm_round_f64", "_localIjToCell", "_malloc", "_maxFaceCount", "_maxGridDiskSize", "_maxPolygonToCellsSize", "_maxPolygonToCellsSizeExperimental", "_memcpy", "_memset", "_originToDirectedEdges", "_pentagonCount", "_polygonToCells", "_polygonToCellsExperimental", "_readInt64AsDoubleFromPointer", "_res0CellCount", "_round", "_sbrk", "_sizeOfCellBoundary", "_sizeOfCoordIJ", "_sizeOfGeoLoop", "_sizeOfGeoPolygon", "_sizeOfH3Index", "_sizeOfLatLng", "_sizeOfLinkedGeoPolygon", "_uncompactCells", "_uncompactCellsSize", "_vertexToLatLng", "establishStackSpace", "applyMemoryInitializer", "doBrowserLoad", "memoryInitializerBytes", "useRequest", "request", "setTimeout", "addEventListener", "calledRun", "runCaller", "run", "doRun", "what", "pop", "const", "NUMBER", "H3_ERROR", "BOOLEAN", "H3_LOWER", "H3_UPPER", "RESOLUTION", "POINTER", "E_SUCCESS", "E_FAILED", "E_DOMAIN", "E_LATLNG_DOMAIN", "E_RES_DOMAIN", "E_CELL_INVALID", "E_DIR_EDGE_INVALID", "E_UNDIR_EDGE_INVALID", "E_VERTEX_INVALID", "E_PENTAGON", "E_DUPLICATE_INPUT", "E_NOT_NEIGHBORS", "E_RES_MISMATCH", "E_MEMORY_ALLOC", "E_MEMORY_BOUNDS", "E_OPTION_INVALID", "H3_ERROR_MSGS", "E_UNKNOWN_UNIT", "E_ARRAY_LENGTH", "E_NULL_INDEX", "JS_ERROR_MESSAGES", "UNKNOWN_ERROR_MSG", "createError", "messages", "errCode", "meta", "hasValue", "code", "H3LibraryError", "JSBindingError", "throwIfError", "H3", "BINDINGS", "forEach", "def", "BASE_16", "const", "SZ_INT", "const", "SZ_DBL", "SZ_INT64", "SZ_H3INDEX", "H3", "sizeOfH3Index", "SZ_LATLNG", "sizeOfLatLng", "SZ_CELLBOUNDARY", "sizeOfCellBoundary", "SZ_GEOPOLYGON", "sizeOfGeoPolygon", "SZ_GEOLOOP", "sizeOfGeoLoop", "SZ_LINKED_GEOPOLYGON", "sizeOfLinkedGeoPolygon", "SZ_COORDIJ", "sizeOfCoordIJ", "validateRes", "res", "Math", "floor", "H3LibraryError", "E_RES_DOMAIN", "validateH3Index", "h3Index", "JSBindingError", "E_NULL_INDEX", "const", "MAX_JS_ARRAY_LENGTH", "pow", "validateArrayLength", "length", "E_ARRAY_LENGTH", "INVALID_HEXIDECIMAL_CHAR", "h3IndexToSplitLong", "Array", "isArray", "Number", "isInteger", "test", "upper", "parseInt", "substring", "BASE_16", "lower", "hexFrom32Bit", "num", "toString", "let", "tempStr", "zeroPad", "topNum", "splitLongToH3Index", "fullLen", "numStr", "numZeroes", "outStr", "i", "UPPER_BIT_DIVISOR", "polygonArrayToGeoLoop", "polygonArray", "geoLoop", "isGeoJson", "const", "numVerts", "length", "geoCoordArray", "C", "_calloc", "SZ_LATLNG", "latIndex", "lngIndex", "i", "HEAPF64", "set", "map", "degsToRads", "SZ_DBL", "HEAPU32", "SZ_INT", "coordinatesToGeoPolygon", "coordinates", "numHoles", "geoPolygon", "SZ_GEOPOLYGON", "geoLoopOffset", "numHolesOffset", "SZ_GEOLOOP", "holesOffset", "let", "holes", "setValue", "destroyGeoPolygon", "geoLoopArrayOffset", "_free", "getValue", "readH3IndexFromPointer", "cAddress", "offset", "lower", "SZ_H3INDEX", "upper", "splitLongToH3Index", "readInt64AsDoubleFromPointer", "cAddress", "H3", "readArrayOfH3Indexes", "cAddress", "maxCount", "const", "out", "i", "h3Index", "readH3IndexFromPointer", "push", "readSingleCoord", "cAddress", "radsToDegs", "C", "getValue", "readLatLng", "SZ_DBL", "readLatLngGeoJson", "readCellBoundary", "cellBoundary", "geoJsonCoords", "closedLoop", "const", "numVerts", "vertsPos", "out", "readCoord", "i", "push", "latLngToCell", "lat", "lng", "res", "const", "latLng", "C", "_malloc", "SZ_LATLNG", "HEAPF64", "set", "map", "degsToRads", "SZ_DBL", "h3Index", "SZ_H3INDEX", "throwIfError", "H3", "validateH3Index", "readH3IndexFromPointer", "_free", "cellToLatLng", "h3IndexToSplitLong", "lower", "upper", "readLatLng", "cellToBoundary", "formatAsGeoJson", "cellBoundary", "SZ_CELLBOUNDARY", "readCellBoundary", "polygonToCells", "coordinates", "res", "isGeoJson", "validateRes", "Boolean", "length", "const", "polygon", "geoPolygon", "coordinatesToGeoPolygon", "countPtr", "C", "_malloc", "SZ_INT64", "throwIfError", "H3", "maxPolygonToCellsSize", "count", "validateArrayLength", "readInt64AsDoubleFromPointer", "hexagons", "_calloc", "SZ_H3INDEX", "readArrayOfH3Indexes", "_free", "destroyGeoPolygon", "degsToRads", "deg", "Math", "PI", "radsToDegs", "rad", "index", "array", "THREE", "setAttributeFn", "intersects", "threshold", "resolution", "point", "scale", "object", "_vector", "_iterableToArrayLimit", "ownKeys", "object", "_objectSpread2", "_defineProperty", "_classCallCheck", "_toPropertyKey", "_createClass", "_inherits", "_setPrototypeOf", "_getPrototypeOf", "o", "p", "_isNativeReflectConstruct", "_construct", "Parent", "args", "Class", "_objectWithoutPropertiesLoose", "_objectWithoutProperties", "_assertThisInitialized", "self", "_possibleConstructorReturn", "_slicedToArray", "_arrayWithHoles", "_unsupportedIterableToArray", "_nonIterableRest", "_toConsumableArray", "_arrayWithoutHoles", "_iterableToArray", "_nonIterableSpread", "_arrayLikeToArray", "_toPrimitive", "materialDispose", "deallocate", "emptyObject", "onChange", "v", "polar2Cartesian", "color", "update", "globeMaterial", "colorStr2Hex", "colorAlpha", "color2ShaderArr", "rgba", "removeFn", "_default", "init", "index", "applyUpdate", "_excluded", "_FrameTicker", "setAttributeFn$1", "_destructor", "group", "stroke", "getVec", "alt", "angle", "linear", "getVertexColor", "d", "relNum", "material", "opacity", "margin", "curvatureResolution", "geoJson", "extendArr", "setAttributeFn", "getInterpolatedVals", "interpolateLine", "dist", "applyPosition", "deg2Rad", "scale", "CircleLineGeometry", "time", "updateFn", "THREE$2", "obj", "THREE$1", "THREE", "isBehindGlobe", "stateInit", "layers", "initGlobe", "FromKapsule"]
}
